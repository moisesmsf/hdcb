{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hardening + Debian + CIS Benchmarks","text":"<p>This project simplifies the application of the CIS Benchmarks for the Debian Linux OS.</p> <p>In short, it brings the Audit and Recommendation sections of all security settings contained in the latest version to the most recent release of Debian Linux available in the CIS Benchmarks.</p> <p>In Tags it is possible to find the recommended security configurations based on several aspects, such as the mapping between a recommendation and the CIS Critical Security Controls (CIS Controls) version, Safeguard and Implementation Group (IG) and the mapping between a recommendation and the MITRE ATT&amp;CK tactics, techniques, and mitigations.</p> <p>For full documentation visit: CIS Benchmark Debian Linux.</p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#tag:103-disable-autorun-and-autoplay-for-removable-media","title":"10.3 Disable Autorun and Autoplay for Removable Media","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> </ul>"},{"location":"tags/#tag:105-enable-anti-exploitation-features","title":"10.5 Enable Anti-Exploitation Features","text":"<ul> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> </ul>"},{"location":"tags/#tag:310-encrypt-sensitive-data-in-transit","title":"3.10 Encrypt Sensitive Data in Transit","text":"<ul> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> </ul>"},{"location":"tags/#tag:311-encrypt-sensitive-data-at-rest","title":"3.11 Encrypt Sensitive Data at Rest","text":"<ul> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> </ul>"},{"location":"tags/#tag:314-log-sensitive-data-access","title":"3.14 Log Sensitive Data Access","text":"<ul> <li>            6.3.1 Ensure AIDE is installed          </li> </ul>"},{"location":"tags/#tag:33-configure-data-access-control-lists","title":"3.3 Configure Data Access Control Lists","text":"<ul> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:41-establish-and-maintain-a-secure-configuration-process","title":"4.1 Establish and Maintain a Secure Configuration Process","text":"<ul> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:43-configure-automatic-session-locking-on-enterprise-assets","title":"4.3 Configure Automatic Session Locking on Enterprise Assets","text":"<ul> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> </ul>"},{"location":"tags/#tag:44-implement-and-manage-a-firewall-on-servers","title":"4.4 Implement and Manage a Firewall on Servers","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:45-implement-and-manage-a-firewall-on-end-user-devices","title":"4.5 Implement and Manage a Firewall on End-User Devices","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:48-uninstall-or-disable-unnecessary-services-on-enterprise-assets-and-software","title":"4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> </ul>"},{"location":"tags/#tag:52-use-unique-passwords","title":"5.2 Use Unique Passwords","text":"<ul> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> </ul>"},{"location":"tags/#tag:54-restrict-administrator-privileges-to-dedicated-administrator-accounts","title":"5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","text":"<ul> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> </ul>"},{"location":"tags/#tag:62-establish-an-access-revoking-process","title":"6.2 Establish an Access Revoking Process","text":"<ul> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> </ul>"},{"location":"tags/#tag:73-perform-automated-operating-system-patch-management","title":"7.3 Perform Automated Operating System Patch Management","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:74-perform-automated-application-patch-management","title":"7.4 Perform Automated Application Patch Management","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:82-collect-audit-logs","title":"8.2 Collect Audit Logs","text":"<ul> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> </ul>"},{"location":"tags/#tag:83-ensure-adequate-audit-log-storage","title":"8.3 Ensure Adequate Audit Log Storage","text":"<ul> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> </ul>"},{"location":"tags/#tag:84-standardize-time-synchronization","title":"8.4 Standardize Time Synchronization","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> </ul>"},{"location":"tags/#tag:85-collect-detailed-audit-logs","title":"8.5 Collect Detailed Audit Logs","text":"<ul> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:89-centralize-audit-logs","title":"8.9 Centralize Audit Logs","text":"<ul> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> </ul>"},{"location":"tags/#tag:access-control","title":"Access Control","text":"<ul> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> </ul>"},{"location":"tags/#tag:automated","title":"Automated","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:confgure-pam-arguments","title":"Confgure PAM Arguments","text":"<ul> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> </ul>"},{"location":"tags/#tag:configure-devshm","title":"Configure /dev/shm","text":"<ul> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> </ul>"},{"location":"tags/#tag:configure-home","title":"Configure /home","text":"<ul> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> </ul>"},{"location":"tags/#tag:configure-tmp","title":"Configure /tmp","text":"<ul> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> </ul>"},{"location":"tags/#tag:configure-var","title":"Configure /var","text":"<ul> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> </ul>"},{"location":"tags/#tag:configure-varlog","title":"Configure /var/log","text":"<ul> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> </ul>"},{"location":"tags/#tag:configure-varlogaudit","title":"Configure /var/log/audit","text":"<ul> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> </ul>"},{"location":"tags/#tag:configure-vartmp","title":"Configure /var/tmp","text":"<ul> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> </ul>"},{"location":"tags/#tag:configure-additional-process-hardening","title":"Configure Additional Process Hardening","text":"<ul> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> </ul>"},{"location":"tags/#tag:configure-apparmor","title":"Configure AppArmor","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> </ul>"},{"location":"tags/#tag:configure-bootloader","title":"Configure Bootloader","text":"<ul> <li>            1.4.1 Ensure bootloader password is set          </li> </ul>"},{"location":"tags/#tag:configure-client-services","title":"Configure Client Services","text":"<ul> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> </ul>"},{"location":"tags/#tag:configure-command-line-warning-banners","title":"Configure Command Line Warning Banners","text":"<ul> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> </ul>"},{"location":"tags/#tag:configure-data-retention","title":"Configure Data Retention","text":"<ul> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> </ul>"},{"location":"tags/#tag:configure-filesystem-kernel-modules","title":"Configure Filesystem Kernel Modules","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> </ul>"},{"location":"tags/#tag:configure-gnome-display-manager","title":"Configure GNOME Display Manager","text":"<ul> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> </ul>"},{"location":"tags/#tag:configure-ipv4-iptables","title":"Configure IPv4 iptables","text":"<ul> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:configure-ipv6-ip6tables","title":"Configure IPv6 ip6tables","text":"<ul> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:configure-integrity-checking","title":"Configure Integrity Checking","text":"<ul> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:configure-logfiles","title":"Configure Logfiles","text":"<ul> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> </ul>"},{"location":"tags/#tag:configure-network-devices","title":"Configure Network Devices","text":"<ul> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> </ul>"},{"location":"tags/#tag:configure-network-kernel-modules","title":"Configure Network Kernel Modules","text":"<ul> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> </ul>"},{"location":"tags/#tag:configure-network-kernel-parameters","title":"Configure Network Kernel Parameters","text":"<ul> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> </ul>"},{"location":"tags/#tag:configure-pam-arguments","title":"Configure PAM Arguments","text":"<ul> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> </ul>"},{"location":"tags/#tag:configure-pam-software-packages","title":"Configure PAM software packages","text":"<ul> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> </ul>"},{"location":"tags/#tag:configure-ssh-server","title":"Configure SSH Server","text":"<ul> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> </ul>"},{"location":"tags/#tag:configure-server-services","title":"Configure Server Services","text":"<ul> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> </ul>"},{"location":"tags/#tag:configure-shadow-password-suite-parameters","title":"Configure Shadow Password Suite Parameters","text":"<ul> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:configure-system-accounting-auditd","title":"Configure System Accounting (auditd)","text":"<ul> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> </ul>"},{"location":"tags/#tag:configure-time-synchronization","title":"Configure Time Synchronization","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> </ul>"},{"location":"tags/#tag:configure-uncomplicatedfirewall","title":"Configure UncomplicatedFirewall","text":"<ul> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> </ul>"},{"location":"tags/#tag:configure-a-single-firewall-utility","title":"Configure a single firewall utility","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> </ul>"},{"location":"tags/#tag:configure-at","title":"Configure at","text":"<ul> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> </ul>"},{"location":"tags/#tag:configure-auditd-service","title":"Configure auditd Service","text":"<ul> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> </ul>"},{"location":"tags/#tag:configure-auditd-file-access","title":"Configure auditd file access","text":"<ul> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> </ul>"},{"location":"tags/#tag:configure-auditd-rules","title":"Configure auditd rules","text":"<ul> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> </ul>"},{"location":"tags/#tag:configure-chrony","title":"Configure chrony","text":"<ul> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> </ul>"},{"location":"tags/#tag:configure-cron","title":"Configure cron","text":"<ul> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> </ul>"},{"location":"tags/#tag:configure-filesystem-partitions","title":"Configure filesystem partitions","text":"<ul> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> </ul>"},{"location":"tags/#tag:configure-iptables","title":"Configure iptables","text":"<ul> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> </ul>"},{"location":"tags/#tag:configure-iptables-software","title":"Configure iptables software","text":"<ul> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> </ul>"},{"location":"tags/#tag:configure-journald","title":"Configure journald","text":"<ul> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> </ul>"},{"location":"tags/#tag:configure-nftables","title":"Configure nftables","text":"<ul> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> </ul>"},{"location":"tags/#tag:configure-package-repositories","title":"Configure package repositories","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> </ul>"},{"location":"tags/#tag:configure-package-updates","title":"Configure package updates","text":"<ul> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:configure-pam-auth-update-profiles","title":"Configure pam-auth-update profiles","text":"<ul> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> </ul>"},{"location":"tags/#tag:configure-pam_faillock-module","title":"Configure pam_faillock module","text":"<ul> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> </ul>"},{"location":"tags/#tag:configure-pam_pwhistory-module","title":"Configure pam_pwhistory module","text":"<ul> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> </ul>"},{"location":"tags/#tag:configure-pam_pwquality-module","title":"Configure pam_pwquality module","text":"<ul> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> </ul>"},{"location":"tags/#tag:configure-pam_unix-module","title":"Configure pam_unix module","text":"<ul> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> </ul>"},{"location":"tags/#tag:configure-privilege-escalation","title":"Configure privilege escalation","text":"<ul> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> </ul>"},{"location":"tags/#tag:configure-root-and-system-accounts-and-environment","title":"Configure root and system accounts and environment","text":"<ul> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> </ul>"},{"location":"tags/#tag:configure-rsyslog","title":"Configure rsyslog","text":"<ul> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> </ul>"},{"location":"tags/#tag:configure-systemd-journald-service","title":"Configure systemd-journald service","text":"<ul> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> </ul>"},{"location":"tags/#tag:configure-systemd-journald-remote","title":"Configure systemd-journald-remote","text":"<ul> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> </ul>"},{"location":"tags/#tag:configure-systemd-timesyncd","title":"Configure systemd-timesyncd","text":"<ul> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> </ul>"},{"location":"tags/#tag:configure-user-default-environment","title":"Configure user default environment","text":"<ul> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> </ul>"},{"location":"tags/#tag:ensure-time-synchronization-is-in-use","title":"Ensure time synchronization is in use","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> </ul>"},{"location":"tags/#tag:filesystem","title":"Filesystem","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> </ul>"},{"location":"tags/#tag:filesystem-integrity-checking","title":"Filesystem Integrity Checking","text":"<ul> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:firewall-configuration","title":"Firewall Configuration","text":"<ul> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> </ul>"},{"location":"tags/#tag:host-based-firewall","title":"Host Based Firewall","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:ig1","title":"IG1","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:ig2","title":"IG2","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:ig3","title":"IG3","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:initial-setup","title":"Initial Setup","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:job-schedulers","title":"Job Schedulers","text":"<ul> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> </ul>"},{"location":"tags/#tag:job-shedulers","title":"Job Shedulers","text":"<ul> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> </ul>"},{"location":"tags/#tag:level-1","title":"Level 1","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:level-2","title":"Level 2","text":"<ul> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:local-user-and-group-settings","title":"Local User and Group Settings","text":"<ul> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:logging-and-auditing","title":"Logging and Auditing","text":"<ul> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:m1001","title":"M1001","text":"<ul> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> </ul>"},{"location":"tags/#tag:m1012","title":"M1012","text":"<ul> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> </ul>"},{"location":"tags/#tag:m1018","title":"M1018","text":"<ul> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> </ul>"},{"location":"tags/#tag:m1022","title":"M1022","text":"<ul> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:m1026","title":"M1026","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> </ul>"},{"location":"tags/#tag:m1027","title":"M1027","text":"<ul> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> </ul>"},{"location":"tags/#tag:m1028","title":"M1028","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> </ul>"},{"location":"tags/#tag:m1029","title":"M1029","text":"<ul> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> </ul>"},{"location":"tags/#tag:m1030","title":"M1030","text":"<ul> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> </ul>"},{"location":"tags/#tag:m1031","title":"M1031","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:m1033","title":"M1033","text":"<ul> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> </ul>"},{"location":"tags/#tag:m1034","title":"M1034","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> </ul>"},{"location":"tags/#tag:m1035","title":"M1035","text":"<ul> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> </ul>"},{"location":"tags/#tag:m1036","title":"M1036","text":"<ul> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> </ul>"},{"location":"tags/#tag:m1037","title":"M1037","text":"<ul> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:m1038","title":"M1038","text":"<ul> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> </ul>"},{"location":"tags/#tag:m1040","title":"M1040","text":"<ul> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> </ul>"},{"location":"tags/#tag:m1041","title":"M1041","text":"<ul> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> </ul>"},{"location":"tags/#tag:m1042","title":"M1042","text":"<ul> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> </ul>"},{"location":"tags/#tag:m1046","title":"M1046","text":"<ul> <li>            1.4.1 Ensure bootloader password is set          </li> </ul>"},{"location":"tags/#tag:m1047","title":"M1047","text":"<ul> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> </ul>"},{"location":"tags/#tag:m1048","title":"M1048","text":"<ul> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> </ul>"},{"location":"tags/#tag:m1050","title":"M1050","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> </ul>"},{"location":"tags/#tag:m1051","title":"M1051","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:m1053","title":"M1053","text":"<ul> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> </ul>"},{"location":"tags/#tag:m1057","title":"M1057","text":"<ul> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> </ul>"},{"location":"tags/#tag:ma1027","title":"MA1027","text":"<ul> <li>            5.4.1.2 Ensure minimum password days is configured          </li> </ul>"},{"location":"tags/#tag:mandatory-access-control","title":"Mandatory Access Control","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> </ul>"},{"location":"tags/#tag:manual","title":"Manual","text":"<ul> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> </ul>"},{"location":"tags/#tag:network","title":"Network","text":"<ul> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> </ul>"},{"location":"tags/#tag:network-configuration","title":"Network Configuration","text":"<ul> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> </ul>"},{"location":"tags/#tag:network-parameters-host-and-router","title":"Network Parameters (Host and Router)","text":"<ul> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> </ul>"},{"location":"tags/#tag:nothing-should-be-returned","title":"Nothing should be returned","text":"<ul> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> </ul>"},{"location":"tags/#tag:package-management","title":"Package Management","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:pluggable-authentication-modules","title":"Pluggable Authentication Modules","text":"<ul> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> </ul>"},{"location":"tags/#tag:secure-boot-settings","title":"Secure Boot Settings","text":"<ul> <li>            1.4.2 Ensure access to bootloader config is configured          </li> </ul>"},{"location":"tags/#tag:server","title":"Server","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:services","title":"Services","text":"<ul> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> </ul>"},{"location":"tags/#tag:system-auditing","title":"System Auditing","text":"<ul> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> </ul>"},{"location":"tags/#tag:system-file-permissions","title":"System File Permissions","text":"<ul> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> </ul>"},{"location":"tags/#tag:system-logging","title":"System Logging","text":"<ul> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> </ul>"},{"location":"tags/#tag:system-maintenance","title":"System Maintenance","text":"<ul> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:t083","title":"T083","text":"<ul> <li>            5.4.3.3 Ensure default user umask is configured          </li> </ul>"},{"location":"tags/#tag:t1003","title":"T1003","text":"<ul> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.4 Ensure shadow group is empty          </li> </ul>"},{"location":"tags/#tag:t1003008","title":"T1003.008","text":"<ul> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.4 Ensure shadow group is empty          </li> </ul>"},{"location":"tags/#tag:t1005","title":"T1005","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> </ul>"},{"location":"tags/#tag:t1011","title":"T1011","text":"<ul> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> </ul>"},{"location":"tags/#tag:t1018","title":"T1018","text":"<ul> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> </ul>"},{"location":"tags/#tag:t1021","title":"T1021","text":"<ul> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.4 Ensure SSH access is limited          </li> </ul>"},{"location":"tags/#tag:t1021004","title":"T1021.004","text":"<ul> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.4 Ensure SSH access is limited          </li> </ul>"},{"location":"tags/#tag:t1036","title":"T1036","text":"<ul> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1036002","title":"T1036.002","text":"<ul> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1036003","title":"T1036.003","text":"<ul> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1036004","title":"T1036.004","text":"<ul> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1036005","title":"T1036.005","text":"<ul> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1039","title":"T1039","text":"<ul> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> </ul>"},{"location":"tags/#tag:t1040","title":"T1040","text":"<ul> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> </ul>"},{"location":"tags/#tag:t1052","title":"T1052","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> </ul>"},{"location":"tags/#tag:t1052001","title":"T1052.001","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> </ul>"},{"location":"tags/#tag:t1053","title":"T1053","text":"<ul> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> </ul>"},{"location":"tags/#tag:t1053003","title":"T1053.003","text":"<ul> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> </ul>"},{"location":"tags/#tag:t1055","title":"T1055","text":"<ul> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> </ul>"},{"location":"tags/#tag:t1055008","title":"T1055.008","text":"<ul> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> </ul>"},{"location":"tags/#tag:t1056","title":"T1056","text":"<ul> <li>            1.7.10 Ensure XDCMP is not enabled          </li> </ul>"},{"location":"tags/#tag:t1056001","title":"T1056.001","text":"<ul> <li>            1.7.10 Ensure XDCMP is not enabled          </li> </ul>"},{"location":"tags/#tag:t1068","title":"T1068","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> </ul>"},{"location":"tags/#tag:t1070","title":"T1070","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:t1070002","title":"T1070.002","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:t1078","title":"T1078","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> </ul>"},{"location":"tags/#tag:t1078001","title":"T1078.001","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> </ul>"},{"location":"tags/#tag:t1078002","title":"T1078.002","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1078003","title":"T1078.003","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> </ul>"},{"location":"tags/#tag:t1078004","title":"T1078.004","text":"<ul> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1082","title":"T1082","text":"<ul> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> </ul>"},{"location":"tags/#tag:t1083","title":"T1083","text":"<ul> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> </ul>"},{"location":"tags/#tag:t1087","title":"T1087","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> </ul>"},{"location":"tags/#tag:t1087001","title":"T1087.001","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> </ul>"},{"location":"tags/#tag:t1087002","title":"T1087.002","text":"<ul> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> </ul>"},{"location":"tags/#tag:t1091","title":"T1091","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> </ul>"},{"location":"tags/#tag:t1098","title":"T1098","text":"<ul> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> </ul>"},{"location":"tags/#tag:t1098004","title":"T1098.004","text":"<ul> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> </ul>"},{"location":"tags/#tag:t1105","title":"T1105","text":"<ul> <li>            2.1.13 Ensure rsync services are not in use          </li> </ul>"},{"location":"tags/#tag:t1110","title":"T1110","text":"<ul> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1110001","title":"T1110.001","text":"<ul> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1110002","title":"T1110.002","text":"<ul> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1110003","title":"T1110.003","text":"<ul> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1110004","title":"T1110.004","text":"<ul> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> </ul>"},{"location":"tags/#tag:t1135","title":"T1135","text":"<ul> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> </ul>"},{"location":"tags/#tag:t1152","title":"T1152","text":"<ul> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> </ul>"},{"location":"tags/#tag:t1152003","title":"T1152.003","text":"<ul> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> </ul>"},{"location":"tags/#tag:t1152004","title":"T1152.004","text":"<ul> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> </ul>"},{"location":"tags/#tag:t1178001","title":"T1178.001","text":"<ul> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> </ul>"},{"location":"tags/#tag:t1178002","title":"T1178.002","text":"<ul> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> </ul>"},{"location":"tags/#tag:t1178003","title":"T1178.003","text":"<ul> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> </ul>"},{"location":"tags/#tag:t1178004","title":"T1178.004","text":"<ul> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> </ul>"},{"location":"tags/#tag:t1195","title":"T1195","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:t1195001","title":"T1195.001","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:t1195002","title":"T1195.002","text":"<ul> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> </ul>"},{"location":"tags/#tag:t1200","title":"T1200","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> </ul>"},{"location":"tags/#tag:t1203","title":"T1203","text":"<ul> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> </ul>"},{"location":"tags/#tag:t1204","title":"T1204","text":"<ul> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> </ul>"},{"location":"tags/#tag:t1204002","title":"T1204.002","text":"<ul> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> </ul>"},{"location":"tags/#tag:t120402","title":"T1204.02","text":"<ul> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> </ul>"},{"location":"tags/#tag:t1210","title":"T1210","text":"<ul> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> </ul>"},{"location":"tags/#tag:t1211","title":"T1211","text":"<ul> <li>            2.1.1 Ensure autofs services are not in use          </li> </ul>"},{"location":"tags/#tag:t1212","title":"T1212","text":"<ul> <li>            2.1.1 Ensure autofs services are not in use          </li> </ul>"},{"location":"tags/#tag:t1222","title":"T1222","text":"<ul> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:t1222001","title":"T1222.001","text":"<ul> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> </ul>"},{"location":"tags/#tag:t1222002","title":"T1222.002","text":"<ul> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:t1456","title":"T1456","text":"<ul> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> </ul>"},{"location":"tags/#tag:t1461","title":"T1461","text":"<ul> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> </ul>"},{"location":"tags/#tag:t1497","title":"T1497","text":"<ul> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> </ul>"},{"location":"tags/#tag:t1498","title":"T1498","text":"<ul> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> </ul>"},{"location":"tags/#tag:t1498001","title":"T1498.001","text":"<ul> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> </ul>"},{"location":"tags/#tag:t1498002","title":"T1498.002","text":"<ul> <li>            2.1.12 Ensure rpcbind services are not in use          </li> </ul>"},{"location":"tags/#tag:t1499","title":"T1499","text":"<ul> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> </ul>"},{"location":"tags/#tag:t1499001","title":"T1499.001","text":"<ul> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> </ul>"},{"location":"tags/#tag:t1499002","title":"T1499.002","text":"<ul> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> </ul>"},{"location":"tags/#tag:t1542","title":"T1542","text":"<ul> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> </ul>"},{"location":"tags/#tag:t1543","title":"T1543","text":"<ul> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> </ul>"},{"location":"tags/#tag:t1543002","title":"T1543.002","text":"<ul> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> </ul>"},{"location":"tags/#tag:t1548","title":"T1548","text":"<ul> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> </ul>"},{"location":"tags/#tag:t1548001","title":"T1548.001","text":"<ul> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> </ul>"},{"location":"tags/#tag:t1548003","title":"T1548.003","text":"<ul> <li>            5.2.2 Ensure sudo commands use pty          </li> </ul>"},{"location":"tags/#tag:t1552","title":"T1552","text":"<ul> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> </ul>"},{"location":"tags/#tag:t1552004","title":"T1552.004","text":"<ul> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> </ul>"},{"location":"tags/#tag:t1557","title":"T1557","text":"<ul> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> </ul>"},{"location":"tags/#tag:t1562","title":"T1562","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> </ul>"},{"location":"tags/#tag:t1562001","title":"T1562.001","text":"<ul> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> </ul>"},{"location":"tags/#tag:t1562004","title":"T1562.004","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:t1562006","title":"T1562.006","text":"<ul> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> </ul>"},{"location":"tags/#tag:t1565","title":"T1565","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1565001","title":"T1565.001","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:t1565003","title":"T1565.003","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> </ul>"},{"location":"tags/#tag:t1570","title":"T1570","text":"<ul> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> </ul>"},{"location":"tags/#tag:t1590","title":"T1590","text":"<ul> <li>            3.3.8 Ensure source routed packets are not accepted          </li> </ul>"},{"location":"tags/#tag:t1590005","title":"T1590.005","text":"<ul> <li>            3.3.8 Ensure source routed packets are not accepted          </li> </ul>"},{"location":"tags/#tag:t1592","title":"T1592","text":"<ul> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> </ul>"},{"location":"tags/#tag:t1592004","title":"T1592.004","text":"<ul> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> </ul>"},{"location":"tags/#tag:t1595","title":"T1595","text":"<ul> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> </ul>"},{"location":"tags/#tag:t1595001","title":"T1595.001","text":"<ul> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> </ul>"},{"location":"tags/#tag:t1595002","title":"T1595.002","text":"<ul> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> </ul>"},{"location":"tags/#tag:ta0001","title":"TA0001","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.3.1 Ensure AIDE is installed          </li> </ul>"},{"location":"tags/#tag:ta0002","title":"TA0002","text":"<ul> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.7.1 Ensure GNOME Display Manager is removed          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> </ul>"},{"location":"tags/#tag:ta0003","title":"TA0003","text":"<ul> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> </ul>"},{"location":"tags/#tag:ta0004","title":"TA0004","text":"<ul> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> </ul>"},{"location":"tags/#tag:ta0005","title":"TA0005","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"tags/#tag:ta0006","title":"TA0006","text":"<ul> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> </ul>"},{"location":"tags/#tag:ta0007","title":"TA0007","text":"<ul> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.7.2 Ensure GDM login banner is configured          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> </ul>"},{"location":"tags/#tag:ta0008","title":"TA0008","text":"<ul> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.20 Ensure X window server services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> </ul>"},{"location":"tags/#tag:ta0009","title":"TA0009","text":"<ul> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> </ul>"},{"location":"tags/#tag:ta0010","title":"TA0010","text":"<ul> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            3.1.2 Ensure wireless interfaces are disabled          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> </ul>"},{"location":"tags/#tag:ta0011","title":"TA0011","text":"<ul> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> </ul>"},{"location":"tags/#tag:ta0027","title":"TA0027","text":"<ul> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> </ul>"},{"location":"tags/#tag:ta0040","title":"TA0040","text":"<ul> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> </ul>"},{"location":"tags/#tag:user-accounts-and-environment","title":"User Accounts and Environment","text":"<ul> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> </ul>"},{"location":"tags/#tag:workstation","title":"Workstation","text":"<ul> <li>            1.1.1.1 Ensure cramfs kernel module is not available          </li> <li>            1.1.1.10 Ensure unused filesystems kernel modules are not available          </li> <li>            1.1.1.2 Ensure freevxfs kernel module is not available          </li> <li>            1.1.1.3 Ensure hfs kernel module is not available          </li> <li>            1.1.1.4 Ensure hfsplus kernel module is not available          </li> <li>            1.1.1.5 Ensure jffs2 kernel module is not available          </li> <li>            1.1.1.6 Ensure overlayfs kernel module is not available          </li> <li>            1.1.1.7 Ensure squashfs kernel module is not available          </li> <li>            1.1.1.8 Ensure udf kernel module is not available          </li> <li>            1.1.1.9 Ensure usb storage kernel module is not available          </li> <li>            1.1.2.1.2 Ensure nodev option set on /tmp partition          </li> <li>            1.1.2.1.3 Ensure nosuid option set on /tmp partition          </li> <li>            1.1.2.1.4 Ensure noexec option set on /tmp partition          </li> <li>            1.1.2.2.1 Ensure /dev/shm is a separate partition          </li> <li>            1.1.2.2.1 Ensure /tmp is a separate partition          </li> <li>            1.1.2.2.2 Ensure nodev option set on /dev/shm partition          </li> <li>            1.1.2.2.3 Ensure nosuid option set on /dev/shm partition          </li> <li>            1.1.2.2.4 Ensure noexec option set on /dev/shm partition          </li> <li>            1.1.2.3.1 Ensure separate partition exists for /home          </li> <li>            1.1.2.3.2 Ensure nodev option set on /home partition          </li> <li>            1.1.2.3.3 Ensure nosuid option set on /home partition          </li> <li>            1.1.2.4.1 Ensure separate partition exists for /var          </li> <li>            1.1.2.4.2 Ensure nodev option set on /var partition          </li> <li>            1.1.2.4.3 Ensure nosuid option set on /var partition          </li> <li>            1.1.2.5.1 Ensure separate partition exists for /var/tmp          </li> <li>            1.1.2.5.2 Ensure nodev option set on /var/tmp partition          </li> <li>            1.1.2.5.3 Ensure nosuid option set on /var/tmp partition          </li> <li>            1.1.2.5.4 Ensure noexec option set on /var/tmp partition          </li> <li>            1.1.2.6.1 Ensure separate partition exists for /var/log          </li> <li>            1.1.2.6.2 Ensure nodev option set on /var/log partition          </li> <li>            1.1.2.6.3 Ensure nosuid option set on /var/log partition          </li> <li>            1.1.2.6.4 Ensure noexec option set on /var/log partition          </li> <li>            1.1.2.7.1 Ensure separate partition exists for /var/log/audit          </li> <li>            1.1.2.7.2 Ensure nodev option set on /var/log/audit partition          </li> <li>            1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition          </li> <li>            1.1.2.7.4 Ensure noexec option set on /var/log/audit partition          </li> <li>            1.2.1.1 Ensure GPG keys are configured          </li> <li>            1.2.1.2 Ensure package manager repositories are configured          </li> <li>            1.2.2.1 Ensure updates, patches, and additional security software are installed          </li> <li>            1.3.1.1 Ensure AppArmor is installed          </li> <li>            1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration          </li> <li>            1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode          </li> <li>            1.3.1.4 Ensure all AppArmor Profiles are enforcing          </li> <li>            1.4.1 Ensure bootloader password is set          </li> <li>            1.4.2 Ensure access to bootloader config is configured          </li> <li>            1.5.1 Ensure address space layout randomization is enabled          </li> <li>            1.5.2 Ensure ptrace_scope is restricted          </li> <li>            1.5.3 Ensure core dumps are restricted          </li> <li>            1.6.1 Ensure message of the day is configured properly          </li> <li>            1.6.2 Ensure local login warning banner is configured properly          </li> <li>            1.6.3 Ensure remote login warning banner is configured properly          </li> <li>            1.6.4 Ensure access to /etc/motd is configured          </li> <li>            1.6.5 Ensure access to /etc/issue is configured          </li> <li>            1.6.6 Ensure access to /etc/issue.net is configured          </li> <li>            1.7.10 Ensure XDCMP is not enabled          </li> <li>            1.7.3 Ensure GDM disable-user-list option is enabled          </li> <li>            1.7.4 Ensure GDM screen locks when the user is idle          </li> <li>            1.7.5 Ensure GDM screen locks cannot be overridden          </li> <li>            1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden          </li> <li>            1.7.8 Ensure GDM autorun-never is enabled          </li> <li>            1.7.9 Ensure GDM autorun-never is not overridden          </li> <li>            1.8.6 Ensure GDM automatic mounting of removable media is disabled          </li> <li>            2.1.1 Ensure autofs services are not in use          </li> <li>            2.1.10 Ensure nis server services are not in use          </li> <li>            2.1.11 Ensure print server services are not in use          </li> <li>            2.1.12 Ensure rpcbind services are not in use          </li> <li>            2.1.13 Ensure rsync services are not in use          </li> <li>            2.1.14 Ensure samba file server services are not in use          </li> <li>            2.1.15 Ensure snmp services are not in use          </li> <li>            2.1.16 Ensure tftp server services are not in use          </li> <li>            2.1.17 Ensure web proxy server services are not in use          </li> <li>            2.1.18 Ensure web server services are not in use          </li> <li>            2.1.19 Ensure xinetd services are not in use          </li> <li>            2.1.2 Ensure avahi daemon services are not in use          </li> <li>            2.1.21 Ensure mail transfer agent is configured for local-only mode          </li> <li>            2.1.22 Ensure only approved services are listening on a network interface          </li> <li>            2.1.3 Ensure dhcp server services are not in use          </li> <li>            2.1.4 Ensure dns server services are not in use          </li> <li>            2.1.5 Ensure dnsmasq services are not in use          </li> <li>            2.1.6 Ensure ftp server services are not in use          </li> <li>            2.1.7 Ensure ldap server services are not in use          </li> <li>            2.1.8 Ensure message access server services are not in use          </li> <li>            2.1.9 Ensure network file system services are not in use          </li> <li>            2.2.1 Ensure NIS Client is not installed          </li> <li>            2.2.2 Ensure rsh client is not installed          </li> <li>            2.2.3 Ensure talk client is not installed          </li> <li>            2.2.4 Ensure telnet client is not installed          </li> <li>            2.2.5 Ensure LDAP client is not installed          </li> <li>            2.2.6 Ensure ftp client is not installed          </li> <li>            2.3.1.1 Ensure a single time synchronization daemon is in use          </li> <li>            2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver          </li> <li>            2.3.2.2 Ensure systemd-timesyncd is enabled and running          </li> <li>            2.3.3.1 Ensure chrony is configured with authorized timeserver          </li> <li>            2.3.3.2 Ensure chrony is running as user _chrony          </li> <li>            2.3.3.3 Ensure chrony is enabled and running          </li> <li>            2.4.1.1 Ensure cron daemon is enabled and active          </li> <li>            2.4.1.2 Ensure permissions on /etc/crontab are configured          </li> <li>            2.4.1.3 Ensure permissions on /etc/cron.hourly are configured          </li> <li>            2.4.1.4 Ensure permissions on /etc/cron.daily are configured          </li> <li>            2.4.1.5 Ensure permissions on /etc/cron.weekly are configured          </li> <li>            2.4.1.6 Ensure permissions on /etc/cron.monthly are configured          </li> <li>            2.4.1.7 Ensure permissions on /etc/cron.d are configured          </li> <li>            2.4.1.8 Ensure cron is restricted to authorized users          </li> <li>            2.4.2.1 Ensure at is restricted to authorized users          </li> <li>            3.1.1 Ensure IPv6 status is identified          </li> <li>            3.1.3 Ensure bluetooth services are not in use          </li> <li>            3.2.1 Ensure dccp kernel module is not available          </li> <li>            3.2.2 Ensure tipc kernel module is not available          </li> <li>            3.2.3 Ensure rds kernel module is not available          </li> <li>            3.2.4 Ensure sctp kernel module is not available          </li> <li>            3.3.1 Ensure IP forwarding is disabled          </li> <li>            3.3.10 Ensure TCP SYN Cookies is enabled          </li> <li>            3.3.11 Ensure IPv6 router advertisements are not accepted          </li> <li>            3.3.2 Ensure packet redirect sending is disabled          </li> <li>            3.3.3 Ensure bogus ICMP responses are ignored          </li> <li>            3.3.4 Ensure broadcast ICMP requests are ignored          </li> <li>            3.3.5 Ensure ICMP redirects are not accepted          </li> <li>            3.3.6 Ensure secure ICMP redirects are not accepted          </li> <li>            3.3.7 Ensure Reverse Path Filtering is enabled          </li> <li>            3.3.8 Ensure source routed packets are not accepted          </li> <li>            3.3.9 Ensure suspicious packets are logged          </li> <li>            4.1.1 Ensure a single firewall configuration utility is in use          </li> <li>            4.2.1 Ensure ufw is installed          </li> <li>            4.2.2 Ensure iptables-persistent is not installed with ufw          </li> <li>            4.2.3 Ensure ufw service is enabled          </li> <li>            4.2.4 Ensure ufw loopback traffic is configured          </li> <li>            4.2.5 Ensure ufw outbound connections are configured          </li> <li>            4.2.6 Ensure ufw firewall rules exist for all open ports          </li> <li>            4.2.7 Ensure ufw default deny firewall policy          </li> <li>            4.3.1 Ensure nftables is installed          </li> <li>            4.3.10 Ensure nftables rules are permanent          </li> <li>            4.3.2 Ensure ufw is uninstalled or disabled with nftables          </li> <li>            4.3.3 Ensure iptables are flushed with nftables          </li> <li>            4.3.4 Ensure a nftables table exists          </li> <li>            4.3.5 Ensure nftables base chains exist          </li> <li>            4.3.7 Ensure nftables outbound and established connections are configured          </li> <li>            4.3.8 Ensure nftables default deny firewall policy          </li> <li>            4.3.9 Ensure nftables service is enabled          </li> <li>            4.4.1.1 Ensure iptables packages are installed          </li> <li>            4.4.1.2 Ensure nftables is not in use with iptables          </li> <li>            4.4.1.3 Ensure ufw is not in use with iptables          </li> <li>            4.4.2.1 Ensure iptables default deny firewall policy          </li> <li>            4.4.2.2 Ensure iptables loopback traffic is configured          </li> <li>            4.4.2.3 Ensure iptables outbound and established connections are configured          </li> <li>            4.4.2.4 Ensure iptables firewall rules exist for all open ports          </li> <li>            4.4.3.1 Ensure ip6tables default deny firewall policy          </li> <li>            4.4.3.2 Ensure ip6tables loopback traffic is configured          </li> <li>            4.4.3.3 Ensure ip6tables outbound and established connections are configured          </li> <li>            4.4.3.4 Ensure ip6tables firewall rules exist for all open ports          </li> <li>            5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured          </li> <li>            5.1.10 Ensure sshd HostbasedAuthentication is disabled          </li> <li>            5.1.11 Ensure sshd IgnoreRhosts is enabled          </li> <li>            5.1.12 Ensure sshd KexAlgorithms is configured          </li> <li>            5.1.13 Ensure sshd LoginGraceTime is configured          </li> <li>            5.1.14 Ensure sshd LogLevel is configured          </li> <li>            5.1.15 Ensure sshd MACs are configured          </li> <li>            5.1.16 Ensure sshd MaxAuthTries is configured          </li> <li>            5.1.17 Ensure sshd MaxSessions is configured          </li> <li>            5.1.18 Ensure sshd MaxStartups is configured          </li> <li>            5.1.19 Ensure sshd PermitEmptyPasswords is disabled          </li> <li>            5.1.2 Ensure permissions on SSH private host key files are configured          </li> <li>            5.1.20 Ensure sshd PermitRootLogin is disabled          </li> <li>            5.1.21 Ensure sshd PermitUserEnvironment is disabled          </li> <li>            5.1.22 Ensure sshd UsePAM is enabled          </li> <li>            5.1.3 Ensure permissions on SSH public host key files are configured          </li> <li>            5.1.4 Ensure SSH access is limited          </li> <li>            5.1.5 Ensure sshd banner is configured          </li> <li>            5.1.6 Ensure sshd Ciphers are configured          </li> <li>            5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured          </li> <li>            5.1.8 Ensure sshd DisableForwarding is enabled          </li> <li>            5.1.9 Ensure sshd GSSAPIAuthentication is disabled          </li> <li>            5.2.1 Ensure sudo is installed          </li> <li>            5.2.2 Ensure sudo commands use pty          </li> <li>            5.2.3 Ensure sudo log file exists          </li> <li>            5.2.4 Ensure users must provide password for privilege escalation          </li> <li>            5.2.5 Ensure re-authentication for privilege escalation is not disabled globally          </li> <li>            5.2.6 Ensure sudo authentication timeout is configured correctly          </li> <li>            5.2.7 Ensure access to the su command is restricted          </li> <li>            5.3.1.1 Ensure latest version of pam is installed          </li> <li>            5.3.1.2 Ensure libpam-modules is installed          </li> <li>            5.3.1.3 Ensure libpam-pwquality is installed          </li> <li>            5.3.2.1 Ensure pam_unix module is enabled          </li> <li>            5.3.2.2 Ensure pam_faillock module is enabled          </li> <li>            5.3.2.3 Ensure pam_pwquality module is enabled          </li> <li>            5.3.2.4 Ensure pam_history module is enabled          </li> <li>            5.3.3.1.1 Ensure password failed attempts lockout is configured          </li> <li>            5.3.3.1.2 Ensure password unlock time is configured          </li> <li>            5.3.3.1.3 Ensure password failed attempts lockout includes root account          </li> <li>            5.3.3.2.1 Ensure password number of changed characters is configured          </li> <li>            5.3.3.2.2 Ensure minimum password length is configured          </li> <li>            5.3.3.2.4 Ensure password same consecutive characters is configured          </li> <li>            5.3.3.2.5 Ensure password maximum sequential characters is configured          </li> <li>            5.3.3.2.6 Ensure password dictionary check is enabled          </li> <li>            5.3.3.2.7 Ensure password quality checking is enforced          </li> <li>            5.3.3.2.8 Ensure password quality is enforced for the root user          </li> <li>            5.3.3.3.1 Ensure password history remember is configured          </li> <li>            5.3.3.3.2 Ensure password history is enforced for the root user          </li> <li>            5.3.3.3.3 Ensure pam_pwhistory includes use_authtok          </li> <li>            5.3.3.4.1 Ensure pam_unix does not include nullok          </li> <li>            5.3.3.4.2 Ensure pam_unix does not include remember          </li> <li>            5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm          </li> <li>            5.3.3.4.4 Ensure pam_unix includes use_authtok          </li> <li>            5.4.1.1 Ensure password expiration is configured          </li> <li>            5.4.1.2 Ensure minimum password days is configured          </li> <li>            5.4.1.3 Ensure password expiration warning days is configured          </li> <li>            5.4.1.4 Ensure strong password hashing algorithm is configured          </li> <li>            5.4.1.5 Ensure inactive password lock is configured          </li> <li>            5.4.1.6 Ensure all users last password change date is in the past          </li> <li>            5.4.2.1 Ensure root is the only UID 0 account          </li> <li>            5.4.2.2 Ensure root is the only GID 0 account          </li> <li>            5.4.2.3 Ensure group root is the only GID 0 group          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.4 Ensure root account access is controlled          </li> <li>            5.4.2.6 Ensure root user umask is configured          </li> <li>            5.4.2.7 Ensure system accounts do not have a valid login shell          </li> <li>            5.4.2.8 Ensure accounts without a valid login shell are locked          </li> <li>            5.4.3.1 Ensure nologin is not listed in /etc/shells          </li> <li>            5.4.3.2 Ensure default user shell timeout is configured          </li> <li>            5.4.3.3 Ensure default user umask is configured          </li> <li>            6.1.1.1 Ensure journald service is enabled and active          </li> <li>            6.1.1.2 Ensure journald log file access is configured          </li> <li>            6.1.1.3 Ensure journald log file rotation is configured          </li> <li>            6.1.1.4 Ensure only one logging system is in use          </li> <li>            6.1.2.1.1 Ensure systemd-journal-remote is installed          </li> <li>            6.1.2.1.2 Ensure systemd-journal-upload authentication is configured          </li> <li>            6.1.2.1.3 Ensure systemd-journal-upload is enabled and active          </li> <li>            6.1.2.1.4 Ensure systemd-journal-remote service is not in use          </li> <li>            6.1.2.2 Ensure journald ForwardToSyslog is disabled          </li> <li>            6.1.2.3 Ensure journald Compress is configured          </li> <li>            6.1.2.4 Ensure journald Storage is configured          </li> <li>            6.1.3.1 Ensure rsyslog is installed          </li> <li>            6.1.3.2 Ensure rsyslog service is enabled and active          </li> <li>            6.1.3.3 Ensure journald is configured to send logs to rsyslog          </li> <li>            6.1.3.4 Ensure rsyslog log file creation mode is configured          </li> <li>            6.1.3.5 Ensure rsyslog logging is configured          </li> <li>            6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host          </li> <li>            6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client          </li> <li>            6.1.3.8 Ensure logrotate is configured          </li> <li>            6.1.4.1 Ensure access to all logfiles has been configured          </li> <li>            6.2.1.1 Ensure auditd packages are installed          </li> <li>            6.2.1.2 Ensure auditd service is enabled and active          </li> <li>            6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled          </li> <li>            6.2.1.4 Ensure audit_backlog_limit is sufficient          </li> <li>            6.2.2.1 Ensure audit log storage size is configured          </li> <li>            6.2.2.2 Ensure audit logs are not automatically deleted          </li> <li>            6.2.2.3 Ensure system is disabled when audit logs are full          </li> <li>            6.2.2.4 Ensure system warns when audit logs are low on space          </li> <li>            6.2.3.1 Ensure changes to system administration scope (sudoers) is collected          </li> <li>            6.2.3.10 Ensure successful file system mounts are collected          </li> <li>            6.2.3.11 Ensure session initiation information is collected          </li> <li>            6.2.3.12 Ensure login and logout events are collected          </li> <li>            6.2.3.13 Ensure file deletion events by users are collected          </li> <li>            6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected          </li> <li>            6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected          </li> <li>            6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected          </li> <li>            6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected          </li> <li>            6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected          </li> <li>            6.2.3.19 Ensure kernel module loading unloading and modification is collected          </li> <li>            6.2.3.2 Ensure actions as another user are always logged          </li> <li>            6.2.3.20 Ensure the audit configuration is immutable          </li> <li>            6.2.3.21 Ensure the running and on disk configuration is the same          </li> <li>            6.2.3.3 Ensure events that modify the sudo log file are collected          </li> <li>            6.2.3.4 Ensure events that modify date and time information are collected          </li> <li>            6.2.3.5 Ensure events that modify the system's network environment are collected          </li> <li>            6.2.3.6 Ensure use of privileged commands are collected          </li> <li>            6.2.3.7 Ensure unsuccessful file access attempts are collected          </li> <li>            6.2.3.8 Ensure events that modify user/group information are collected          </li> <li>            6.2.3.9 Ensure discretionary access control permission modification events are collected          </li> <li>            6.2.4.1 Ensure audit log files mode is configured          </li> <li>            6.2.4.10 Ensure audit tools group owner is configured          </li> <li>            6.2.4.2 Ensure audit log files owner is configured          </li> <li>            6.2.4.3 Ensure audit log files group owner is configured          </li> <li>            6.2.4.4 Ensure the audit log file directory mode is configured          </li> <li>            6.2.4.5 Ensure audit configuration files mode is configured          </li> <li>            6.2.4.6 Ensure audit configuration files owner is configured          </li> <li>            6.2.4.7 Ensure audit configuration files group owner is configured          </li> <li>            6.2.4.8 Ensure audit tools mode is configured          </li> <li>            6.2.4.9 Ensure audit tools owner is configured          </li> <li>            6.3.1 Ensure AIDE is installed          </li> <li>            6.3.2 Ensure filesystem integrity is regularly checked          </li> <li>            6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool          </li> <li>            7.1.1 Ensure permissions on /etc/passwd are configured          </li> <li>            7.1.10 Ensure permissions on /etc/security/opasswd are configured          </li> <li>            7.1.11 Ensure world writable files and directories are secured          </li> <li>            7.1.12 Ensure no files or directories without an owner and a group exist          </li> <li>            7.1.13 Ensure SUID and SGID files are reviewed          </li> <li>            7.1.2 Ensure permissions on /etc/passwd- are configured          </li> <li>            7.1.3 Ensure permissions on /etc/group are configured          </li> <li>            7.1.4 Ensure permissions on /etc/group- are configured          </li> <li>            7.1.5 Ensure permissions on /etc/shadow are configured          </li> <li>            7.1.6 Ensure permissions on /etc/shadow- are configured          </li> <li>            7.1.7 Ensure permissions on /etc/gshadow are configured          </li> <li>            7.1.8 Ensure permissions on /etc/gshadow- are configured          </li> <li>            7.1.9 Ensure permissions on /etc/shells are configured          </li> <li>            7.2.1 Ensure accounts in /etc/passwd use shadowed passwords          </li> <li>            7.2.10 Ensure local interactive user dot files access is configured          </li> <li>            7.2.2 Ensure /etc/shadow password fields are not empty          </li> <li>            7.2.3 Ensure all groups in /etc/passwd exist in /etc/group          </li> <li>            7.2.4 Ensure shadow group is empty          </li> <li>            7.2.5 Ensure no duplicate UIDs exist          </li> <li>            7.2.6 Ensure no duplicate GIDs exist          </li> <li>            7.2.7 Ensure no duplicate user names exist          </li> <li>            7.2.8 Ensure no duplicate group names exist          </li> <li>            7.2.9 Ensure local interactive user home directories are configured          </li> </ul>"},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.1-Ensure-cramfs-kernel-module-is-not-available/","title":"1.1.1.1 Ensure cramfs kernel module is not available","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.1-Ensure-cramfs-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the cramfs kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the cramfs kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"cramfs\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module:\n\\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\"\n\"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.1-Ensure-cramfs-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the cramfs module: - IF - the cramfs kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install cramfs /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist cramfs in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r cramfs 2&gt;/dev/null; rmmod cramfs 2&gt;/dev/null to remove cramfs from the kernel</li> </ul> <p>- IF - the cramfs kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"cramfs\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.10-Ensure-unused-filesystems-kernel-modules-are-not-available/","title":"1.1.1.10 Ensure unused filesystems kernel modules are not available","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.10-Ensure-unused-filesystems-kernel-modules-are-not-available/#audit","title":"Audit","text":"<p>Run the following script to:</p> <ul> <li>Look at the filesystem kernel modules available to the currently running kernel.</li> <li>Exclude mounted filesystem kernel modules that don't currently have a CVE</li> <li>List filesystem kernel modules that are not fully disabled, or are loaded into the kernel</li> </ul> <p>Review the generated output</p> <p><pre><code>#! /usr/bin/env bash\n{\na_output=(); a_output2=(); a_modprope_config=(); a_excluded=(); a_available_modules=()\na_ignore=(\"xfs\" \"vfat\" \"ext2\" \"ext3\" \"ext4\")\na_cve_exists=(\"afs\" \"ceph\" \"cifs\" \"exfat\" \"fat\" \"fscache\" \"fuse\" \"gfs2\")\nf_module_chk()\n{\nl_out2=\"\"; grep -Pq -- \"\\b$l_mod_name\\b\" &lt;&lt;&lt; \"${a_cve_exists[*]}\" &amp;&amp; l_out2=\" &lt;- CVE exists!\"\nif ! grep -Pq -- '\\bblacklist\\h+'\"$l_mod_name\"'\\b' &lt;&lt;&lt; \"${a_modprope_config[*]}\"; then\na_output2+=(\" - Kernel module: \\\"$l_mod_name\\\" is not fully disabled $l_out2\")\nelif ! grep -Pq -- '\\binstall\\h+'\"$l_mod_name\"'\\h+(\\/usr)?\\/bin\\/(false|true)\\b' &lt;&lt;&lt; \"${a_modprope_config[*]}\"; then\na_output2+=(\" - Kernel module: \\\"$l_mod_name\\\" is not fully disabled $l_out2\")\nfi\nif lsmod | grep \"$l_mod_name\" &amp;&gt; /dev/null; then # Check if the module is currently loaded\nl_output2+=(\" - Kernel module: \\\"$l_mod_name\\\" is loaded\" \"\")\nfi\n}\nwhile IFS= read -r -d $'\\0' l_module_dir; do\na_available_modules+=(\"$(basename \"$l_module_dir\")\")\ndone &lt; &lt;(find \"$(readlink -f /lib/modules/\"$(uname -r)\"/kernel/fs)\" -mindepth 1 -maxdepth 1 -type d ! -empty -print0)\nwhile IFS= read -r l_exclude; do\nif grep -Pq -- \"\\b$l_exclude\\b\" &lt;&lt;&lt; \"${a_cve_exists[*]}\"; then\na_output2+=(\" - ** WARNING: kernel module: \\\"$l_exclude\\\" has a CVE and is currently mounted! **\")\nelif\ngrep -Pq -- \"\\b$l_exclude\\b\" &lt;&lt;&lt; \"${a_available_modules[*]}\"; then\na_output+=(\" - Kernel module: \\\"$l_exclude\\\" is currently mounted - do NOT unload or disable\")\nfi\n! grep -Pq -- \"\\b$l_exclude\\b\" &lt;&lt;&lt; \"${a_ignore[*]}\" &amp;&amp; a_ignore+=(\"$l_exclude\")\ndone &lt; &lt;(findmnt -knD | awk '{print $2}' | sort -u)\nwhile IFS= read -r l_config; do\na_modprope_config+=(\"$l_config\")\ndone &lt; &lt;(modprobe --showconfig | grep -P '^\\h*(blacklist|install)')\nfor l_mod_name in \"${a_available_modules[@]}\"; do # Iterate over all filesystem modules\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_name=\"${l_mod_name::-2}\"\nif grep -Pq -- \"\\b$l_mod_name\\b\" &lt;&lt;&lt; \"${a_ignore[*]}\"; then\na_excluded+=(\" - Kernel module: \\\"$l_mod_name\\\"\")\nelse\nf_module_chk\nfi\ndone\n[ \"${#a_excluded[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \\\"The following intentionally skipped\" \\\"${a_excluded[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \" - No unused filesystem kernel modules are enabled\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"-- Audit Result: --\" \" ** REVIEW the following **\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"-- Correctly set: --\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre> WARNING: disabling or denylisting filesystem modules that are in use on the system may be FATAL. It is extremely important to thoroughly review this list.</p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.10-Ensure-unused-filesystems-kernel-modules-are-not-available/#remediation","title":"Remediation","text":"<p>- IF - the module is available in the running kernel:</p> <ul> <li>Unload the filesystem kernel module from the kernel</li> <li>Create a file ending in .conf with install filesystem kernel modules /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with deny list filesystem kernel modules in the /etc/modprobe.d/ directory</li> </ul> <p>WARNING: unloading, disabling or denylisting filesystem modules that are in use on the system maybe FATAL. It is extremely important to thoroughly review the filesystems returned by the audit before following the remediation procedure.</p> <p>Example of unloading the gfs2 kernel module: <pre><code># modprobe -r gfs2 2&gt;/dev/null\n# rmmod gfs2 2&gt;/dev/null\n</code></pre></p> <p>Example of fully disabling the gfs2 kernel module: <pre><code># printf '%s\\n' \"blacklist gfs2\" \"install gfs2 /bin/false\" &gt;&gt; /etc/modprobe.d/gfs2.conf\n</code></pre></p> <p>Note:</p> <ul> <li>Disabling a kernel module by modifying the command above for each unused filesystem kernel module</li> <li>The example gfs2 must be updated with the appropriate module name for the command or example script bellow to run correctly.</li> </ul> <p>Below is an example Script that can be modified to use on various filesystem kernel modules manual remediation process: Example Script</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=(); a_output3=(); l_dl=\"\" # Initialize arrays and clear variables\nl_mod_name=\"gfs2\" # set module name\nl_mod_type=\"fs\" # set module type\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" # Set to ignore duplicate checks\na_showconfig=() # Create array with modprobe output\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_name\" &amp;&gt; /dev/null; then # Check if the module is currently loaded\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\necho -e \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.2-Ensure-freevxfs-kernel-module-is-not-available/","title":"1.1.1.2 Ensure freevxfs kernel module is not available","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.2-Ensure-freevxfs-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the freevxfs kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the freevxfs kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"freevxfs\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\"\n\"${a_output[@]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.2-Ensure-freevxfs-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the freevxfs module: - IF - the freevxfs kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install freevxfs /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist freevxfs in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r freevxfs 2&gt;/dev/null; rmmod freevxfs 2&gt;/dev/null to remove freevxfs from the kernel</li> </ul> <p>- IF - the freevxfs kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"freevxfs\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to\n\\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\"\ncomplete\" \"\"\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.3-Ensure-hfs-kernel-module-is-not-available/","title":"1.1.1.3 Ensure hfs kernel module is not available","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.3-Ensure-hfs-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the hfs kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the hfs kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfs\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\"\n\"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.3-Ensure-hfs-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the hfs module: - IF - the hfs kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install hfs /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist hfs in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r hfs 2&gt;/dev/null; rmmod hfs 2&gt;/dev/null to remove hfs from the kernel</li> </ul> <p>- IF - the hfs kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfs\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to\n\\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\"\ncomplete\" \"\"\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.4-Ensure-hfsplus-kernel-module-is-not-available/","title":"1.1.1.4 Ensure hfsplus kernel module is not available","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.4-Ensure-hfsplus-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the hfsplus kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the hfsplus kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfsplus\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.4-Ensure-hfsplus-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the hfsplus module: - IF - the hfsplus kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install hfsplus /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist hfsplus in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r hfsplus 2&gt;/dev/null; rmmod hfsplus 2&gt;/dev/null to remove hfsplus from the kernel</li> </ul> <p>- IF - the hfsplus kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"hfsplus\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to\n\\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\"\ncomplete\" \"\"\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.5-Ensure-jffs2-kernel-module-is-not-available/","title":"1.1.1.5 Ensure jffs2 kernel module is not available","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.5-Ensure-jffs2-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the jffs2 kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the jffs2 kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"jffs2\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.5-Ensure-jffs2-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the jffs2 module: - IF - the jffs2 kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install jffs2 /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist jffs2 in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r jffs2 2&gt;/dev/null; rmmod jffs2 2&gt;/dev/null to remove jffs2 from the kernel</li> </ul> <p>- IF - the jffs2 kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"jffs2\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.6-Ensure-overlayfs-kernel-module-is-not-available/","title":"1.1.1.6 Ensure overlayfs kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.6-Ensure-overlayfs-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the overlayfs kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the overlayfs kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"overlayfs\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.6-Ensure-overlayfs-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the overlayfs module: - IF - the overlayfs kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install overlayfs /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist overlayfs in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r overlayfs 2&gt;/dev/null; rmmod overlayfs 2&gt;/dev/null to remove overlayfs from the kernel</li> </ul> <p>- IF - the overlayfs kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"overlayfs\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.7-Ensure-squashfs-kernel-module-is-not-available/","title":"1.1.1.7 Ensure squashfs kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.7-Ensure-squashfs-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the squashfs kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the squashfs kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"squashfs\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre> <p>Note: On operating systems where squashfs is pre-build into the kernel:</p> <ul> <li>This is considered an acceptable \"passing\" state</li> <li>The kernel should not be re-compiled to remove squashfs</li> <li>This audit will return a passing state with \"module: \"squashfs\" doesn't exist in ...\"</li> </ul>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.7-Ensure-squashfs-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the squashfs module: - IF - the squashfs kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install squashfs /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist squashfs in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r squashfs 2&gt;/dev/null; rmmod squashfs 2&gt;/dev/null to remove squashfs from the kernel</li> </ul> <p>- IF - the squashfs kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"squashfs\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.8-Ensure-udf-kernel-module-is-not-available/","title":"1.1.1.8 Ensure udf kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.8-Ensure-udf-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the udf kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the udf kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"udf\"\nl_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.8-Ensure-udf-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the udf module: - IF - the udf kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install udf /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist udf in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r udf 2&gt;/dev/null; rmmod udf 2&gt;/dev/null to remove udf from the kernel</li> </ul> <p>- IF - the udf kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"udf\" l_mod_type=\"fs\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","TA0005","M1050"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.9-Ensure-usb-storage-kernel-module-is-not-available/","title":"1.1.1.9 Ensure usb storage kernel module is not available","text":"","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1052","T1052.001","T1091","T1200","TA0001","TA0010","M1034"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.9-Ensure-usb-storage-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the usb-storage kernel module is available in ANY installed kernel, verify:  </p> <ul> <li>An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory  </li> <li>The module is deny listed in a file within the /etc/modprobe.d/ directory  </li> <li>The module is not loaded in the running kernel  </li> </ul> <p>- IF - the usb-storage kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"usb-storage\"\nl_mod_type=\"drivers\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1052","T1052.001","T1091","T1200","TA0001","TA0010","M1034"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.1-Configure-filesystem-kernel-modules/1.1.1.9-Ensure-usb-storage-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the usb-storage module: - IF - the usb-storage kernel module is available in ANY installed kernel:</p> <ul> <li>Create a file ending in .conf with install usb-storage /bin/false in the /etc/modprobe.d/ directory</li> <li>Create a file ending in .conf with blacklist usb-storage in the /etc/modprobe.d/ directory</li> <li>Run modprobe -r usb-storage 2&gt;/dev/null; rmmod usb-storage 2&gt;/dev/null to remove usb-storage from the kernel</li> </ul> <p>- IF - the usb-storage kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"usb-storage\"\nl_mod_type=\"drivers\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\"\n2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Filesystem","Configure Filesystem Kernel Modules","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1052","T1052.001","T1091","T1200","TA0001","TA0010","M1034"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.1-Ensure-tmp-is-a-separate-partition/","title":"1.1.2.2.1 Ensure /tmp is a separate partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.1-Ensure-tmp-is-a-separate-partition/#audit","title":"Audit","text":"<p>Run the following command and verify the output shows that /tmp is mounted. Particular requirements pertaining to mount options are covered in ensuing sections. <pre><code># findmnt -kn /tmp\n/tmp tmpfs tmpfs rw,nosuid,nodev,noexec,inode6\n</code></pre> Ensure that systemd will mount the /tmp partition at boot time <pre><code># systemctl is-enabled tmp.mount\ngenerated\n</code></pre> Note that by default systemd will output generated if there is an entry in /etc/fstab for /tmp. This just means systemd will use the entry in /etc/fstab instead of it's default unit file configuration for /tmp.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.1-Ensure-tmp-is-a-separate-partition/#remediation","title":"Remediation","text":"<p>First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time. <pre><code># systemctl unmask tmp.mount\n</code></pre> For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab. Example of using tmpfs with specific mount options: <pre><code>tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0\n</code></pre> Example of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment: <pre><code>&lt;device&gt; /tmp &lt;fstype&gt; defaults,nodev,nosuid,noexec 0 0\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.2-Ensure-nodev-option-set-on-tmp-partition/","title":"1.1.2.1.2 Ensure nodev option set on /tmp partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.2-Ensure-nodev-option-set-on-tmp-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /tmp, verify that the nodev option is set for the /tmp mount. Run the following command to verify that the nodev mount option is set. Example: <pre><code># findmnt -kn /tmp | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.2-Ensure-nodev-option-set-on-tmp-partition/#remediation","title":"Remediation","text":"<p>- IF -a separate partition exists for /tmp. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition. Example: <pre><code>&lt;device&gt; /tmp &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre> Run the following command to remount /tmp with the configured options: <pre><code>mount -o remount /tmp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.3-Ensure-nosuid-option-set-on-tmp-partition/","title":"1.1.2.1.3 Ensure nosuid option set on /tmp partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.3-Ensure-nosuid-option-set-on-tmp-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /tmp, verify that the nosuid option is set for the /tmp mount. Run the following command to verify that the nosuid mount option is set. Example: <pre><code># findmnt -kn /tmp | grep -v nosuid\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.3-Ensure-nosuid-option-set-on-tmp-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /tmp. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition. Example: <pre><code>&lt;device&gt; /tmp &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre> Run the following command to remount /tmp with the configured options: <pre><code># mount -o remount /tmp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.4-Ensure-noexec-option-set-on-tmp-partition/","title":"1.1.2.1.4 Ensure noexec option set on /tmp partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.4-Ensure-noexec-option-set-on-tmp-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /tmp, verify that the noexec option is set for the /tmp mount. Run the following command to verify that the noexec mount option is set. Example: <pre><code># findmnt -kn /tmp | grep -v noexec\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.1-Configure-tmp/1.1.2.1.4-Ensure-noexec-option-set-on-tmp-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /tmp. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition. Example: <pre><code>&lt;device&gt; /tmp &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre> Run the following command to remount /tmp with the configured options: <pre><code># mount -o remount /tmp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.1-Ensure-dev-shm-is-a-separate-partition/","title":"1.1.2.2.1 Ensure /dev/shm is a separate partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.1-Ensure-dev-shm-is-a-separate-partition/#audit","title":"Audit","text":"<p>-IF- /dev/shm is to be used on the system, run the following command and verify the output shows that /dev/shm is mounted. Particular requirements pertaining to mount options are covered in ensuing sections. <pre><code># findmnt -kn /dev/shm\n/dev/shm tmpfs tmpfs rw,nosuid,nodev,noexec,relatime,seclabel\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.1-Ensure-dev-shm-is-a-separate-partition/#remediation","title":"Remediation","text":"<p>For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab. <pre><code>tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.2-Ensure-nodev-option-set-on-dev-shm-partition/","title":"1.1.2.2.2 Ensure nodev option set on /dev/shm partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.2-Ensure-nodev-option-set-on-dev-shm-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /dev/shm, verify that the nodev option is set. <pre><code># findmnt -kn /dev/shm | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.2-Ensure-nodev-option-set-on-dev-shm-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /dev/shm. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example: <pre><code>tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /dev/shm with the configured options: <pre><code># mount -o remount /dev/shm\n</code></pre></p> <p>Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.3-Ensure-nosuid-option-set-on-dev-shm-partition/","title":"1.1.2.2.3 Ensure nosuid option set on /dev/shm partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.3-Ensure-nosuid-option-set-on-dev-shm-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /dev/shm, verify that the nosuid option is set. <pre><code># findmnt -kn /dev/shm | grep -v 'nosuid'\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.3-Ensure-nosuid-option-set-on-dev-shm-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /dev/shm. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information. Example <pre><code>tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /dev/shm with the configured options: <pre><code># mount -o remount /dev/shm\n</code></pre></p> <p>Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.4-Ensure-noexec-option-set-on-dev-shm-partition/","title":"1.1.2.2.4 Ensure noexec option set on /dev/shm partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.02","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.4-Ensure-noexec-option-set-on-dev-shm-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /dev/shm, verify that the noexec option is set. <pre><code># findmnt -kn /dev/shm | grep -v 'noexec'\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.02","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.2-Configure-dev-shm/1.1.2.2.4-Ensure-noexec-option-set-on-dev-shm-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /dev/shm. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.</p> <p>Example: <pre><code>tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /dev/shm with the configured options: <pre><code># mount -o remount /dev/shm\n</code></pre></p> <p>Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /dev/shm","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.02","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.1-Ensure-separate-partition-exists-for-home/","title":"1.1.2.3.1 Ensure separate partition exists for /home","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.1-Ensure-separate-partition-exists-for-home/#audit","title":"Audit","text":"<p>Run the following command and verify output shows /home is mounted: <pre><code># findmnt -kn /home\n/home /dev/sdb ext4 rw,nosuid,nodev,noexec,relatime,seclabel\n</code></pre></p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.1-Ensure-separate-partition-exists-for-home/#remediation","title":"Remediation","text":"<p>For new installations, during installation create a custom partition setup and specify a separate partition for /home.</p> <p>For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.</p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.2-Ensure-nodev-option-set-on-home-partition/","title":"1.1.2.3.2 Ensure nodev option set on /home partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.2-Ensure-nodev-option-set-on-home-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /home, verify that the nodev option is set.</p> <p>Run the following command to verify that the nodev mount option is set.</p> <p>Example: <pre><code># findmnt -kn /home | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.2-Ensure-nodev-option-set-on-home-partition/#remediation","title":"Remediation","text":"<ul> <li>IF - a separate partition exists for /home. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.</li> </ul> <p>Example: <pre><code>&lt;device&gt; /home &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /home with the configured options: <pre><code># mount -o remount /home\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.3-Ensure-nosuid-option-set-on-home-partition/","title":"1.1.2.3.3 Ensure nosuid option set on /home partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.3-Ensure-nosuid-option-set-on-home-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /home, verify that the nosuid option is set.</p> <p>Run the following command to verify that the nosuid mount option is set.</p> <p>Example: <pre><code># findmnt -kn /home | grep -v nosuid\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.3-Configure-home/1.1.2.3.3-Ensure-nosuid-option-set-on-home-partition/#remediation","title":"Remediation","text":"<p>** -IF - a separate partition exists for /home. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home** partition.</p> <p>Example: <pre><code>&lt;device&gt; /home &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /home with the configured options: <pre><code># mount -o remount /home\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /home","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.1-Ensure-separate-partition-exists-for-var/","title":"1.1.2.4.1 Ensure separate partition exists for /var","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0006","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.1-Ensure-separate-partition-exists-for-var/#audit","title":"Audit","text":"<p>Run the following command and verify output shows /var is mounted.</p> <p>Example: <pre><code># findmnt -kn /var\n/var /dev/sdb ext4 rw,nosuid,nodev,noexec,relatime,seclabel\n</code></pre></p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0006","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.1-Ensure-separate-partition-exists-for-var/#remediation","title":"Remediation","text":"<p>For new installations, during installation create a custom partition setup and specify a separate partition for /var.</p> <p>For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.</p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0006","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.2-Ensure-nodev-option-set-on-var-partition/","title":"1.1.2.4.2 Ensure nodev option set on /var partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.2-Ensure-nodev-option-set-on-var-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var, verify that the nodev option is set for the /var mount.</p> <p>Run the following command to verify that the nodev mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.2-Ensure-nodev-option-set-on-var-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.</p> <p>Example: <pre><code>&lt;device&gt; /var &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /var with the configured options: <pre><code># mount -o remount /var\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.3-Ensure-nosuid-option-set-on-var-partition/","title":"1.1.2.4.3 Ensure nosuid option set on /var partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.3-Ensure-nosuid-option-set-on-var-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var. verify that the nosuid option is set.</p> <p>Run the following command to verify that the nosuid mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var | grep -v nosuid\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.4-Configure-var/1.1.2.4.3-Ensure-nosuid-option-set-on-var-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.</p> <p>Example: <pre><code>&lt;device&gt; /var &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre> Run the following command to remount /var with the configured options: <pre><code># mount -o remount /var\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.1-Ensure-separate-partition-exists-for-var-tmp/","title":"1.1.2.5.1 Ensure separate partition exists for /var/tmp","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.1-Ensure-separate-partition-exists-for-var-tmp/#audit","title":"Audit","text":"<p>Run the following command and verify output shows /var/tmp is mounted.</p> <p>Example: <pre><code># findmnt -kn /var/tmp\n/var/tmp /dev/sdb ext4 rw,nosuid,nodev,noexec,relatime,seclabel\n</code></pre></p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.1-Ensure-separate-partition-exists-for-var-tmp/#remediation","title":"Remediation","text":"<p>For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp.</p> <p>For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.</p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.2-Ensure-nodev-option-set-on-var-tmp-partition/","title":"1.1.2.5.2 Ensure nodev option set on /var/tmp partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.2-Ensure-nodev-option-set-on-var-tmp-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/tmp, verify that the nodev option is set. Run the following command to verify that the nodev mount option is set. Example: <pre><code># findmnt -kn /var/tmp  | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.2-Ensure-nodev-option-set-on-var-tmp-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/tmp. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/tmp   &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime    0 0\n</code></pre></p> <p>Run the following command to remount /var/tmp with the configured options: <pre><code># mount -o remount /var/tmp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.3-Ensure-nosuid-option-set-on-var-tmp-partition/","title":"1.1.2.5.3 Ensure nosuid option set on /var/tmp partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.3-Ensure-nosuid-option-set-on-var-tmp-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/tmp, verify that the nosuid option is set.</p> <p>Run the following command to verify that the nosuid mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/tmp | grep -v nosuid\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.3-Ensure-nosuid-option-set-on-var-tmp-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/tmp. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/tmp   &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime    0 0\n</code></pre></p> <p>Run the following command to remount /var/tmp with the configured options: <pre><code># mount -o remount /var/tmp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.4-Ensure-noexec-option-set-on-var-tmp-partition/","title":"1.1.2.5.4 Ensure noexec option set on /var/tmp partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.4-Ensure-noexec-option-set-on-var-tmp-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/tmp, verify that the noexec option is set.</p> <p>Run the following command to verify that the noexec mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/tmp | grep -v noexec\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.5-Configure-var-tmp/1.1.2.5.4-Ensure-noexec-option-set-on-var-tmp-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/tmp. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/tmp   &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime    0 0\n</code></pre></p> <p>Run the following command to remount /var/tmp with the configured options: <pre><code># mount -o remount /var/tmp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/tmp","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.1-Ensure-separate-partition-exists-for-var-log/","title":"1.1.2.6.1 Ensure separate partition exists for /var/log","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.1-Ensure-separate-partition-exists-for-var-log/#audit","title":"Audit","text":"<p>Run the following command and verify output shows /var/log is mounted: <pre><code># findmnt -kn /var/log\n/var/log    /dev/sdb    ext4    rw,nosuid,nodev,noexec,relatime,seclabel\n</code></pre></p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.1-Ensure-separate-partition-exists-for-var-log/#remediation","title":"Remediation","text":"<p>For new installations, during installation create a custom partition setup and specify a separate partition for /var/log.</p> <p>For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.</p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.2-Ensure-nodev-option-set-on-var-log-partition/","title":"1.1.2.6.2 Ensure nodev option set on /var/log partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.2-Ensure-nodev-option-set-on-var-log-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/log, verify that the nodev option is set.</p> <p>Run the following command to verify that the nodev mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/log | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.2-Ensure-nodev-option-set-on-var-log-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/log. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/log   &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime    0 0\n</code></pre></p> <p>Run the following command to remount /var/log with the configured options: <pre><code># mount -o remount **/var/log**\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1038"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.3-Ensure-nosuid-option-set-on-var-log-partition/","title":"1.1.2.6.3 Ensure nosuid option set on /var/log partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.3-Ensure-nosuid-option-set-on-var-log-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/log, verify that the nosuid option is set.</p> <p>Run the following command to verify that the nosuid mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/log | grep -v nosuid\nNothing should be returned\n</code></pre> IF output is produced, ensure it includes the nosuid option</p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.3-Ensure-nosuid-option-set-on-var-log-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/log. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/log   &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime    0 0\n</code></pre></p> <p>Run the following command to remount /var/log with the configured options: <pre><code># mount -o remount /var/log\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.4-Ensure-noexec-option-set-on-var-log-partition/","title":"1.1.2.6.4 Ensure noexec option set on /var/log partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.4-Ensure-noexec-option-set-on-var-log-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/log, verify that the noexec option is set.</p> <p>Run the following command to verify that the noexec mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/log | grep -v noexec\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.6-Configure-var-log/1.1.2.6.4-Ensure-noexec-option-set-on-var-log-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/log. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/log   &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime    0 0\n</code></pre></p> <p>Run the following command to remount /var/log with the configured options: <pre><code># mount -o remount /var/log\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.1-Ensure-separate-partition-exists-for-var-log-audit/","title":"1.1.2.7.1 Ensure separate partition exists for /var/log/audit","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.1-Ensure-separate-partition-exists-for-var-log-audit/#audit","title":"Audit","text":"<p>Run the following command and verify output shows /var/log/audit is mounted: <pre><code># findmnt -kn /var/log/audit\n/var/log/audit /dev/sdb ext4 rw,nosuid,nodev,noexec,relatime,seclabel\n</code></pre></p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.1-Ensure-separate-partition-exists-for-var-log-audit/#remediation","title":"Remediation","text":"<p>For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit.</p> <p>For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.</p>","tags":["Level 2","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1499","T1499.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.2-Ensure-nodev-option-set-on-var-log-audit-partition/","title":"1.1.2.7.2 Ensure nodev option set on /var/log/audit partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.2-Ensure-nodev-option-set-on-var-log-audit-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/log/audit, verify that the nodev option is set.</p> <p>Run the following command to verify that the nodev mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/log/audit | grep -v nodev\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.2-Ensure-nodev-option-set-on-var-log-audit-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/log/audit. Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/log/audit &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /var/log/audit with the configured options: <pre><code># mount -o remount /var/log/audit\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1200","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.3-Ensure-nosuid-option-set-on-var-log-audit-partition/","title":"1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.3-Ensure-nosuid-option-set-on-var-log-audit-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/log/audit, verify that the nosuid option is set.</p> <p>Run the following command to verify that the nosuid mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/log/audit | grep -v nosuid\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.3-Ensure-nosuid-option-set-on-var-log-audit-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/log/audit. Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/log/audit &lt;fstype&gt; defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /var/log/audit with the configured options: <pre><code># mount -o remount /var/log/audit\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.4-Ensure-noexec-option-set-on-var-log-audit-partition/","title":"1.1.2.7.4 Ensure noexec option set on /var/log/audit partition","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.4-Ensure-noexec-option-set-on-var-log-audit-partition/#audit","title":"Audit","text":"<p>- IF - a separate partition exists for /var/log/audit, verify that the noexec option is set.</p> <p>Run the following command to verify that the noexec mount option is set.</p> <p>Example: <pre><code># findmnt -kn /var/log/audit | grep -v noexec\nNothing should be returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.1-Filesystem/1.1.2-Configure-filesystem-partitions/1.1.2.7-Configure-var-log-audit/1.1.2.7.4-Ensure-noexec-option-set-on-var-log-audit-partition/#remediation","title":"Remediation","text":"<p>- IF - a separate partition exists for /var/log/audit. Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.</p> <p>Example: <pre><code>&lt;device&gt; /var/log/audit &lt;fstype&gt;    defaults,rw,nosuid,nodev,noexec,relatime 0 0\n</code></pre></p> <p>Run the following command to remount /var/log/audit with the configured options: <pre><code># mount -o remount /var/log/audit\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem","Configure filesystem partitions","Configure /var/log/audit","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1204","T1204.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.1-Configure-Package-Repositories/1.2.1.1-Ensure-gpg-keys-are-configured/","title":"1.2.1.1 Ensure GPG keys are configured","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package repositories","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.1-Configure-Package-Repositories/1.2.1.1-Ensure-gpg-keys-are-configured/#audit","title":"Audit","text":"<p>Verify GPG keys are configured correctly for your package manager: <pre><code># apt-key list\n</code></pre></p> <p>Note:</p> <ul> <li>apt-key list is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).</li> <li>With the deprecation of apt-key it is recommended to use the Signed-By option in sources.list to require a repository to pass apt-secure(8) verification with a certain set of keys rather than all trusted keys apt has configured.</li> </ul> <p>- OR -</p> <ol> <li>Run the following script and verify GPG keys are configured correctly for your package manager:</li> </ol> <pre><code>#! /usr/bin/env bash\n{\nfor file in /etc/apt/trusted.gpg.d/*.{gpg,asc} /etc/apt/sources.list.d/*.{gpg,asc} ; do\nif [ -f \"$file\" ]; then\necho -e \"File: $file\"\ngpg --list-packets \"$file\" 2&gt;/dev/null | awk '/keyid/ &amp;&amp; !seen[$NF]++ {print \"keyid:\", $NF}'\ngpg --list-packets \"$file\" 2&gt;/dev/null | awk '/Signed-By:/ {print \"signed-by:\", $NF}'\necho -e\nfi\ndone\n}\n</code></pre> <ol> <li>REVIEW and VERIFY to ensure that GPG keys are configured correctly for your package manager IAW site policy.</li> </ol>","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package repositories","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.1-Configure-Package-Repositories/1.2.1.1-Ensure-gpg-keys-are-configured/#remediation","title":"Remediation","text":"<p>Update your package manager GPG keys in accordance with site policy.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package repositories","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.1-Configure-Package-Repositories/1.2.1.2-Ensure-package-manager-repositories-are-configured/","title":"1.2.1.2 Ensure package manager repositories are configured","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package repositories","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.1-Configure-Package-Repositories/1.2.1.2-Ensure-package-manager-repositories-are-configured/#audit","title":"Audit","text":"<p>Run the following command and verify package repositories are configured correctly: <pre><code># apt-cache policy\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package repositories","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.1-Configure-Package-Repositories/1.2.1.2-Ensure-package-manager-repositories-are-configured/#remediation","title":"Remediation","text":"<p>Configure your package manager repositories according to site policy.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package repositories","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.2-Configure-Package-Updates/1.2.2.1-Ensure-updates-patches-and-additional-security-software-are-installed/","title":"1.2.2.1 Ensure updates, patches, and additional security software are installed","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package updates","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.2-Configure-Package-Updates/1.2.2.1-Ensure-updates-patches-and-additional-security-software-are-installed/#audit","title":"Audit","text":"<p>Verify there are no updates or patches to install: <pre><code># apt update\n# apt -s upgrade\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package updates","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.2-Package-Management/1.2.2-Configure-Package-Updates/1.2.2.1-Ensure-updates-patches-and-additional-security-software-are-installed/#remediation","title":"Remediation","text":"<p>Run the following command to update all packages following local site policy guidance on applying updates and patches: <pre><code># apt update\n# apt upgrade\n- OR -\n# apt dist-upgrade\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Package Management","Configure package updates","Manual","IG1","IG2","IG3","7.3 Perform Automated Operating System Patch Management","7.4 Perform Automated Application Patch Management","T1195","T1195.001","T1195.002","TA0001","M1051"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.1-Ensure-apparmor-is-installed/","title":"1.3.1.1 Ensure AppArmor is installed","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0003","M1026"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.1-Ensure-apparmor-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify that apparmor is installed: <pre><code># dpkg-query -s apparmor &amp;&gt;/dev/null &amp;&amp; echo \"apparmor is installed\"\napparmor is installed\n</code></pre></p> <p>Run the following command to verify that apparmor-utils is installed: <pre><code>dpkg-query -s apparmor-utils &amp;&gt;/dev/null &amp;&amp; echo \"apparmor-utils is installed\"\napparmor-utils is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0003","M1026"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.1-Ensure-apparmor-is-installed/#remediation","title":"Remediation","text":"<p>Install AppArmor. <pre><code># apt install apparmor apparmor-utils\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0003","M1026"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.2-Ensure-apparmor-is-enabled-in-the-bootloader-configuration/","title":"1.3.1.2 Ensure AppArmor is enabled in the bootloader configuration","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0003","M1026"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.2-Ensure-apparmor-is-enabled-in-the-bootloader-configuration/#audit","title":"Audit","text":"<p>Run the following commands to verify that all linux lines have the apparmor=1 parameters set: <pre><code># grep \"^\\s*linux\" /boot/grub/grub.cfg | grep -v \"apparmor=1\"\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify that all linux lines have the security=apparmor parameters set: <pre><code># grep \"^\\s*linux\" /boot/grub/grub.cfg | grep -v \"security=apparmor\"\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0003","M1026"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.2-Ensure-apparmor-is-enabled-in-the-bootloader-configuration/#remediation","title":"Remediation","text":"<p>Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line <pre><code>GRUB_CMDLINE_LINUX=\"apparmor=1 security=apparmor\"\n</code></pre></p> <p>Run the following command to update the grub2 configuration: <pre><code># update-grub\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0003","M1026"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.3-Ensure-all-apparmor-profiles-are-in-enforce-or-complain-mode/","title":"1.3.1.3 Ensure all AppArmor Profiles are in enforce or complain mode","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1497","TA0005"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.3-Ensure-all-apparmor-profiles-are-in-enforce-or-complain-mode/#audit","title":"Audit","text":"<p>Run the following command and verify that profiles are loaded, and are in either enforce or complain mode: <pre><code># apparmor_status | grep profiles\n</code></pre></p> <p>Review output and ensure that profiles are loaded, and in either enforce or complain mode: <pre><code>37 profiles are loaded.\n35 profiles are in enforce mode.\n2 profiles are in complain mode.\n4 processes have profiles defined.\n</code></pre></p> <p>Run the following command and verify no processes are unconfined <pre><code># apparmor_status | grep processes\n</code></pre></p> <p>Review the output and ensure no processes are unconfined: <pre><code>4 processes have profiles defined.\n4 processes are in enforce mode.\n0 processes are in complain mode.\n0 processes are unconfined but have a profile defined.\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1497","TA0005"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.3-Ensure-all-apparmor-profiles-are-in-enforce-or-complain-mode/#remediation","title":"Remediation","text":"<p>Run the following command to set all profiles to enforce mode: <pre><code># aa-enforce /etc/apparmor.d/*\n</code></pre></p> <p>- OR -</p> <p>Run the following command to set all profiles to complain mode: <pre><code># aa-complain /etc/apparmor.d/*\n</code></pre></p> <p>Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted</p>","tags":["Level 1","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1497","TA0005"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.4-Ensure-all-apparmor-profiles-are-enforcing/","title":"1.3.1.4 Ensure all AppArmor Profiles are enforcing","text":"","tags":["Level 2","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0005","M1048"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.4-Ensure-all-apparmor-profiles-are-enforcing/#audit","title":"Audit","text":"<p>Run the following commands and verify that profiles are loaded and are not in complain mode: <pre><code># apparmor_status | grep profiles\n</code></pre></p> <p>Review output and ensure that profiles are loaded, and in enforce mode: <pre><code>34 profiles are loaded.\n34 profiles are in enforce mode.\n0 profiles are in complain mode.\n2 processes have profiles defined.\n</code></pre></p> <p>Run the following command and verify that no processes are unconfined: <pre><code>apparmor_status | grep processes\n</code></pre></p> <p>Review the output and ensure no processes are unconfined: <pre><code>2 processes have profiles defined.\n2 processes are in enforce mode.\n0 processes are in complain mode.\n0 processes are unconfined but have a profile defined.\n</code></pre></p>","tags":["Level 2","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0005","M1048"]},{"location":"1-Initial-Setup/1.3-Mandatory-Access-Control/1.3.1-Configure-AppArmor/1.3.1.4-Ensure-all-apparmor-profiles-are-enforcing/#remediation","title":"Remediation","text":"<p>Run the following command to set all profiles to enforce mode: <pre><code># aa-enforce /etc/apparmor.d/*\n</code></pre></p> <p>Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted</p>","tags":["Level 2","Workstation","Server","Initial Setup","Mandatory Access Control","Configure AppArmor","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1068","T1565","T1565.001","T1565.003","TA0005","M1048"]},{"location":"1-Initial-Setup/1.4-Configure-Bootloader/1.4.1-Ensure-bootloader-password-is-set/","title":"1.4.1 Ensure bootloader password is set","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Bootloader","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1542","TA0003","M1046"]},{"location":"1-Initial-Setup/1.4-Configure-Bootloader/1.4.1-Ensure-bootloader-password-is-set/#audit","title":"Audit","text":"<p>Run the following commands and verify output matches: <pre><code># grep \"^set superusers\" /boot/grub/grub.cfg\nset superusers=\"&lt;username&gt;\"\n\n# awk -F. '/^\\s*password/ {print $1\".\"$2\".\"$3}' /boot/grub/grub.cfg\npassword_pbkdf2 &lt;username&gt; grub.pbkdf2.sha512\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Bootloader","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1542","TA0003","M1046"]},{"location":"1-Initial-Setup/1.4-Configure-Bootloader/1.4.1-Ensure-bootloader-password-is-set/#remediation","title":"Remediation","text":"<p>Create an encrypted password with grub-mkpasswd-pbkdf2: <pre><code># grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64\nEnter password: &lt;password&gt;\nReenter password: &lt;password&gt;\nPBKDF2 hash of your password is &lt;encrypted-password&gt;\n</code></pre></p> <p>Add the following into a custom /etc/grub.d configuration file: <pre><code>cat &lt;&lt;EOF\nexec tail -n +2 $0\nset superusers=\"&lt;username&gt;\"\npassword_pbkdf2 &lt;username&gt; &lt;encrypted-password&gt;\nEOF\n</code></pre></p> <p>The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.</p> <p>If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=</p> <p>Example: <pre><code>CLASS=\"--class gnu-linux --class gnu --class os --unrestricted\"\n</code></pre></p> <p>Run the following command to update the grub2 configuration: <pre><code># update-grub\n</code></pre></p> <p>Default Value: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.</p> <p>Replace /boot/grub/grub.cfg with the appropriate grub configuration file for your environment.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Bootloader","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1542","TA0003","M1046"]},{"location":"1-Initial-Setup/1.4-Configure-Bootloader/1.4.2-Ensure-access-to-bootloader-config-is-configured/","title":"1.4.2 Ensure access to bootloader config is configured","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Secure Boot Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1542","TA0005","TA0007","M1022"]},{"location":"1-Initial-Setup/1.4-Configure-Bootloader/1.4.2-Ensure-access-to-bootloader-config-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify Uid and Gid are both 0/root and Access is 0600 or more restrictive. <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /boot/grub/grub.cfg\nAccess: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Secure Boot Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1542","TA0005","TA0007","M1022"]},{"location":"1-Initial-Setup/1.4-Configure-Bootloader/1.4.2-Ensure-access-to-bootloader-config-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to set permissions on your grub configuration: <pre><code># chown root:root /boot/grub/grub.cfg\n# chmod u-x,go-rwx /boot/grub/grub.cfg\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Initial Setup","Secure Boot Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1542","TA0005","TA0007","M1022"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.1-Ensure-address-space-layout-randomization-is-enabled/","title":"1.5.1 Ensure address space layout randomization is enabled","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","IG2","IG3","10.5 Enable Anti-Exploitation Features","T1068","TA0002","M1050"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.1-Ensure-address-space-layout-randomization-is-enabled/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameter is set in the running configuration and correctly loaded from a kernel parameter configuration file: - kernel.randomize_va_space is set to 2:</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); a_parlist=(kernel.randomize_va_space=2)\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_kernel_parameter_chk\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","IG2","IG3","10.5 Enable Anti-Exploitation Features","T1068","TA0002","M1050"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.1-Ensure-address-space-layout-randomization-is-enabled/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - kernel.randomize_va_space = 2*</p> <p>Example: <pre><code># printf \"%s\\n\" \"kernel.randomize_va_space = 2\" &gt;&gt; /etc/sysctl.d/60-kernel_sysctl.conf\n</code></pre></p> <p>Run the following command to set the active kernel parameter: <pre><code># sysctl -w kernel.randomize_va_space=2\n</code></pre></p> <p>Default Value: kernel.randomize_va_space = 2</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","IG2","IG3","10.5 Enable Anti-Exploitation Features","T1068","TA0002","M1050"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.2-Ensure-ptrace_scope-is-restricted/","title":"1.5.2 Ensure ptrace_scope is restricted","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1055","T1055.008","TA0005","M1040"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.2-Ensure-ptrace_scope-is-restricted/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameter is set in the running configuration and correctly loaded from a kernel parameter configuration file: - kernel.yama.ptrace_scope is set to a value of: 1, 2, or 3*</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); a_parlist=(\"kernel.yama.ptrace_scope=(1|2|3)\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_kernel_parameter_chk\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1055","T1055.008","TA0005","M1040"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.2-Ensure-ptrace_scope-is-restricted/#remediation","title":"Remediation","text":"<p>Set the kernel.yama.ptrace_scope parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf to a value of 1, 2, or 3: <pre><code>kernel.yama.ptrace_scope = 1\n- OR -\nkernel.yama.ptrace_scope = 2\n- OR -\nkernel.yama.ptrace_scope = 3\n</code></pre></p> <p>Example: <pre><code># printf \"%s\\n\" \"kernel.yama.ptrace_scope = 1\" &gt;&gt; /etc/sysctl.d/60-kernel_sysctl.conf\n</code></pre></p> <p>Run the following command to set the active kernel parameter: <pre><code># sysctl -w kernel.yama.ptrace_scope=1\n</code></pre></p> <p>Default Value: kernel.yama.ptrace_scope = 0</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1055","T1055.008","TA0005","M1040"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.3-Ensure-core-dumps-are-restricted/","title":"1.5.3 Ensure core dumps are restricted","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","T1005","TA0007","M1057"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.3-Ensure-core-dumps-are-restricted/#audit","title":"Audit","text":"<p>Run the following commands and verify output matches: <pre><code># grep -Ps -- '^\\h*\\*\\h+hard\\h+core\\h+0\\b' /etc/security/limits.conf /etc/security/limits.d/*\n* hard core 0\n</code></pre></p> <p>Run the following script to verify fs.suid_dumpable = 0: Run the following script to verify the following kernel parameter is set in the running configuration and correctly loaded from a kernel parameter configuration file: - fs.suid_dumpable is set to 0</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); a_parlist=(\"fs.suid_dumpable=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_kernel_parameter_chk\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre> <p>Run the following command to check if systemd-coredump is installed: <pre><code># systemctl list-unit-files | grep coredump\n</code></pre></p> <p>if anything is returned systemd-coredump is installed</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","T1005","TA0007","M1057"]},{"location":"1-Initial-Setup/1.5-Configure-Additional-Process-Hardening/1.5.3-Ensure-core-dumps-are-restricted/#remediation","title":"Remediation","text":"<p>Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file: <pre><code>* hard core 0\n</code></pre></p> <p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending .conf: - fs.suid_dumpable = 0*</p> <p>Example: <pre><code># printf \"\\n%s\" \"fs.suid_dumpable = 0\" &gt;&gt; /etc/sysctl.d/60-fs_sysctl.conf\n</code></pre></p> <p>Run the following command to set the active kernel parameter: <pre><code># sysctl -w fs.suid_dumpable=0\n</code></pre></p> <p>-IF- systemd-coredump is installed: edit /etc/systemd/coredump.conf and add/modify the following lines: <pre><code>Storage=none\nProcessSizeMax=0\n</code></pre></p> <p>Run the command: <pre><code>systemctl daemon-reload\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Additional Process Hardening","Automated","T1005","TA0007","M1057"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.1-Ensure-message-of-the-day-is-configured-properly/","title":"1.6.1 Ensure message of the day is configured properly","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.1-Ensure-message-of-the-day-is-configured-properly/#audit","title":"Audit","text":"<p>Run the following command and verify that the contents match site policy: <pre><code># cat /etc/motd\n</code></pre></p> <p>Run the following command and verify no results are returned: <pre><code># grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g'))\" /etc/motd\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.1-Ensure-message-of-the-day-is-configured-properly/#remediation","title":"Remediation","text":"<p>Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform - OR - - IF - the motd is not used, this file can be removed. Run the following command to remove the motd file: <pre><code># rm /etc/motd\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.2-Ensure-local-login-warning-banner-is-configured-properly/","title":"1.6.2 Ensure local login warning banner is configured properly","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.2-Ensure-local-login-warning-banner-is-configured-properly/#audit","title":"Audit","text":"<p>Run the following command and verify that the contents match site policy: <pre><code># cat /etc/issue\n</code></pre></p> <p>Run the following command and verify no results are returned: <pre><code># grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g'))\" /etc/issue\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.2-Ensure-local-login-warning-banner-is-configured-properly/#remediation","title":"Remediation","text":"<p>Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform</p> <p>Example: <pre><code># echo \"Authorized uses only. All activity may be monitored and reported.\" &gt; /etc/issue\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.3-Ensure-remote-login-warning-banner-is-configured-properly/","title":"1.6.3 Ensure remote login warning banner is configured properly","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1018","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.3-Ensure-remote-login-warning-banner-is-configured-properly/#audit","title":"Audit","text":"<p>Run the following command and verify that the contents match site policy: <pre><code># cat /etc/issue.net\n</code></pre></p> <p>Run the following command and verify no results are returned: <pre><code># grep -E -i \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g'))\" /etc/issue.net\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1018","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.3-Ensure-remote-login-warning-banner-is-configured-properly/#remediation","title":"Remediation","text":"<p>Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform</p> <p>Example: <pre><code># echo \"Authorized uses only. All activity may be monitored and reported.\" &gt; /etc/issue.net\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","T1018","T1082","T1592","T1592.004","TA0007"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.4-Ensure-access-to-etc-motd-is-configured/","title":"1.6.4 Ensure access to /etc/motd is configured","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.4-Ensure-access-to-etc-motd-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify if /etc/motd exists, Access is 644 or more restrictive, Uid and Gid are both 0/root: <pre><code># [ -e /etc/motd ] &amp;&amp; stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/motd\n\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n -- OR --\nNothing is returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.4-Ensure-access-to-etc-motd-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to set mode, owner, and group on /etc/motd : <pre><code># chown root:root $(readlink -e /etc/motd)\n# chmod u-x,go-wx $(readlink -e /etc/motd)\n</code></pre></p> <ul> <li>OR - Run the following command to remove the /etc/motd file: <pre><code># rm /etc/motd\n</code></pre></li> </ul> <p>Default Value: File doesn't exist</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.5-Ensure-access-to-etc-issue-is-configured/","title":"1.6.5 Ensure access to /etc/issue is configured","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.5-Ensure-access-to-etc-issue-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify Access is 644 or more restrictive and Uid and Gid are both 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/issue\n\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.5-Ensure-access-to-etc-issue-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to set mode, owner, and group on /etc/issue: <pre><code># chown root:root $(readlink -e /etc/issue)\n# chmod u-x,go-wx $(readlink -e /etc/issue)\n</code></pre></p> <p>Default Value: <pre><code>Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.6-Ensure-access-to-etc-issue.net-is-configured/","title":"1.6.6 Ensure access to /etc/issue.net is configured","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.6-Ensure-access-to-etc-issue.net-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify Access is 644 or more restrictive and Uid and Gid are both 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/issue.net\n\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.6-Configure-Command-Line-Warning-Banners/1.6.6-Ensure-access-to-etc-issue.net-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to set mode, owner, and group on /etc/issue.net: <pre><code># chown root:root $(readlink -e /etc/issue.net)\n# chmod u-x,go-wx $(readlink -e /etc/issue.net)\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure Command Line Warning Banners","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1222","T1222.002","TA0005","M1022"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.1-Ensure-gdm-is-removed/","title":"1.7.1 Ensure GNOME Display Manager is removed","text":"","tags":["Level 2","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1543","T1543.002","TA0002","M1033"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.1-Ensure-gdm-is-removed/#audit","title":"Audit","text":"<p>Run the following command and verify gdm3 is not installed: <pre><code># dpkg-query -s gdm3 &amp;&gt;/dev/null &amp;&amp; echo \"gdm3 is installed\"\ngdm3 unknown ok not-installed not-installed\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1543","T1543.002","TA0002","M1033"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.1-Ensure-gdm-is-removed/#remediation","title":"Remediation","text":"<p>Run the following command to uninstall gdm3 and remove unused dependencies: <pre><code># apt purge gdm3\n# apt autoremove gdm3\n</code></pre></p>","tags":["Level 2","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1543","T1543.002","TA0002","M1033"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.10-Ensure-xdcmp-is-not-enabled/","title":"1.7.10 Ensure XDCMP is not enabled","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1040","T1056","T1056.001","T1557","TA0002","M1050"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.10-Ensure-xdcmp-is-not-enabled/#audit","title":"Audit","text":"<p>Run the following command and verify the output: <pre><code>#!/usr/bin/env bash\n{\nwhile IFS= read -r l_file; do\nawk '/\\[xdmcp\\]/{ f = 1;next } /\\[/{ f = 0 } f {if (/^\\s*Enable\\s*=\\s*true/) print \"The file: \\\"'\"$l_file\"'\\\" includes: \\\"\" $0 \"\\\" in the \\\"[xdmcp]\\\" block\"}' \"$l_file\"\ndone &lt; &lt;(grep -Psil -- '^\\h*\\[xdmcp\\]' /etc/{gdm3,gdm}/{custom,daemon}.conf)\n}\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1040","T1056","T1056.001","T1557","TA0002","M1050"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.10-Ensure-xdcmp-is-not-enabled/#remediation","title":"Remediation","text":"<p>Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block: Example file: <pre><code># GDM configuration storage\n#\n# See /usr/share/gdm/gdm.schemas for a list of available options.\n\n[daemon]\n# Uncomment the line below to force the login screen to use Xorg\n#WaylandEnable=false\n\n# Enabling automatic login\n# AutomaticLoginEnable = true\n# AutomaticLogin = user1\n\n# Enabling timed login\n# TimedLoginEnable = true\n# TimedLogin = user1\n# TimedLoginDelay = 10\n\n[security]\n\n[xdmcp]\n# Enable=true &lt;- **This line should be removed or commented out**\n\n[chooser]\n\n[debug]\n# Uncomment the line below to turn on debugging\n# More verbose logs\n# Additionally lets the X server dump core if it crashes\n#Enable=true\n</code></pre></p> <p>Default Value: false (This is denoted by no Enabled= entry in the [xdmcp] block</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1040","T1056","T1056.001","T1557","TA0002","M1050"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.2-Ensure-gdm-login-banner-is-configured/","title":"1.7.2 Ensure GDM login banner is configured","text":"","tags":["Level 2","Server","Initial Setup","Configure GNOME Display Manager","Automated","T1078","T1078.001","T1078.002","T1078.003","T1087","T1087.001","T1087.002","TA0007","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.2-Ensure-gdm-login-banner-is-configured/#audit","title":"Audit","text":"<p>Run the following commands to verify that the text banner on the login screen is enabled and set: <pre><code>#gsettings get org.gnome.login-screen banner-message-enable\ntrue\n\n# gsettings get org.gnome.login-screen banner-message-text\n'Authorized uses only. All activity may be monitored and reported'\n</code></pre></p>","tags":["Level 2","Server","Initial Setup","Configure GNOME Display Manager","Automated","T1078","T1078.001","T1078.002","T1078.003","T1087","T1087.001","T1087.002","TA0007","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.2-Ensure-gdm-login-banner-is-configured/#remediation","title":"Remediation","text":"<p>- IF - A user profile is already created run the following commands to set and enable the text banner message on the login screen: <pre><code># gsettings set org.gnome.login-screen banner-message-text 'Authorized uses only. All activity may be monitored and reported'\n# gsettings set org.gnome.login-screen banner-message-enable true\n</code></pre></p> <p>Note: - banner-message-text may be set in accordance with local site policy - gsettings commands in this section MUST be done from a command window on a graphical desktop or an error will be returned. - The system must be restarted after all gsettings configurations have been set in order for CIS-CAT Assessor to appropriately assess. - If the dconf database is not updating correctly due to umask requirements contain in the benchmark, then use (umask 0022 &amp;&amp; gsetting set) commands from above to temporarily set umask ensuring that any files or directories created by gsettings will have the required permissions.</p> <p>- OR/IF - A user profile does not exist: 1. Create or edit the gdm profile in the /etc/dconf/profile/gdm with the following lines: <pre><code>user-db:user\nsystem-db:gdm\nfile-db:/usr/share/gdm/greeter-dconf-defaults\n</code></pre> Note: gdm is the name of a dconf database.</p> <ol> <li> <p>Create a gdm keyfile for machine-wide settings in /etc/dconf/db/gdm.d/01-banner-message: <pre><code>org/gnome/login-screen]\nbanner-message-enable=true\nbanner-message-text='Type the banner message here.'\n</code></pre></p> </li> <li> <p>Update the system databases <pre><code># dconf update\n</code></pre> Note:</p> </li> <li>Users must log out and back in again before the system-wide settings take effect.</li> <li>There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.</li> <li>The banner message cannot be read from an external file</li> </ol> <p>Default Value: disabled</p>","tags":["Level 2","Server","Initial Setup","Configure GNOME Display Manager","Automated","T1078","T1078.001","T1078.002","T1078.003","T1087","T1087.001","T1087.002","TA0007","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.3-Ensure-gdm-disable-user-list-option-is-enabled/","title":"1.7.3 Ensure GDM disable-user-list option is enabled","text":"","tags":["Level 1","Server","Workstation","Initial Setup","Configure GNOME Display Manager","Automated","T1078","T1078.001","T1078.002","T1078.003","T1087","T1087.001","T1087.002","TA0007","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.3-Ensure-gdm-disable-user-list-option-is-enabled/#audit","title":"Audit","text":"<p>Run the following command and to verify that the disable-user-list option is enabled: <pre><code># gsettings get org.gnome.login-screen disable-user-list\ntrue\n</code></pre></p>","tags":["Level 1","Server","Workstation","Initial Setup","Configure GNOME Display Manager","Automated","T1078","T1078.001","T1078.002","T1078.003","T1087","T1087.001","T1087.002","TA0007","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.3-Ensure-gdm-disable-user-list-option-is-enabled/#remediation","title":"Remediation","text":"<p>- IF - A user profile exists run the following command to enable the disable-user-list: <pre><code># gsettings set org.gnome.login-screen disable-user-list\n</code></pre></p> <p>Note:</p> <ul> <li>gsettings commands in this section MUST be done from a command window on a graphical desktop or an error will be returned.</li> <li>The system must be restarted after all gsettings configurations have been set in order for CIS-CAT Assessor to appropriately assess.</li> <li>If the dconf database is not updating correctly due to umask requirements contain in the benchmark, then use (umask 0022 &amp;&amp; gsetting set) commands from above to temporarily set umask ensuring that any files or directories created by gsettings will have the required permissions.</li> </ul> <p>- OR/IF - A user profile does not exist:</p> <ol> <li>Create or edit the gdm profile in the /etc/dconf/profile/gdm with the following lines: <pre><code>user-db:user\nsystem-db:gdm\nfile-db:/usr/share/gdm/greeter-dconf-defaults\n</code></pre></li> </ol> <p>Note: gdm is the name of a dconf database.</p> <ol> <li> <p>Create a gdm keyfile for machine-wide settings in /etc/dconf/db/gdm.d/00-login-screen: <pre><code>[org/gnome/login-screen]\n# Do not show the user list\ndisable-user-list=true\n</code></pre></p> </li> <li> <p>Update the system databases <pre><code># dconf update\n</code></pre> Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.</p> </li> </ol> <p>Default Value: false</p>","tags":["Level 1","Server","Workstation","Initial Setup","Configure GNOME Display Manager","Automated","T1078","T1078.001","T1078.002","T1078.003","T1087","T1087.001","T1087.002","TA0007","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.4-Ensure-gdm-screen-locks-when-the-user-is-idle/","title":"1.7.4 Ensure GDM screen locks when the user is idle","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1461","TA0027","M1012"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.4-Ensure-gdm-screen-locks-when-the-user-is-idle/#audit","title":"Audit","text":"<p>Run the following script to verify that the screen locks when the user is idle: <pre><code># gsettings get org.gnome.desktop.screensaver lock-delay\nuint32 5\n\n# gsettings get org.gnome.desktop.session idle-delay\nuint32 900\n</code></pre></p> <p>Note: - lock-delay=uint32 {n} - should be 5 seconds or less and follow local site policy - idle-delay=uint32 {n} - should be 900 seconds (15 minutes) or less, not 0 (disabled) and follow local site policy</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1461","TA0027","M1012"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.4-Ensure-gdm-screen-locks-when-the-user-is-idle/#remediation","title":"Remediation","text":"<p>- IF - A user profile is already created run the following commands to enable screen locks when the user is idle: <pre><code># gsettings set org.gnome.desktop.screensaver lock-delay 5\n# gsettings set org.gnome.desktop.session idle-delay 900\n</code></pre> Note: - gsettings commands in this section MUST be done from a command window on a graphical desktop or an error will be returned. - The system must be restarted after all gsettings configurations have been set in order for CIS-CAT Assessor to appropriately assess. - If the dconf database is not updating correctly due to umask requirements contain in the benchmark, then use (umask 0022 &amp;&amp; gsetting set) commands from above to temporarily set umask ensuring that any files or directories created by gsettings will have the required permissions.</p> <p>- OR/IF - A user profile does not exist: 1. Create or edit the user profile in the /etc/dconf/profile/gdm with the following lines: <pre><code>user-db:user\nsystem-db:{NAME_OF_DCONF_DATABASE}\n</code></pre> Note: local is the name of a dconf database used in the examples.</p> <ol> <li> <p>Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:</p> </li> <li> <p>Create the key file /etc/dconf/db/local.d/00-screensaver to provide information for the local database:</p> </li> </ol> <p>Example key file: <pre><code># Specify the dconf path\n[org/gnome/desktop/session]\n\n# Number of seconds of inactivity before the screen goes blank\n# Set to 0 seconds if you want to deactivate the screensaver.\nidle-delay=uint32 180\n\n# Specify the dconf path\n[org/gnome/desktop/screensaver]\n\n# Number of seconds after the screen is blank before locking the screen\nlock-delay=uint32 0\n</code></pre></p> <p>Note: You must include the uint32 along with the integer key values as shown.</p> <ol> <li> <p>Run the following command to update the system databases: <pre><code># dconf update\n</code></pre></p> </li> <li> <p>Users must log out and back in again before the system-wide settings take effect.</p> </li> </ol>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1461","TA0027","M1012"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.5-Ensure-gdm-screen-locks-cannot-be-overridden/","title":"1.7.5 Ensure GDM screen locks cannot be overridden","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1456","TA0027","M1001"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.5-Ensure-gdm-screen-locks-cannot-be-overridden/#audit","title":"Audit","text":"<p>Run the following script to verify that the screen lock cannot be overridden: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=()\nf_check_setting()\n{\ngrep -Psrilq -- \"^\\h*$2\\b\" /etc/dconf/db/local.d/locks/* &amp;&amp; \\\necho \"- \\\"$3\\\" is locked\" || echo \"- \\\"$3\\\" is not locked or not set\"\n}\ndeclare -A settings=(\n[\"idle-delay\"]=\"/org/gnome/desktop/session/idle-delay\"\n[\"lock-delay\"]=\"/org/gnome/desktop/screensaver/lock-delay\"\n)\nfor setting in \"${!settings[@]}\"; do\nresult=$(f_check_setting \"$setting\" \"${settings[$setting]}\" \"$setting\")\nif [[ $result == *\"is not locked\"* || $result == *\"not set to false\"* ]]; then\na_output2+=(\"$result\")\nelse\na_output+=(\"$result\")\nfi\ndone\nprintf '%s\\n' \"\" \"- Audit Result:\"\nif [ \"${#a_output2[@]}\" -gt 0 ]; then\nprintf '%s\\n' \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \" ** PASS **\" \"${a_output[@]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1456","TA0027","M1001"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.5-Ensure-gdm-screen-locks-cannot-be-overridden/#remediation","title":"Remediation","text":"<ol> <li> <p>To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-screensaver with the following content: <pre><code># Lock desktop screensaver settings\n/org/gnome/desktop/session/idle-delay\n/org/gnome/desktop/screensaver/lock-delay\n</code></pre></p> </li> <li> <p>Update the system databases: <pre><code># dconf update\n</code></pre></p> </li> </ol> <p>Note: - A user profile must exist in order to apply locks. - Users must log out and back in again before the system-wide settings take effect.</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1456","TA0027","M1001"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.6-Ensure-gdm-automatic-mounting-of-removable-media-is-disabled/","title":"1.8.6 Ensure GDM automatic mounting of removable media is disabled","text":"","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1091","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.6-Ensure-gdm-automatic-mounting-of-removable-media-is-disabled/#audit","title":"Audit","text":"<p>Run the following commands to verify automatic mounting is disabled: <pre><code># gsettings get org.gnome.desktop.media-handling automount\nfalse\n\n# gsettings get org.gnome.desktop.media-handling automount-open\nfalse\n</code></pre></p>","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1091","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.6-Ensure-gdm-automatic-mounting-of-removable-media-is-disabled/#remediation","title":"Remediation","text":"<p>- IF - A user profile exists run the following commands to ensure automatic mounting is disabled: <pre><code># gsettings set org.gnome.desktop.media-handling automount false\n# gsettings set org.gnome.desktop.media-handling automount-open false\n</code></pre></p> <p>Note: - gsettings commands in this section MUST be done from a command window on a graphical desktop or an error will be returned. - The system must be restarted after all gsettings configurations have been set in order for CIS-CAT Assessor to appropriately assess. - If the dconf database is not updating correctly due to umask requirements contain in the benchmark, then use (umask 0022 &amp;&amp; gsetting set) commands from above to temporarily set umask ensuring that any files or directories created by gsettings will have the required permissions.</p> <p>- OR/IF - A user profile does not exist: 1. Create a file /etc/dconf/db/local.d/00-media-automount with the following content: <pre><code>[org/gnome/desktop/media-handling]\nautomount=false\nautomount-open=false\n</code></pre></p> <ol> <li>After creating the file, apply the changes using below command : <pre><code># dconf update\n</code></pre></li> </ol> <p>Note: Users must log out and back in again before the system-wide settings take effect.</p>","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1091","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.7-Ensure-gdm-disabling-automatic-mounting-of-removable-media-is-not-overridden/","title":"1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden","text":"","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","T1091","TA0001","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.7-Ensure-gdm-disabling-automatic-mounting-of-removable-media-is-not-overridden/#audit","title":"Audit","text":"<p>Run the following script to verify automatic mounting of removable media is not overridden and correctly configured in a configuration file: - automount=false - automount-open=false <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=()\ncheck_setting()\n{\ngrep -Psrilq \"^\\h*$1\\h*=\\h*false\\b\" /etc/dconf/db/local.d/locks/* 2&gt;/dev/null &amp;&amp; \\\necho \"- \\\"$3\\\" is locked and set to false\" || echo \"- \\\"$3\\\" is not locked or not set to false\"\n}\ndeclare -A settings=(\n[\"automount\"]=\"org/gnome/desktop/media-handling\"\n[\"automount-open\"]=\"org/gnome/desktop/media-handling\"\n)\nfor setting in \"${!settings[@]}\"; do\nresult=$(check_setting \"$setting\" \"${settings[$setting]}\" \"$setting\")\nif [[ $result == *\"is not locked\"* || $result == *\"not set to false\"* ]]; then\na_output2+=(\"$result\")\nelse\na_output+=(\"$result\")\nfi\ndone\nprintf '%s\\n' \"\" \"- Audit Result:\"\nif [ \"${#a_output2[@]}\" -gt 0 ]; then\nprintf '%s\\n' \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \" ** PASS **\" \"${a_output[@]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","T1091","TA0001","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.7-Ensure-gdm-disabling-automatic-mounting-of-removable-media-is-not-overridden/#remediation","title":"Remediation","text":"<ol> <li> <p>To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content: <pre><code>#!/usr/bin/env bash\n[org/gnome/desktop/media-handling]\nautomount=false\nautomount-open=false\n</code></pre></p> </li> <li> <p>Update the system databases <pre><code># dconf update\n</code></pre></p> </li> </ol> <p>Note: - A user profile must exist in order to apply locks. - Users must log out and back in again before the system-wide settings take effect.</p>","tags":["Level 1","Level 2","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","T1091","TA0001","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.8-Ensure-gdm-autorun-never-is-enabled/","title":"1.7.8 Ensure GDM autorun-never is enabled","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","10.3 Disable Autorun and Autoplay for Removable Media","IG1","IG2","IG3","T1091","TA0001","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.8-Ensure-gdm-autorun-never-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify that autorun-never is set to true for GDM: <pre><code># gsettings get org.gnome.desktop.media-handling autorun-never\ntrue\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","10.3 Disable Autorun and Autoplay for Removable Media","IG1","IG2","IG3","T1091","TA0001","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.8-Ensure-gdm-autorun-never-is-enabled/#remediation","title":"Remediation","text":"<p>- IF - A user profile exists run the following command to set autorun-never to true for GDM users: <pre><code># gsettings set org.gnome.desktop.media-handling autorun-never true\n</code></pre></p> <p>Note: - gsettings commands in this section MUST be done from a command window on a graphical desktop or an error will be returned. - The system must be restarted after all gsettings configurations have been set in order for CIS-CAT Assessor to appropriately assess. - If the dconf database is not updating correctly due to umask requirements contain in the benchmark, then use (umask 0022 &amp;&amp; gsetting set) commands from above to temporarily set umask ensuring that any files or directories created by gsettings will have the required permissions.</p> <p>- OR/IF - A lock does not exist: 1. create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content: <pre><code>[org/gnome/desktop/media-handling]\nautorun-never=true\n</code></pre></p> <ol> <li>Update the system databases <pre><code># dconf update\n</code></pre> Note: Users must log out and back in again before the system-wide settings take effect.</li> </ol> <p>Default Value: false</p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","10.3 Disable Autorun and Autoplay for Removable Media","IG1","IG2","IG3","T1091","TA0001","TA0008","M1042"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.9-Ensure-gdm-autorun-never-is-not-overridden/","title":"1.7.9 Ensure GDM autorun-never is not overridden","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","10.3 Disable Autorun and Autoplay for Removable Media","IG1","IG2","IG3","T1091","TA0001","TA0008","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.9-Ensure-gdm-autorun-never-is-not-overridden/#audit","title":"Audit","text":"<p>Run the following script to verify that autorun-never=true cannot be overridden: <pre><code>#!/usr/bin/env bash\n{\n# Function to check and report if a specific setting is locked and set to true\ncheck_setting() {\ngrep -Psrilq \"^\\h*$1\\h*=\\h*true\\b\" /etc/dconf/db/local.d/locks/* 2&gt;/dev/null &amp;&amp; echo \"- \\\"$3\\\" is locked and set to false\" || echo \"- \\\"$3\\\"is not locked or not set to false\"\n}\n# Array of settings to check\ndeclare -A settings=([\"autorun-never\"]=\"org/gnome/desktop/media-handling\")\n# Check GNOME Desktop Manager configurations\nl_output=() l_output2=()\nfor setting in \"${!settings[@]}\"; do\nresult=$(check_setting \"$setting\")\nl_output+=(\"$result\")\nif [[ $result == *\"is not locked\"* || $result == *\"not set to true\"* ]]; then\nl_output2+=(\"$result\")\nfi\ndone\n# Report results\nif [ ${#l_output2[@]} -ne 0 ]; then\nprintf '%s\\n' \"- Audit Result:\" \" ** FAIL **\"\nprintf '%s\\n' \"- Reason(s) for audit failure:\"\nfor msg in \"${l_output2[@]}\"; do\nprintf '%s\\n' \"$msg\"\ndone\nelse\nprintf '%s\\n' \"- Audit Result:\" \" ** PASS **\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","10.3 Disable Autorun and Autoplay for Removable Media","IG1","IG2","IG3","T1091","TA0001","TA0008","M1028"]},{"location":"1-Initial-Setup/1.7-Configure-Gnome-Display-Manager/1.7.9-Ensure-gdm-autorun-never-is-not-overridden/#remediation","title":"Remediation","text":"<ol> <li> <p>To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content: <pre><code>[org/gnome/desktop/media-handling]\nautorun-never=true\n</code></pre></p> </li> <li> <p>Update the system databases: <pre><code># dconf update\n</code></pre> Note:</p> </li> <li>A user profile must exist in order to apply locks.</li> <li>Users must log out and back in again before the system-wide settings take effect.</li> </ol>","tags":["Level 1","Workstation","Server","Initial Setup","Configure GNOME Display Manager","Automated","10.3 Disable Autorun and Autoplay for Removable Media","IG1","IG2","IG3","T1091","TA0001","TA0008","M1028"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.1-Ensure-autofs-services-are-not-in-use/","title":"2.1.1 Ensure autofs services are not in use","text":"","tags":["Level 2","Level 1","Server","Workstation","Services","Configure Server Services","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1068","T1203","T1211","T1212"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.1-Ensure-autofs-services-are-not-in-use/#audit","title":"Audit","text":"<p>As a preference autofs should not be installed unless other packages depend on it. Run the following command to verify autofs is not installed: <pre><code># dpkg-query -s autofs &amp;&gt;/dev/null &amp;&amp; echo \"autofs is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify autofs.service is not enabled: <pre><code># systemctl is-enabled autofs.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify autofs.service is not active: <pre><code># systemctl is-active autofs.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency  </p> <ul> <li>Ensure the dependent package is approved by local site policy</li> <li>Ensure stopping and masking the service and/or socket meets local site policy</li> </ul>","tags":["Level 2","Level 1","Server","Workstation","Services","Configure Server Services","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1068","T1203","T1211","T1212"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.1-Ensure-autofs-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop autofs.service and remove the autofs package: <pre><code># systemctl stop autofs.service\n# apt purge autofs\n</code></pre></p> <p>- OR - - IF - the autofs package is required as a dependency: Run the following commands to stop and mask autofs.service: <pre><code># systemctl stop autofs.service\n# systemctl mask autofs.service\n</code></pre></p>","tags":["Level 2","Level 1","Server","Workstation","Services","Configure Server Services","Automated","IG1","IG2","IG3","10.3 Disable Autorun and Autoplay for Removable Media","T1068","T1203","T1211","T1212"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.10-Ensure-nis-server-services-are-not-in-use/","title":"2.1.10 Ensure nis server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.10-Ensure-nis-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify ypserv is not installed: <pre><code># dpkg-query -s ypserv &amp;&gt;/dev/null &amp;&amp; echo \"ypserv is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify ypserv.service is not enabled: <pre><code># systemctl is-enabled ypserv.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify ypserv.service is not active: <pre><code># systemctl is-active ypserv.service 2&gt;/dev/null | grep '^active\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.10-Ensure-nis-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop ypserv.service and remove ypserv package: <pre><code># systemctl stop ypserv.service\n# apt purge ypserv\n</code></pre></p> <p>- OR - - IF - the ypserv package is required as a dependency: Run the following commands to stop and mask ypserv.service: <pre><code># systemctl stop ypserv.service\n# systemctl mask ypserv.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.11-Ensure-print-server-services-are-not-in-use/","title":"2.1.11 Ensure print server services are not in use","text":"","tags":["Level 1","Level 2","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.11-Ensure-print-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify cups is not Installed: <pre><code># dpkg-query -s cups &amp;&gt;/dev/null &amp;&amp; echo \"cups is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify the cups.socket and cups.service is not enabled: <pre><code># systemctl is-enabled cups.socket cups.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify the cups.socket and cups.service is not active: <pre><code># systemctl is-active cups.socket cups.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Level 2","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.11-Ensure-print-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop cups.socket and cups.service, and remove the cups package: <pre><code># systemctl stop cups.socket cups.service\n# apt purge cups\n</code></pre></p> <p>- OR - - IF - the cups package is required as a dependency: Run the following commands to stop and mask the cups.service and cups.service: <pre><code># systemctl stop cups.socket cups.service\n# systemctl mask cups.socket cups.service\n</code></pre></p>","tags":["Level 1","Level 2","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.12-Ensure-rpcbind-server-services-are-not-in-use/","title":"2.1.12 Ensure rpcbind services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1498","T1498.002","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.12-Ensure-rpcbind-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify rpcbind package is not installed: <pre><code># dpkg-query -s rpcbind &amp;&gt;/dev/null &amp;&amp; echo \"rpcbind is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the rpcbind package is required as a dependency: Run the following command to verify rpcbind.socket and rpcbind.service are not enabled: <pre><code># systemctl is-enabled rpcbind.socket rpcbind.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify the rpcbind.socket and rcpbind.service are not active: <pre><code># systemctl is-active cups.socket cups.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1498","T1498.002","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.12-Ensure-rpcbind-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop rpcbind.socket and rpcbind.service, and remove the rpcbind package: <pre><code># systemctl stop rpcbind.socket rpcbind.service\n# apt purge rpcbind\n</code></pre></p> <p>- OR - - IF - the rpcbind package is required as a dependency: Run the following commands to stop and mask rpcbind.socket and rpcbind.service: <pre><code># systemctl stop rpcbind.socket rpcbind.service\n# systemctl mask rpcbind.socket rpcbind.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1498","T1498.002","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.13-Ensure-rsync-services-are-not-in-use/","title":"2.1.13 Ensure rsync services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1105","T1203","T1210","T1543","T1543.002","T1570","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.13-Ensure-rsync-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify rsync is not installed: <pre><code># dpkg-query -s rsync &amp;&gt;/dev/null &amp;&amp; echo \"rsync is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the rsync package is required as a dependency: Run the following command to verify rsync.service is not enabled: <pre><code># systemctl is-enabled rsync.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify rsync.service is not active: <pre><code># systemctl is-active rsync.service 2&gt;/dev/null | grep '^active\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1105","T1203","T1210","T1543","T1543.002","T1570","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.13-Ensure-rsync-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop rsync.service, and remove the rsync package <pre><code># apt purge rsync\n</code></pre> - OR - - IF - the rsync package is required as a dependency: Run the following commands to stop and mask rsync.service: <pre><code># systemctl stop slapd.service\n# systemctl mask slapd.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1105","T1203","T1210","T1543","T1543.002","T1570","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.14-Ensure-samba-file-server-services-are-not-in-use/","title":"2.1.14 Ensure samba file server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","T1039","T1083","T1135","T1203","T1210","T1543","T1543.002","TA0008"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.14-Ensure-samba-file-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify samba is not installed: <pre><code># dpkg-query -s samba &amp;&gt;/dev/null &amp;&amp; echo \"samba is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify smbd.service is not enabled: <pre><code># systemctl is-enabled smbd.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify the smbd.service is not active: <pre><code># systemctl is-active smbd.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","T1039","T1083","T1135","T1203","T1210","T1543","T1543.002","TA0008"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.14-Ensure-samba-file-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop smbd.service and remove samba package: <pre><code># systemctl stop smbd.service\n# apt purge samba\n</code></pre></p> <p>- OR - - IF - the samba package is required as a dependency: Run the following commands to stop and mask smbd.service: <pre><code># systemctl stop smbd.service\n# systemctl mask smbd.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","T1039","T1083","T1135","T1203","T1210","T1543","T1543.002","TA0008"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.15-Ensure-snmp-services-are-not-in-use/","title":"2.1.15 Ensure snmp services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.15-Ensure-snmp-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify snmpd is not installed: <pre><code># dpkg-query -s snmpd &amp;&gt;/dev/null &amp;&amp; echo \"snmpd is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify snmpd.service is not enabled: <pre><code># systemctl is-enabled snmpd.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify the snmpd.service is not active: <pre><code># systemctl is-active snmpd.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.15-Ensure-snmp-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop snmpd.service and remove the snmpd package: <pre><code># systemctl stop snmpd.service\n# apt purge snmpd\n</code></pre></p> <p>- OR - if the package is required for dependencies: Run the following commands to stop and mask the snmpd.service: <pre><code># systemctl stop snmpd.service\n# systemctl mask snmpd.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.16-Ensure-tftp-server-services-are-not-in-use/","title":"2.1.16 Ensure tftp server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.16-Ensure-tftp-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify tftpd-hpa is not installed: <pre><code># dpkg-query -s tftpd-hpa &amp;&gt;/dev/null &amp;&amp; echo \"tftpd-hpa is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify tftpd-hpa.service is not enabled: <pre><code># systemctl is-enabled tftpd-hpa.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify tftpd-hpa.service is not active: <pre><code># systemctl is-active tftpd-hpa.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.16-Ensure-tftp-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package: <pre><code># systemctl stop tftpd-hpa.service\n# apt purge tftpd-hpa\n</code></pre></p> <p>- OR - - IF - the tftpd-hpa package is required as a dependency: Run the following commands to stop and mask tftpd-hpa.service: <pre><code># systemctl stop tftpd-hpa.service\n# systemctl mask tftpd-hpa.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.17-Ensure-web-proxy-server-services-are-not-in-use/","title":"2.1.17 Ensure web proxy server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.17-Ensure-web-proxy-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify squid is not installed: <pre><code># dpkg-query -s squid &amp;&gt;/dev/null &amp;&amp; echo \"squid is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify squid.service is not enabled: <pre><code># systemctl is-enabled squid.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify the squid.service is not active: <pre><code># systemctl is-active squid.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.17-Ensure-web-proxy-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop squid.service and remove the squid package: <pre><code># systemctl stop squid.service\n# apt purge squid\n</code></pre></p> <p>- OR - if the squid package is required as a dependency: Run the following commands to stop and mask squid.service: <pre><code># systemctl stop squid.service\n# systemctl mask squid.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-web-server-services-are-not-in-use/","title":"2.1.18 Ensure web server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-web-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify apache2 is not installed:</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-web-server-services-are-not-in-use/#dpkg-query-s-apache2-devnull-echo-apache2-is-installed","title":"dpkg-query -s apache2 &amp;&gt;/dev/null &amp;&amp; echo \"apache2 is installed\"","text":"<p><pre><code>Nothing should be returned.\n\nRun the following command to verify **nginx** is not installed:\n# dpkg-query -s nginx &amp;&gt;/dev/null &amp;&amp; echo \"nginx is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is installed and is required for dependencies: Run the following command to verify apache2.socket, apache2.service and nginx.service are not enabled: <pre><code># systemctl is-enabled apache2.socket apache2.service nginx.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify apache2.socket, apache2.service and nginx.service are not active: <pre><code># systemctl is-active apache2.socket apache2.service nginx.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Other web server packages may exist. They should also be audited, if not required and authorized by local site policy - If the package is required for a dependency:  - Ensure the dependent package is approved by local site policy  - Ensure stopping and masking the service and/or socket meets local site policy </p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-web-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop httpd.socket, httpd.service, and nginx.service, and remove apache2 and nginx packages: <pre><code># systemctl stop apache2.socket apache2.service nginx.service\n# apt purge apache2 nginx\n</code></pre></p> <p>- OR - - IF - the bind9 package is installed and is required for dependencies: Run the following commands to stop and mask apache2.socket, apache2.service and nginx.service: <pre><code># systemctl stop apache2.socket apache2.service nginx.service\n# systemctl mask apache2.socket apache2.service nginx.service\n</code></pre></p> <p>Note: Other web server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service and socket should be stopped and masked.</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-xinetd-services-are-not-in-use/","title":"2.1.19 Ensure xinetd services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-xinetd-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify xinetd package is not installed:</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-xinetd-services-are-not-in-use/#dpkg-query-s-xinetd-devnull-echo-xinetd-is-installed","title":"dpkg-query -s xinetd &amp;&gt;/dev/null &amp;&amp; echo \"xinetd is installed\"","text":"<p><pre><code>Nothing should be returned.\n\n**- OR -**\n**- IF -** the **xinetd** package is required as a dependency:\nRun the following command to verify **xinetd.service** is not enabled:\n```bash\n# systemctl is-enabled xinetd.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify xinetd.service is not active: <pre><code># systemctl is-active xinetd.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy </p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.18-Ensure-xinetd-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop xinetd.service, and remove xinetd package: <pre><code># systemctl stop xinetd.service\n# apt purge xinetd\n</code></pre></p> <p>- OR - - IF - the xinetd package is required as a dependency: Run the following commands to stop and mask the xinetd.service: <pre><code># systemctl stop xinetd.service\n# systemctl mask xinetd.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.2-Ensure-avahi-daemon-services-are-not-in-use/","title":"2.1.2 Ensure avahi daemon services are not in use","text":"","tags":["Level 1","Level 2","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.2-Ensure-avahi-daemon-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify avahi-daemon is not installed: <pre><code># dpkg-query -s avahi-daemon &amp;&gt;/dev/null &amp;&amp; echo \"avahi-daemon is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the avahi package is required as a dependency: Run the following command to verify avahi-daemon.socket and avahi-daemon.service are not enabled: <pre><code># systemctl is-enabled avahi-daemon.socket avahi-daemon.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify avahi-daemon.socket and avahi-daemon.service are not active: <pre><code># systemctl is-active avahi-daemon.socket avahi-daemon.service 2&gt;/dev/null | grep '^active\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Level 2","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.2-Ensure-avahi-daemon-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop avahi-daemon.socket and avahi-daemon.service, and remove the avahi-daemon package: <pre><code># systemctl stop avahi-daemon.socket avahi-daemon.service\n# apt purge avahi-daemon\n</code></pre></p> <p>- OR - - IF - the avahi-daemon package is required as a dependency: Run the following commands to stop and mask avahi-daemon.socket and avahi-daemon.service: <pre><code># systemctl stop avahi-daemon.socket avahi-daemon.service\n# systemctl mask avahi-daemon.socket avahi-daemon.service\n</code></pre></p>","tags":["Level 1","Level 2","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.20-Ensure-x-window-server-services-are-not-in-use/","title":"2.1.20 Ensure X window server services are not in use","text":"","tags":["Level 2","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.20-Ensure-x-window-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:  Run the following command to Verify X Windows System is not installed: <pre><code>dpkg-query -s xserver-common &amp;&gt;/dev/null &amp;&amp; echo \"xserver-common is installed\"\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.20-Ensure-x-window-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>- IF - a Graphical Desktop Manager or X-Windows server is not required and approved by local site policy:  Run the following command to remove the X Windows System packages: <pre><code># apt purge xserver-common\n</code></pre></p>","tags":["Level 2","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.21-Ensure-mail-transfer-agent-is-configured-for-local-only-mode/","title":"2.1.21 Ensure mail transfer agent is configured for local-only mode","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1018","T1210","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.21-Ensure-mail-transfer-agent-is-configured-for-local-only-mode/#audit","title":"Audit","text":"<p>Run the following command to verify that the MTA is not listening on any non-loopback address (127.0.0.1 or ::1). <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); a_port_list=(\"25\" \"465\" \"587\")\nfor l_port_number in \"${a_port_list[@]}\"; do\nif ss -plntu | grep -P -- ':'\"$l_port_number\"'\\b' | grep -Pvq -- '\\h+(127\\.0\\.0\\.1|\\[?::1\\]?):'\"$l_port_number\"'\\b'; then\na_output2+=(\" - Port \\\"$l_port_number\\\" is listening on a non-loopback network interface\")\nelse\na_output+=(\" - Port \\\"$l_port_number\\\" is not listening on a non-loopback network interface\")\nfi\ndone\nif command -v postconf &amp;&gt; /dev/null; then\nl_interfaces=\"$(postconf -n inet_interfaces)\"\nelif command -v exim &amp;&gt; /dev/null; then\nl_interfaces=\"$(exim -bP local_interfaces)\"\nelif command -v sendmail &amp;&gt; /dev/null; then\nl_interfaces=\"$(grep -i \"0 DaemonPortOptions=\" /etc/mail/sendmail.cr | grep -oP '?&lt;=Addr=)[^,+]+')\"\nfi\nif [ -n \"$l_interfaces\" ]; then\nif grep -Pqi '\\ball\\b' &lt;&lt;&lt; \"$l_interfaces\"; then\na_output2+=(\" - MTA is bound to all network interfaces\")\nelif ! grep -Pqi '(inet_interfaces\\h*=\\h*)?(0\\.0\\.0\\.0|::1|loopback-only)' &lt;&lt;&lt; \"$l_interfaces\"; then\na_output2+=(\" - MTA is bound to a network interface\" \"\\\"$l_interfaces\\\"\")\nelse\na_output+=(\" - MTA is not bound to a non loopback network interface\"\n\"\n\\\"$l_interfaces\\\"\")\nfi\nelse\na_output+=(\" - MTA not detected or in use\")\nfi\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" * Reasons for audit failure *\" \"${a_output2[@]}\" \"\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1018","T1210","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.21-Ensure-mail-transfer-agent-is-configured-for-local-only-mode/#remediation","title":"Remediation","text":"<p>Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below: <pre><code>inet_interfaces = loopback-only\n</code></pre></p> <p>Run the following command to restart postfix: <pre><code># systemctl restart postfix\n</code></pre></p> <p>Note: - This recommendation is designed around the postfix mail server. - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1018","T1210","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.22-Ensure-only-approved-services-are-listening-on-a-network-interface/","title":"2.1.22 Ensure only approved services are listening on a network interface","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.22-Ensure-only-approved-services-are-listening-on-a-network-interface/#audit","title":"Audit","text":"<p>Run the following command: <pre><code># ss -plntu\n</code></pre></p> <p>Review the output to ensure: - All services listed are required on the system and approved by local site policy. - Both the port and interface the service is listening on are approved by local site policy. - If a listed service is not required:  - Remove the package containing the service  - - IF - the service's package is required for a dependency, stop and mask the service and/or socket</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.22-Ensure-only-approved-services-are-listening-on-a-network-interface/#remediation","title":"Remediation","text":"<p>Run the following command to stop the service and remove the package containing the service: <pre><code># systemctl stop &lt;service_name&gt;.socket &lt;service_name&gt;.service\n# apt purge &lt;package_name&gt;\n</code></pre></p> <p>- OR - If required packages have a dependency: Run the following commands to stop and mask the service and socket: <pre><code># systemctl stop &lt;service_name&gt;.socket &lt;service_name&gt;.service\n# systemctl mask &lt;service_name&gt;.socket &lt;service_name&gt;.service\n</code></pre></p> <p>Note: replace  with the appropriate service name.","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.3-Ensure-dhcp-server-services-are-not-in-use/","title":"2.1.3 Ensure dhcp server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.3-Ensure-dhcp-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following commands to verify isc-dhcp-server is not installed: <pre><code># dpkg-query -s isc-dhcp-server &amp;&gt;/dev/null &amp;&amp; echo \"isc-dhcp-server is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify isc-dhcp-server.service and isc-dhcp-server6.service are not enabled: <pre><code># systemctl is-enabled isc-dhcp-server.service isc-dhcp-server6.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify isc-dhcp-server.service and isc-dhcp-server6.service are not active: <pre><code># systemctl is-active isc-dhcp-server.service isc-dhcp-server6.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.3-Ensure-dhcp-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package: <pre><code># systemctl stop isc-dhcp-server.service isc-dhcp-server6.service\n# apt purge isc-dhcp-server\n</code></pre></p> <p>- OR - - IF - the isc-dhcp-server package is required as a dependency: Run the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service: <pre><code># systemctl stop isc-dhcp-server.service isc-dhcp-server6.service\n# systemctl mask isc-dhcp-server isc-dhcp-server6.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.4-Ensure-dns-server-services-are-not-in-use/","title":"2.1.4 Ensure dns server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.4-Ensure-dns-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify bind9 is not installed: <pre><code># dpkg-query -s bind9 &amp;&gt;/dev/null &amp;&amp; echo \"bind9 is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify named.service is not enabled: <pre><code># systemctl is-enabled named.service 2&gt;/dev/null | grep 'enabled'\nNothing should be returned\n</code></pre></p> <p>Run the following command to verify named.service is not active: <pre><code># systemctl is-active named.service 2&gt;/dev/null | grep '^active'\nNothing should be returned\n</code></pre></p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.4-Ensure-dns-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop named.service and remove the bind9 package: <pre><code># systemctl stop named.service\n# apt purge bind9\n</code></pre></p> <p>- OR - - IF - the bind9 package is required as a dependency: Run the following commands to stop and mask bind9.service: <pre><code># systemctl stop named.service\n# systemctl mask named.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.5-Ensure-dnsmasq-services-are-not-in-use/","title":"2.1.5 Ensure dnsmasq services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.5-Ensure-dnsmasq-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run one of the following command to verify dnsmasq is not installed: <pre><code># dpkg-query -s dnsmasq &amp;&gt;/dev/null &amp;&amp; echo \"dnsmasq is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify dnsmasq.service is not enabled: <pre><code># systemctl is-enabled dnsmasq.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify dnsmasq.service is not active: <pre><code># systemctl is-active dnsmasq.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.5-Ensure-dnsmasq-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop dnsmasq.service and remove the dnsmasq package: <pre><code># systemctl stop dnsmasq.service\n# apt purge dnsmasq\n</code></pre></p> <p>- OR - - IF - the dnsmasq package is required as a dependency: Run the following commands to stop and mask dnsmasq.service: <pre><code># systemctl stop dnsmasq.service\n# systemctl mask dnsmasq.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.6-Ensure-ftp-server-services-are-not-in-use/","title":"2.1.6 Ensure ftp server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.6-Ensure-ftp-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify vsftpd is not installed: <pre><code># dpkg-query -s vsftpd &amp;&gt;/dev/null &amp;&amp; echo \"vsftpd is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify vsftpd service is not enabled: <pre><code># systemctl is-enabled vsftpd.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify vsftpd service is not active: <pre><code># systemctl is-active vsftpd.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.6-Ensure-ftp-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop vsftpd.service and remove the vsftpd package: <pre><code># systemctl stop vsftpd.service\n# apt purge vsftpd\n</code></pre></p> <p>- OR - - IF - the vsftpd package is required as a dependency: Run the following commands to stop and mask vsftpd.service: <pre><code># systemctl stop vsftpd.service\n# systemctl mask vsftpd.service\n</code></pre></p> <p>Note: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.7-Ensure-ldap-server-services-are-not-in-use/","title":"2.1.7 Ensure ldap server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.7-Ensure-ldap-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify slapd is not installed: <pre><code># dpkg-query -s slapd &amp;&gt;/dev/null &amp;&amp; echo \"slapd is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is required for dependencies: Run the following command to verify slapd.service is not enabled: <pre><code># systemctl is-enabled slapd.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify slapd.service is not active: <pre><code># systemctl is-active slapd.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.7-Ensure-ldap-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run one of the following commands to stop slapd.service and remove the slapd package: <pre><code># systemctl stop slapd.service\n# apt purge slapd\n</code></pre></p> <p>- OR - - IF - the slapd package is required as a dependency: Run the following commands to stop and mask slapd.service: <pre><code># systemctl stop slapd.service\n# systemctl mask slapd.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.8-Ensure-message-access-server-services-are-not-in-use/","title":"2.1.8 Ensure message access server services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.8-Ensure-message-access-server-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify dovecot-imapd and dovecot-pop3d are not installed: <pre><code># dpkg-query -s dovecot-imapd &amp;&gt;/dev/null &amp;&amp; echo \"dovecot-imapd is installed\"\n</code></pre> Nothing should be returned.</p> <p><pre><code># dpkg-query -s dovecot-pop3d &amp;&gt;/dev/null &amp;&amp; echo \"dovecot-pop3d is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the package is installed and is required for dependencies: Run the following commands to verify dovecot.socket and dovecot.service are not enabled:</p> <p><pre><code># systemctl is-enabled dovecot.socket dovecot.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following commands to verify dovecot.socket and dovecot.service are not active: <pre><code># systemctl is-active dovecot.socket dovecot.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency</p> <ul> <li>Ensure the dependent package is approved by local site policy</li> <li>Ensure stopping and masking the service and/or socket meets local site policy</li> </ul>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.8-Ensure-message-access-server-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run one of the following commands to remove dovecot-imapd and dovecot-pop3d: Run the following commands to stop dovecot.socket and dovecot.service, and remove the dovecot-imapd and dovecot-pop3d packages:</p> <pre><code># systemctl stop dovecot.socket dovecot.service\n# apt purge dovecot-imapd dovecot-pop3d\n</code></pre> <p>- OR - - IF - a package is installed and is required for dependencies: Run the following commands to stop and mask dovecot.socket and dovecot.service:</p> <pre><code># systemctl stop dovecot.socket dovecot.service\n# systemctl mask dovecot.socket dovecot.service\n</code></pre>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1210","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.9-Ensure-network-file-system-services-are-not-in-use/","title":"2.1.9 Ensure network file system services are not in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","T1039","T1083","T1135","T1210","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.9-Ensure-network-file-system-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify nfs-kernel-server is not installed: <pre><code># dpkg-query -s nfs-kernel-server &amp;&gt;/dev/null &amp;&amp; echo \"nfs-kernel-server is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - package is required for dependencies: Run the following command to verify nfs-server.service is not enabled: <pre><code># systemctl is-enabled nfs-server.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify nfs-server.service is not active: <pre><code># systemctl is-active nfs-server.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","T1039","T1083","T1135","T1210","TA0008","M1042"]},{"location":"2-Services/2.1-Configure-Server-Services/2.1.9-Ensure-network-file-system-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following command to stop nfs-server.service and remove nfs-kernel-server package: <pre><code># systemctl stop nfs-server.service\n# apt purge nfs-kernel-server\n</code></pre></p> <p>- OR - - IF - the nfs-kernel-server package is required as a dependency: Run the following commands to stop and mask nfs-server.service: <pre><code># systemctl stop nfs-server.service\n# systemctl mask nfs-server.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Server Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1005","T1039","T1083","T1135","T1210","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.1-Ensure-nis-client-is-not-installed/","title":"2.2.1 Ensure NIS Client is not installed","text":"","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","T1570","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.1-Ensure-nis-client-is-not-installed/#audit","title":"Audit","text":"<p>Verify nis is not installed. Use the following command to provide the needed information: <pre><code># dpkg-query -s nis &amp;&gt;/dev/null &amp;&amp; echo \"nis is installed\"\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","T1570","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.1-Ensure-nis-client-is-not-installed/#remediation","title":"Remediation","text":"<p>Uninstall nis: <pre><code># apt purge nis\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","T1570","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.2-Ensure-rsh-client-is-not-installed/","title":"2.2.2 Ensure rsh client is not installed","text":"","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1040","T1203","T1543","T1543.002","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.2-Ensure-rsh-client-is-not-installed/#audit","title":"Audit","text":"<p>Verify rsh-client is not installed. Use the following command to provide the needed information: <pre><code># dpkg-query -s rsh-client &amp;&gt;/dev/null &amp;&amp; echo \"rsh-client is installed\"\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1040","T1203","T1543","T1543.002","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.2-Ensure-rsh-client-is-not-installed/#remediation","title":"Remediation","text":"<p>Uninstall rsh: <pre><code># apt purge rsh-client\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1040","T1203","T1543","T1543.002","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.3-Ensure-talk-client-is-not-installed/","title":"2.2.3 Ensure talk client is not installed","text":"","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0006","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.3-Ensure-talk-client-is-not-installed/#audit","title":"Audit","text":"<p>Verify talk is not installed. The following command may provide the needed information: <pre><code># dpkg-query -s talk &amp;&gt;/dev/null &amp;&amp; echo \"talk is installed\"\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0006","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.3-Ensure-talk-client-is-not-installed/#remediation","title":"Remediation","text":"<p>Uninstall talk: <pre><code># apt purge talk\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0006","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.4-Ensure-telnet-client-is-not-installed/","title":"2.2.4 Ensure telnet client is not installed","text":"","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1040","T1203","T1543","T1543.002","TA0006","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.4-Ensure-telnet-client-is-not-installed/#audit","title":"Audit","text":"<p>Verify inetutils-telnet &amp; telnet are not installed. Use the following command to provide the needed information: <pre><code># dpkg-query -l | grep -E 'telnet|inetutils-telnet' &amp;&gt;/dev/null &amp;&amp; echo \"telnet is installed\"\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1040","T1203","T1543","T1543.002","TA0006","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.4-Ensure-telnet-client-is-not-installed/#remediation","title":"Remediation","text":"<p>Run the following commands to uninstall telnet &amp; inetutils-telnet: <pre><code># apt purge telnet\n# apt purge inetutils-telnet\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1040","T1203","T1543","T1543.002","TA0006","TA0008","M1041","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.5-Ensure-ldap-client-is-not-installed/","title":"2.2.5 Ensure LDAP client is not installed","text":"","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.5-Ensure-ldap-client-is-not-installed/#audit","title":"Audit","text":"<p>Verify that ldap-utils is not installed. Use the following command to provide the needed information: <pre><code># dpkg-query -s ldap-utils &amp;&gt;/dev/null &amp;&amp; echo \"ldap-utils is installed\"\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.5-Ensure-ldap-client-is-not-installed/#remediation","title":"Remediation","text":"<p>Uninstall ldap-utils: <pre><code># apt purge ldap-utils\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.6-Ensure-ftp-client-is-not-installed/","title":"2.2.6 Ensure ftp client is not installed","text":"","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.6-Ensure-ftp-client-is-not-installed/#audit","title":"Audit","text":"<p>Verify tnftp &amp; ftp is not installed. Use the following command to provide the needed information: <pre><code># dpkg-query -l | grep -E 'ftp|tnftp' &amp;&gt;/dev/null &amp;&amp; echo \"ftp is installed\"\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.2-Configure-Client-Services/2.2.6-Ensure-ftp-client-is-not-installed/#remediation","title":"Remediation","text":"<p>Run the following commands to uninstall tnftp &amp; ftp: <pre><code># apt purge ftp\n# apt purge tnftp\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Client Services","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1203","T1543","T1543.002","TA0008","M1042"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.1-Ensure-time-synchronization-is-in-use/2.3.1.1-Ensure-a-single-time-synchronization-daemon-is-in-use/","title":"2.3.1.1 Ensure a single time synchronization daemon is in use","text":"","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Ensure time synchronization is in use","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0005"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.1-Ensure-time-synchronization-is-in-use/2.3.1.1-Ensure-a-single-time-synchronization-daemon-is-in-use/#audit","title":"Audit","text":"<p>On physical systems, and virtual systems where host based time synchronization is not available. One of the three time synchronization daemons should be available; chrony or systemd-timesyncd</p> <p>Run the following script to verify that a single time synchronization daemon is available on the system: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\"\nservice_not_enabled_chk()\n{\nl_out2=\"\"\nif systemctl is-enabled \"$l_service_name\" 2&gt;/dev/null | grep -q 'enabled'; then\nl_out2=\"$l_out2\\n - Daemon: \\\"$l_service_name\\\" is enabled on the system\"\nfi\nif systemctl is-active \"$l_service_name\" 2&gt;/dev/null | grep -q '^active'; then\nl_out2=\"$l_out2\\n - Daemon: \\\"$l_service_name\\\" is active on the system\"\nfi\n}\nl_service_name=\"systemd-timesyncd.service\" # Check systemd-timesyncd daemon\nservice_not_enabled_chk\nif [ -n \"$l_out2\" ]; then\nl_timesyncd=\"y\"\nl_out_tsd=\"$l_out2\"\nelse\nl_timesyncd=\"n\"\nl_out_tsd=\"\\n - Daemon: \\\"$l_service_name\\\" is not enabled and not active on the system\"\nfi\nl_service_name=\"chrony.service\" # Check chrony\nservice_not_enabled_chk\nif [ -n \"$l_out2\" ]; then\nl_chrony=\"y\"\nl_out_chrony=\"$l_out2\"\nelse\nl_chrony=\"n\"\nl_out_chrony=\"\\n - Daemon: \\\"$l_service_name\\\" is not enabled and not active on the system\"\nfi\nl_status=\"$l_timesyncd$l_chrony\"\ncase \"$l_status\" in\nyy)\nl_output2=\" - More than one time sync daemon is in use on the system$l_out_tsd$l_out_chrony\"\n;;\nnn)\nl_output2=\" - No time sync daemon is in use on the system$l_out_tsd$l_out_chrony\"\n;;\nyn|ny)\nl_output=\" - Only one time sync daemon is in use on the system$l_out_tsd$l_out_chrony\"\n;;\n*)\nl_output2=\" - Unable to determine time sync daemon(s) status\"\n;;\nesac\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n\nelse\necho -e \"\\n- Audit Result:\\n\n:\\n$l_output2\\n\"\nfi\n}\n</code></pre></p> <p>NOTE: Follow the guidance in the subsection for the time synchronization daemon available on the system and skip the other time synchronization daemon subsection.</p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Ensure time synchronization is in use","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0005"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.1-Ensure-time-synchronization-is-in-use/2.3.1.1-Ensure-a-single-time-synchronization-daemon-is-in-use/#remediation","title":"Remediation","text":"<p>On physical systems, and virtual systems where host based time synchronization is not available.</p> <p>Select one of two three time synchronization daemons; chrony (1), systemd-timesyncd (2) and following the remediation procedure for the selected daemon.</p> <p>Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:</p> <ol> <li>chrony</li> </ol> <p>Run the following command to install chrony: <pre><code># apt install chrony\n</code></pre></p> <p>Run the following commands to stop and mask the systemd-timesyncd daemon: <pre><code># systemctl stop systemd-timesyncd.service\n# systemctl mask systemd-timesyncd.service\n</code></pre></p> <p>NOTE: - Subsection: Configure chrony should be followed - Subsection: Configure systemd-timesyncd should be skipped</p> <ol> <li>systemd-timesyncd</li> </ol> <p>Run the following command to remove the chrony package: <pre><code># apt purge chrony\n# apt autoremove chrony\n</code></pre></p> <p>NOTE: - Subsection: Configure systemd-timesyncd should be followed - Subsection: Configure chrony should be skipped</p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Ensure time synchronization is in use","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0005"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.2-Configure-systemd-timesyncd/2.3.2.1-Ensure-systemd-timesyncd-configured-with-authorized-timeserver/","title":"2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver","text":"","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure systemd-timesyncd","Manual","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.2-Configure-systemd-timesyncd/2.3.2.1-Ensure-systemd-timesyncd-configured-with-authorized-timeserver/#audit","title":"Audit","text":"<p>Run the following command to verify the NTP and/or FallbackNTP option is set to local site approved authoritative time server(s): <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() a_out=() a_out2=() a_parlist=(\"NTP=[^#\\n\\r]+\" \"FallbackNTP=[^#\\n\\r]+\")\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"/etc/systemd/timesyncd.conf\"\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_out+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file:\\\"$l_file_name\\\"\")\nelse\na_out2+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file:\\\"$l_file_name\\\"\" \\\"Should be set to: \\\"$l_value_out\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_out2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure ***\")\nfi\n}\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\"; l_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\"; l_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_out[@]}\" -gt 0 ]; then\na_output+=(\"${a_out[@]}\"); [ \"${#a_out2[@]}\" -gt 0 ] &amp;&amp; a_output3+=(\" ** INFO: **\" \"${a_out2[@]}\")\nelse\na_output2+=(\"${a_out2[@]}\")\nfi\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"${a_output3[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\" [ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p> <p>Note: Please ensure the output for NTP and/or FallbackNTP is in accordance with local site policy. The timeservers in the example output are provided as an example of possible timeservers and they may not follow local site policy. <pre><code>## Remediation\nSet **NTP** and/or **FallbackNPT** parameters to local site approved authoritative time server(s) in **/etc/systemd/timesyncd.conf** or a file in **/etc/systemd/timesyncd.conf.d/** ending in **.conf** in the **[Time]** section:\nExample file:\n```bash\n[Time]\nNTP=time.nist.gov # Uses the generic name for NIST's time servers\nFallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers\n</code></pre></p> <p>Example script to create the systemd drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_settings=(\"NTP=time.nist.gov\" \"FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov\")\n[ ! -d /etc/systemd/timesyncd.conf.d/ ] &amp;&amp; mkdir /etc/systemd/timesyncd.conf.d/\nif grep -Psq -- '^\\h*\\[Time\\]' /etc/systemd/timesyncd.conf.d/60-timesyncd.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/timesyncd.conf.d/60-timesyncd.conf\nelse\nprintf '%s\\n' \"\" \"[Time]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/timesyncd.conf.d/60-timesyncd.conf\nfi\n}\n</code></pre></p> <p>Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten</p> <p>Run to following command to update the parameters in the service: <pre><code># systemctl reload-or-restart systemd-timesyncd\n</code></pre></p> <p>Default Value: <pre><code>#NTP=\n#FallbackNTP=\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure systemd-timesyncd","Manual","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.2-Configure-systemd-timesyncd/2.3.2.2-Ensure-systemd-timesyncd-is-enabled-and-running/","title":"2.3.2.2 Ensure systemd-timesyncd is enabled and running","text":"","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure systemd-timesyncd","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.2-Configure-systemd-timesyncd/2.3.2.2-Ensure-systemd-timesyncd-is-enabled-and-running/#audit","title":"Audit","text":"<p>- IF - systemd-timesyncd is in use on the system, run the following commands: Run the following command to verify that the systemd-timesyncd service is enabled: <pre><code># systemctl is-enabled systemd-timesyncd.service\nenabled\n</code></pre></p> <p>Run the following command to verify that the systemd-timesyncd service is active: <pre><code># systemctl is-active systemd-timesyncd.service\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure systemd-timesyncd","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.2-Configure-systemd-timesyncd/2.3.2.2-Ensure-systemd-timesyncd-is-enabled-and-running/#remediation","title":"Remediation","text":"<p>- IF - systemd-timesyncd is in use on the system, run the following commands: Run the following command to unmask systemd-timesyncd.service: <pre><code># systemctl unmask systemd-timesyncd.service\n</code></pre></p> <p>Run the following command to enable and start systemd-timesyncd.service: <pre><code># systemctl --now enable systemd-timesyncd.service\n</code></pre></p> <p>- OR -</p> <p>If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd: <pre><code># systemctl --now mask systemd-timesyncd.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure systemd-timesyncd","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.1-Ensure-chrony-is-configured-with-authorized-timeserver/","title":"2.3.3.1 Ensure chrony is configured with authorized timeserver","text":"","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Manual","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.1-Ensure-chrony-is-configured-with-authorized-timeserver/#audit","title":"Audit","text":"<p>- IF - chrony is in use on the system, run the following script to ensure chrony is configured with an authorized timeserver: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_config_files=(\"/etc/chrony/chrony.conf\")\nl_include='(confdir|sourcedir)' l_parameter_name='(server|pool)'\nl_parameter_value='.+'\nwhile IFS= read -r l_conf_loc; do\nl_dir=\"\" l_ext=\"\"\nif [ -d \"$l_conf_loc\" ]; then\nl_dir=\"$l_conf_loc\" l_ext=\"*\"\nelif grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' &lt;&lt;&lt; \"$l_conf_loc\" || [ -f \"$(readlink -f \"$l_conf_loc\")\" ]; then\nl_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\"\nfi\nif [[ -n \"$l_dir\" &amp;&amp; -n \"$l_ext\" ]]; then\nwhile IFS= read -r -d $'\\0' l_file_name; do\n[ -f \"$(readlink -f \"$l_file_name\")\" ] &amp;&amp; a_config_files+=(\"$(readlink -f \"$l_file_name\")\")\ndone &lt; &lt;(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2&gt;/dev/null)\nfi\ndone &lt; &lt;(awk '$1~/^\\s*'\"$l_include\"'$/{print $2}' \"${a_config_files[*]}\" 2&gt;/dev/null)\nfor l_file in \"${a_config_files[@]}\"; do\nl_parameter_line=\"$(grep -Psi '^\\h*'\"$l_parameter_name\"'(\\h+|\\h*:\\h*)'\"$l_parameter_value\"'\\b' \"$l_file\")\" [ -n \"$l_parameter_line\" ] &amp;&amp; a_output+=(\" - Parameter: \\\"$(tr -d '()' &lt;&lt;&lt; ${l_parameter_name//|/ or })\\\"\" \\\"Exists in the file: \\\"$l_file\\\" as:\" \"$l_parameter_line\")\ndone\n[ \"${#a_output[@]}\" -le \"0\" ] &amp;&amp; a_output2+=(\" - Parameter: \\\"$(tr -d '()' &lt;&lt;&lt; ${l_parameter_name//|/ or })\\\"\" \\\"Does not exist in the chrony configuration\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Manual","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.1-Ensure-chrony-is-configured-with-authorized-timeserver/#remediation","title":"Remediation","text":"<p>Edit /etc/chrony/chrony.conf or a file ending in .sources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy: Edit the Chrony configuration and add or edit the server and/or pool lines returned by the Audit Procedure as appropriate according to local site policy <pre><code>&lt;[server|pool]&gt; &lt;[remote-server|remote-pool]&gt;\n</code></pre></p> <p>Example script to add a drop-in configuration for the pool directive: <pre><code>#!/usr/bin/env bash\n{\n[ ! -d \"/etc/chrony/sources.d/\" ] &amp;&amp; mkdir /etc/chrony/sources.d/\nprintf '%s\\n' \"\" \"#The maxsources option is unique to the pool directive\" \\\"pool time.nist.gov iburst maxsources 4\" &gt;&gt; /etc/chrony/sources.d/60-sources.sources\nchronyc reload sources &amp;&gt;/dev/null\n}\n</code></pre></p> <p>Example script to add a drop-in configuration for the server directive: <pre><code>#!/usr/bin/env bash\n{\n[ ! -d \"/etc/chrony/sources.d/\" ] &amp;&amp; mkdir /etc/chrony/sources.d/\nprintf '%s\\n' \"\" \"server time-a-g.nist.gov iburst\" \"server 132.163.97.3 iburst\" \\\"server time-d-b.nist.gov iburst\" &gt;&gt; /etc/chrony/sources.d/60-sources.sources\nchronyc reload sources &amp;&gt;/dev/null\n}\n</code></pre></p> <p>Run the following command to reload the chronyd config: <pre><code># systemctl reload-or-restart chronyd\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Manual","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.2-Ensure-chrony-is-running-as-user-chrony/","title":"2.3.3.2 Ensure chrony is running as user _chrony","text":"","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.2-Ensure-chrony-is-running-as-user-chrony/#audit","title":"Audit","text":"<p>- IF - chrony is in use on the system, run the following command to verify the chronyd service is being run as the _chrony user: <pre><code># ps -ef | awk '(/[c]hronyd/ &amp;&amp; $1!=\"_chrony\") { print $1 }'\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.2-Ensure-chrony-is-running-as-user-chrony/#remediation","title":"Remediation","text":"<p>Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in /etc/chrony/conf.d/: <pre><code>user _chrony\n</code></pre></p> <p>- OR - If another time synchronization service is in use on the system, run the following command to remove chrony from the system: <pre><code># apt purge chrony\n# apt autoremove chrony\n</code></pre></p> <p>Default Value: user _chrony</p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.3-Ensure-chrony-is-enabled-and-running/","title":"2.3.3.3 Ensure chrony is enabled and running","text":"","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.3-Ensure-chrony-is-enabled-and-running/#audit","title":"Audit","text":"<p>- IF - chrony is in use on the system, run the following commands: Run the following command to verify that the chrony service is enabled: <pre><code># systemctl is-enabled chrony.service\nenabled\n</code></pre></p> <p>Run the following command to verify that the chrony service is active: <pre><code># systemctl is-active chrony.service\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.3-Configure-Time-Synchronization/2.3.3-Configure-chrony/2.3.3.3-Ensure-chrony-is-enabled-and-running/#remediation","title":"Remediation","text":"<p>- IF - chrony is in use on the system, run the following commands: Run the following command to unmask chrony.service: <pre><code># systemctl unmask chrony.service\n</code></pre></p> <p>Run the following command to enable and start chrony.service: <pre><code># systemctl --now enable chrony.service\n</code></pre></p> <p>- OR - If another time synchronization service is in use on the system, run the following command to remove chrony: <pre><code># apt purge chrony\n# apt autoremove chrony\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Configure Time Synchronization","Configure chrony","Automated","IG2","IG3","8.4 Standardize Time Synchronization","T1070","T1070.002","T1562","T1562.001","TA0002","M1022"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.1-Ensure-cron-daemon-is-enabled-and-active/","title":"2.4.1.1 Ensure cron daemon is enabled and active","text":"","tags":["Level 1","Workstation","Server","Services","Job Schedulers","Configure cron","Automated","T1562","T1562.001","TA0005","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.1-Ensure-cron-daemon-is-enabled-and-active/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command to verify cron is enabled: <pre><code># systemctl list-unit-files | awk '$1~/^crond?\\.service/{print $2}'\nenabled\n</code></pre></p> <p>Run the following command to verify that cron is active: <pre><code># systemctl list-units | awk '$1~/^crond?\\.service/{print $3}'\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Schedulers","Configure cron","Automated","T1562","T1562.001","TA0005","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.1-Ensure-cron-daemon-is-enabled-and-active/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following command to enable and start cron: <pre><code># systemctl unmask \"$(systemctl list-unit-files | awk '$1~/^crond?\\.service/{print $1}')\"\n# systemctl --now enable \"$(systemctl list-unit-files | awk '$1~/^crond?\\.service/{print $1}')\"\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Schedulers","Configure cron","Automated","T1562","T1562.001","TA0005","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.2-Ensure-permissions-on-etc-crontab-are-configured/","title":"2.4.1.2 Ensure permissions on /etc/crontab are configured","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.2-Ensure-permissions-on-etc-crontab-are-configured/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: <pre><code># stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/crontab\nAccess: (600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.2-Ensure-permissions-on-etc-crontab-are-configured/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following commands to set ownership and permissions on /etc/crontab: <pre><code># chown root:root /etc/crontab\n# chmod og-rwx /etc/crontab\n</code></pre></p> <p>Default Value: Access: (644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.3-Ensure-permissions-on-etc-cron.hourly-are-configured/","title":"2.4.1.3 Ensure permissions on /etc/cron.hourly are configured","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.3-Ensure-permissions-on-etc-cron.hourly-are-configured/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: <pre><code># stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.hourly/\nAccess: (700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.3-Ensure-permissions-on-etc-cron.hourly-are-configured/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following commands to set ownership and permissions on the /etc/cron.hourly directory: <pre><code># chown root:root /etc/cron.hourly/\n# chmod og-rwx /etc/cron.hourly/\n</code></pre></p> <p>Default Value: Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.4-Ensure-permissions-on-etc-cron.daily-are-configured/","title":"2.4.1.4 Ensure permissions on /etc/cron.daily are configured","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.4-Ensure-permissions-on-etc-cron.daily-are-configured/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: <pre><code># stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.daily/\nAccess: (0700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.4-Ensure-permissions-on-etc-cron.daily-are-configured/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following commands to set ownership and permissions on the /etc/cron.daily directory: <pre><code># chown root:root /etc/cron.daily/\n# chmod og-rwx /etc/cron.daily/\n</code></pre></p> <p>Default Value: Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.5-Ensure-permissions-on-etc-cron.weekly-are-configured/","title":"2.4.1.5 Ensure permissions on /etc/cron.weekly are configured","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.5-Ensure-permissions-on-etc-cron.weekly-are-configured/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: <pre><code># stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.weekly/\nAccess: (0700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.5-Ensure-permissions-on-etc-cron.weekly-are-configured/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following commands to set ownership and permissions on the /etc/cron.weekly directory: <pre><code># chown root:root /etc/cron.weekly/\n# chmod og-rwx /etc/cron.weekly/\n</code></pre></p> <p>Default Value: Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.6-Ensure-permissions-on-etc-cron.monthly-are-configured/","title":"2.4.1.6 Ensure permissions on /etc/cron.monthly are configured","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.6-Ensure-permissions-on-etc-cron.monthly-are-configured/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: <pre><code># stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.monthly/\nAccess: (0700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.6-Ensure-permissions-on-etc-cron.monthly-are-configured/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following commands to set ownership and permissions on the /etc/cron.monthly directory: <pre><code># chown root:root /etc/cron.monthly/\n# chmod og-rwx /etc/cron.monthly/\n</code></pre></p> <p>Default Value: Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.7-Ensure-permissions-on-etc-cron.d-are-configured/","title":"2.4.1.7 Ensure permissions on /etc/cron.d are configured","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.7-Ensure-permissions-on-etc-cron.d-are-configured/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command and verify Uid and Gid are both 0/root and Access does not grant permissions to group or other: <pre><code># stat -Lc 'Access: (%a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/cron.d/\nAccess: (0700/drwx------) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.7-Ensure-permissions-on-etc-cron.d-are-configured/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: Run the following commands to set ownership and permissions on the /etc/cron.d directory: <pre><code># chown root:root /etc/cron.d/\n# chmod og-rwx /etc/cron.d/\n</code></pre></p> <p>Default Value: Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","TA0007","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.8-Ensure-cron-is-restricted-to-authorized-users/","title":"2.4.1.8 Ensure cron is restricted to authorized users","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.8-Ensure-cron-is-restricted-to-authorized-users/#audit","title":"Audit","text":"<p>- IF - cron is installed on the system: Run the following command to verify /etc/cron.allow: - Exists - Is mode 0640 or more restrictive - Is owned by the user root - Is group owned by the group root - OR - the group crontab <pre><code># stat /etc/cron.deny\nstat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' /etc/cron.allow\n</code></pre> Verify the returned value is: <pre><code>Access: (640/-rw-r-----) Owner: (root) Group: (root)\n- OR -\nAccess: (640/-rw-r-----) Owner: (root) Group: (crontab)\n</code></pre></p> <p>Run the following command to verify either cron.deny doesn't exist or is: - Mode 0640 or more restrictive - Owned by the user root - Is group owned by the group root - OR - the group crontab <pre><code># [ -e \"/etc/cron.deny\" ] &amp;&amp; stat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' /etc/cron.deny\n</code></pre></p> <p>Verify either nothing is returned - OR - returned value is one of the following: <pre><code>Access: (640/-rw-r-----) Owner: (root) Group: (root)\n- OR -\nAccess: (640/-rw-r-----) Owner: (root) Group: (crontab)\n</code></pre></p> <p>Note: On systems where cron is configured to use the group crontab, if the group crontab is not set as the owner of cron.allow, then cron will deny access to all users and you will see an error similar to: <pre><code>You (&lt;USERNAME&gt;) are not allowed to use this program (crontab)\nSee crontab(1) for more information\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.1-Configure-cron/2.4.1.8-Ensure-cron-is-restricted-to-authorized-users/#remediation","title":"Remediation","text":"<p>- IF - cron is installed on the system: - Run the following script to: - Create /etc/cron.allow if it doesn't exist - Change owner to user root - Change group owner to group root - OR - group crontab if it exists - Change mode to 640 or more restrictive <pre><code>#!/usr/bin/env bash\n{\n[ ! -e \"/etc/cron.deny\" ] &amp;&amp; touch /etc/cron.allow\nchmod u-x,g-wx,o-rwx /etc/cron.allow\nif grep -Pq -- '^\\h*crontab\\:' /etc/group; then\nchown root:crontab /etc/cron.allow\nelse\nchown root:root /etc/cron.allow\nfi\n}\n</code></pre></p> <p>- IF - /etc/cron.deny exists, run the following script to: - Change owner to user root - Change group owner to group root - OR - group crontab if it exists - Change mode to 640 or more restrictive Run the following command to create /etc/cron.allow <pre><code>#!/usr/bin/env bash\n{\nif [ -e \"/etc/cron.deny\" ]; then\nchmod u-x,g-wx,o-rwx /etc/cron.deny\nif grep -Pq -- '^\\h*crontab\\:' /etc/group; then\nchown root:crontab /etc/cron.deny\nelse\nchown root:root /etc/cron.deny\nfi\nfi\n}\n</code></pre></p> <p>Note: On systems where cron is configured to use the group crontab, if the group crontab is not set as the owner of cron.allow, then cron will deny access to all users and you will see an error similar to: <pre><code>You (&lt;USERNAME&gt;) are not allowed to use this program (crontab)\nSee crontab(1) for more information\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure cron","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.2-Configure-at/2.4.2.1-Ensure-at-is-restricted-to-authorized-users/","title":"2.4.2.1 Ensure at is restricted to authorized users","text":"","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure at","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.2-Configure-at/2.4.2.1-Ensure-at-is-restricted-to-authorized-users/#audit","title":"Audit","text":"<p>- IF - at is installed on the system: Run the following command to verify /etc/at.allow: - Exists - Is mode 0640 or more restrictive - Is owned by the user root - Is group owned by the group daemon or group root <pre><code># stat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' /etc/at.allow\nAccess: (640/-rw-r-----) Owner: (root) Group: (daemon)\n-OR-\nAccess: (640/-rw-r-----) Owner: (root) Group: (root)\n</code></pre></p> <p>Verify mode is 640 or more restrictive, owner is root, and group is daemon or root Run the following command to verify at.deny doesn't exist, -OR- is: - Mode 0640 or more restrictive - Owned by the user root - Group owned by the group daemon or group root <pre><code># [ -e \"/etc/at.deny\" ] &amp;&amp; stat -Lc 'Access: (%a/%A) Owner: (%U) Group: (%G)' /etc/at.deny\nAccess: (640/-rw-r-----) Owner: (root) Group: (daemon)\n-OR-\nAccess: (640/-rw-r-----) Owner: (root) Group: (root)\n-OR-\nNothing is returned\n</code></pre> If a value is returned, verify mode is 640 or more restrictive, owner is root, and group is daemon or root</p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure at","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","M1018"]},{"location":"2-Services/2.4-Job-Schedulers/2.4.2-Configure-at/2.4.2.1-Ensure-at-is-restricted-to-authorized-users/#remediation","title":"Remediation","text":"<p>- IF - at is installed on the system: Run the following script to: - /etc/at.deny  - Create the file if it doesn't exist  - Change owner or user root  - If group daemon exists, change to group daemon, else change group to root  - Change mode to 640 or more restrictive - - IF - /etc/at.deny exists:  - Change owner or user root  - If group daemon exists, change to group daemon, else change group to root  - Change mode to 640 or more restrictive</p> <p>Run the following command to create /etc/at.allow <pre><code>#!/usr/bin/env bash\n{\ngrep -Pq -- '^daemon\\b' /etc/group &amp;&amp; l_group=\"daemon\" || l_group=\"root\"\n[ ! -e \"/etc/at.allow\" ] &amp;&amp; touch /etc/at.allow\nchown root:\"$l_group\" /etc/at.allow\nchmod u-x,g-wx,o-rwx /etc/at.allow\n[ -e \"/etc/at.deny\" ] &amp;&amp; chown root:\"$l_group\" /etc/at.deny\n[ -e \"/etc/at.deny\" ] &amp;&amp; chmod u-x,g-wx,o-rwx /etc/at.deny\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Services","Job Shedulers","Configure at","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1053","T1053.003","TA0002","M1018"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.1-Ensure-ipv6-status-is-identified/","title":"3.1.1 Ensure IPv6 status is identified","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Devices","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1557","T1595","T1595.001","T1595.002","TA0008","M1042"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.1-Ensure-ipv6-status-is-identified/#audit","title":"Audit","text":"<p>Run the following script to identify if IPv6 is enabled on the system: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_output=\"- IPv6 is not enabled\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_output=\"- IPv6 is not enabled\"\nfi\n[ -z \"$l_output\" ] &amp;&amp; l_output=\"- IPv6 is enabled\"\necho -e \"\\n$l_output\\n\"\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Network","Configure Network Devices","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1557","T1595","T1595.001","T1595.002","TA0008","M1042"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.1-Ensure-ipv6-status-is-identified/#remediation","title":"Remediation","text":"<p>Enable or disable IPv6 in accordance with system requirements and local site policy</p> <p>Default Value: IPv6 is enabled</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Devices","Manual","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1557","T1595","T1595.001","T1595.002","TA0008","M1042"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.2-Ensure-wireless-interfaces-are-disabled/","title":"3.1.2 Ensure wireless interfaces are disabled","text":"","tags":["Level 1","Server","Network","Configure Network Devices","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1011","T1595","T1595.001","T1595.002","TA0010","M1028"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.2-Ensure-wireless-interfaces-are-disabled/#audit","title":"Audit","text":"<p>Run the following script to verify no wireless interfaces are active on the system: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\"\nmodule_chk()\n{\n# Check how module will be loaded\nl_loadable=\"$(modprobe -n -v \"$l_mname\")\"\nif grep -Pq -- '^\\h*install \\/bin\\/(true|false)' &lt;&lt;&lt; \"$l_loadable\";\nthen\nl_output=\"$l_output\\n - module: \\\"$l_mname\\\" is not loadable: \\\"$l_loadable\\\"\"\nelse\nl_output2=\"$l_output2\\n - module: \\\"$l_mname\\\" is loadable: \\\"$l_loadable\\\"\"\nfi\n# Check is the module currently loaded\nif ! lsmod | grep \"$l_mname\" &gt; /dev/null 2&gt;&amp;1; then\nl_output=\"$l_output\\n - module: \\\"$l_mname\\\" is not loaded\"\nelse\nl_output2=\"$l_output2\\n - module: \\\"$l_mname\\\" is loaded\"\nfi\n# Check if the module is deny listed\nif modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mname\\b\";\nthen\nl_output=\"$l_output\\n - module: \\\"$l_mname\\\" is deny listed in: \\\"$(grep -Pl -- \"^\\h*blacklist\\h+$l_mname\\b\" /etc/modprobe.d/*)\\\"\"\nelse\nl_output2=\"$l_output2\\n - module: \\\"$l_mname\\\" is not deny listed\"\nfi\n}\nif [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then\nl_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)\nfor l_mname in $l_dname; do\nmodule_chk\ndone\nfi\n# Report results. If no failures output in l_output2, we pass\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n ** PASS **\"\nif [ -z \"$l_output\" ]; then\necho -e \"\\n - System has no wireless NICs installed\"\nelse\necho -e \"\\n$l_output\\n\"\nfi\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - Reason(s) for audit failure:\\n$l_output2\\n\"\n[ -n \"$l_output\" ] &amp;&amp; echo -e \"\\n- Correctly set:\\n$l_output\\n\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Server","Network","Configure Network Devices","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1011","T1595","T1595.001","T1595.002","TA0010","M1028"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.2-Ensure-wireless-interfaces-are-disabled/#remediation","title":"Remediation","text":"<p>Run the following script to disable any wireless interfaces: <pre><code>#!/usr/bin/env bash\n{\nmodule_fix()\n{\nif ! modprobe -n -v \"$l_mname\" | grep -P -- '^\\h*install \\/bin\\/(true|false)'; then\necho -e \" - setting module: \\\"$l_mname\\\" to be un-loadable\"\necho -e \"install $l_mname /bin/false\" &gt;&gt; /etc/modprobe.d/\"$l_mname\".conf\nfi\nif lsmod | grep \"$l_mname\" &gt; /dev/null 2&gt;&amp;1; then\necho -e \" - unloading module \\\"$l_mname\\\"\"\nmodprobe -r \"$l_mname\"\nfi\nif ! grep -Pq -- \"^\\h*blacklist\\h+$l_mname\\b\" /etc/modprobe.d/*; then\necho -e \" - deny listing \\\"$l_mname\\\"\"\necho -e \"blacklist $l_mname\" &gt;&gt; /etc/modprobe.d/\"$l_mname\".conf\nfi\n}\nif [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then\nl_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)\nfor l_mname in $l_dname; do\nmodule_fix\ndone\nfi\n}\n</code></pre></p>","tags":["Level 1","Server","Network","Configure Network Devices","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1011","T1595","T1595.001","T1595.002","TA0010","M1028"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.3-Ensure-bluetooth-services-are-not-in-use/","title":"3.1.3 Ensure bluetooth services are not in use","text":"","tags":["Level 1","Level 2","Workstation","Server","Network","Configure Network Devices","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1011","TA0010","M1042"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.3-Ensure-bluetooth-services-are-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify the bluez package is not installed: <pre><code># dpkg-query -s bluez &amp;&gt;/dev/null &amp;&amp; echo \"bluez is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - - IF - the bluez package is required as a dependency: Run the following command to verify bluetooth.service is not enabled: <pre><code># systemctl is-enabled bluetooth.service 2&gt;/dev/null | grep 'enabled'\n</code></pre> Nothing should be returned.</p> <p>Run the following command to verify bluetooth.service is not active: <pre><code># systemctl is-active bluetooth.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned.</p> <p>Note: If the package is required for a dependency - Ensure the dependent package is approved by local site policy - Ensure stopping and masking the service and/or socket meets local site policy</p>","tags":["Level 1","Level 2","Workstation","Server","Network","Configure Network Devices","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1011","TA0010","M1042"]},{"location":"3-Network/3.1-Configure-Network-Devices/3.1.3-Ensure-bluetooth-services-are-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop bluetooth.service, and remove the bluez package: <pre><code># systemctl stop bluetooth.service\n# apt purge bluez\n</code></pre></p> <p>- OR - - IF - the bluez package is required as a dependency: Run the following commands to stop and mask bluetooth.service: <pre><code># systemctl stop bluetooth.service\n# systemctl mask bluetooth.service\n</code></pre></p> <p>Note: A reboot may be required</p>","tags":["Level 1","Level 2","Workstation","Server","Network","Configure Network Devices","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1011","TA0010","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.1-Ensure-dccp-kernel-module-is-not-available/","title":"3.2.1 Ensure dccp kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.1-Ensure-dccp-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the dccp kernel module is available in ANY installed kernel, verify: - An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory - The module is deny listed in a file within the /etc/modprobe.d/ directory - The module is not loaded in the running kernel - IF - the dccp kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"dccp\"\nl_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.1-Ensure-dccp-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the dccp module: - IF - the dccp kernel module is available in ANY installed kernel: - Create a file ending in .conf with install dccp /bin/false in the /etc/modprobe.d/ directory - Create a file ending in .conf with blacklist dccp in the /etc/modprobe.d/ directory - Run modprobe -r dccp 2&gt;/dev/null; rmmod dccp 2&gt;/dev/null to remove dccp from the kernel - IF - the dccp kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"dccp\" l_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.2-Ensure-tipc-kernel-module-is-not-available/","title":"3.2.2 Ensure tipc kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.2-Ensure-tipc-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the tipc kernel module is available in ANY installed kernel, verify: - An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory - The module is deny listed in a file within the /etc/modprobe.d/ directory - The module is not loaded in the running kernel - IF - the tipc kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"tipc\"\nl_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-\n/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.2-Ensure-tipc-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the tipc module: - IF - the tipc kernel module is available in ANY installed kernel: - Create a file ending in .conf with install tipc /bin/false in the /etc/modprobe.d/ directory - Create a file ending in .conf with blacklist tipc in the /etc/modprobe.d/ directory - Run modprobe -r tipc 2&gt;/dev/null; rmmod tipc 2&gt;/dev/null to remove tipc from the kernel - IF - the tipc kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"tipc\" l_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.3-Ensure-rds-kernel-module-is-not-available/","title":"3.2.3 Ensure rds kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.3-Ensure-rds-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the rds kernel module is available in ANY installed kernel, verify: - An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory - The module is deny listed in a file within the /etc/modprobe.d/ directory - The module is not loaded in the running kernel - IF - the rds kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"rds\"\nl_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.3-Ensure-rds-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the rds module: - IF - the rds kernel module is available in ANY installed kernel: - Create a file ending in .conf with install tipc /bin/false in the /etc/modprobe.d/ directory - Create a file ending in .conf with blacklist rds in the /etc/modprobe.d/ directory - Run modprobe -r rds 2&gt;/dev/null; rmmod rds 2&gt;/dev/null to remove rds from the kernel - IF - the rds kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"rds\" l_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to \\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.4-Ensure-sctp-kernel-module-is-not-available/","title":"3.2.4 Ensure sctp kernel module is not available","text":"","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.4-Ensure-sctp-kernel-module-is-not-available/#audit","title":"Audit","text":"<p>Run the following script to verify: - IF - the sctp kernel module is available in ANY installed kernel, verify: - An entry including /bin/true or /bin/false exists in a file within the /etc/modprobe.d/ directory - The module is deny listed in a file within the /etc/modprobe.d/ directory - The module is not loaded in the running kernel - IF - the sctp kernel module is not available on the system, or pre-compiled into the kernel, no additional configuration is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() a_output3=() l_dl=\"\" l_mod_name=\"sctp\"\nl_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_chk()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif ! lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loaded\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loaded\")\nfi\nif grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is not loadable\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is loadable\")\nfi\nif grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" is deny listed\")\nelse\na_output2+=(\" - kernel module: \\\"$l_mod_name\\\" is not deny listed\")\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_chk\nelse\na_output+=(\" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\")\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"- Correctly set:\" \"${a_output[@]}\"\nfi\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.2-Configure-Network-Kernel-Modules/3.2.4-Ensure-sctp-kernel-module-is-not-available/#remediation","title":"Remediation","text":"<p>Run the following script to unload and disable the sctp module: - IF - the sctp kernel module is available in ANY installed kernel: - Create a file ending in .conf with install sctp /bin/false in the /etc/modprobe.d/ directory - Create a file ending in .conf with blacklist sctp in the /etc/modprobe.d/ directory - Run modprobe -r sctp 2&gt;/dev/null; rmmod sctp 2&gt;/dev/null to remove sctp from the kernel - IF - the sctp kernel module is not available on the system, or pre-compiled into the kernel, no remediation is necessary</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=() a_output3=() l_dl=\"\" l_mod_name=\"sctp\" l_mod_type=\"net\"\nl_mod_path=\"$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)\"\nf_module_fix()\n{\nl_dl=\"y\" a_showconfig=()\nwhile IFS= read -r l_showconfig; do\na_showconfig+=(\"$l_showconfig\")\ndone &lt; &lt;(modprobe --showconfig | grep -P -- '\\b(install|blacklist)\\h+'\"${l_mod_chk_name//-/_}\"'\\b')\nif lsmod | grep \"$l_mod_chk_name\" &amp;&gt; /dev/null; then\na_output2+=(\" - unloading kernel module: \\\"$l_mod_name\\\"\")\nmodprobe -r \"$l_mod_chk_name\" 2&gt;/dev/null; rmmod \"$l_mod_name\" 2&gt;/dev/null\nfi\nif ! grep -Pq -- '\\binstall\\h+'\"${l_mod_chk_name//-/_}\"'\\h+(\\/usr)?\\/bin\\/(true|false)\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - setting kernel module: \\\"$l_mod_name\\\" to\n\\\"$(readlink -f /bin/false)\\\"\")\nprintf '%s\\n' \"install $l_mod_chk_name $(readlink -f /bin/false)\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\nif ! grep -Pq -- '\\bblacklist\\h+'\"${l_mod_chk_name//-/_}\"'\\b' &lt;&lt;&lt; \"${a_showconfig[*]}\"; then\na_output2+=(\" - denylisting kernel module: \\\"$l_mod_name\\\"\")\nprintf '%s\\n' \"blacklist $l_mod_chk_name\" &gt;&gt; /etc/modprobe.d/\"$l_mod_name\".conf\nfi\n}\nfor l_mod_base_directory in $l_mod_path; do # Check if the module exists on the system\nif [ -d \"$l_mod_base_directory/${l_mod_name/-/\\/}\" ] &amp;&amp; [ -n \"$(ls -A \"$l_mod_base_directory/${l_mod_name/-/\\/}\")\" ]; then\na_output3+=(\" - \\\"$l_mod_base_directory\\\"\")\nl_mod_chk_name=\"$l_mod_name\"\n[[ \"$l_mod_name\" =~ overlay ]] &amp;&amp; l_mod_chk_name=\"${l_mod_name::-2}\"\n[ \"$l_dl\" != \"y\" ] &amp;&amp; f_module_fix\nelse\nprintf '%s\\n' \" - kernel module: \\\"$l_mod_name\\\" doesn't exist in \\\"$l_mod_base_directory\\\"\"\nfi\ndone\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" -- INFO --\" \" - module: \\\"$l_mod_name\\\" exists in:\" \"${a_output3[@]}\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\" || printf '%s\\n' \"\" \" - No changes needed\"\nprintf '%s\\n' \"\" \" - remediation of kernel module: \\\"$l_mod_name\\\" complete\" \"\"\n}\n</code></pre>","tags":["Level 2","Workstation","Server","Network","Configure Network Kernel Modules","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1068","T1210","TA0008","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.1-Ensure-ip-forwarding-is-disabled/","title":"3.3.1 Ensure IP forwarding is disabled","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.1-Ensure-ip-forwarding-is-disabled/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.ip_forward is set to 0 - net.ipv6.conf.all.forwarding is set to 0</p> <p>Note: - kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence. - IPv6 kernel parameters only apply to systems where IPv6 is enabled</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.ip_forward=0\" \"net.ipv6.conf.all.forwarding=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\ sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp;\nA_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\"\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.1-Ensure-ip-forwarding-is-disabled/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.ip_forward = 0</p> <p>Example: <pre><code># printf '%s\\n' \"net.ipv4.ip_forward = 0\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.ip_forward=0\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre></p> <p>- IF - IPv6 is enabled on the system: Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv6.conf.all.forwarding = 0 Example: <pre><code># printf '%s\\n' \"net.ipv6.conf.all.forwarding = 0\" &gt;&gt; /etc/sysctl.d/60-netipv6_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv6.conf.all.forwarding=0\nsysctl -w net.ipv6.route.flush=1\n}\n</code></pre></p> <p>Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.ip_forward = 0 net.ipv6.conf.all.forwarding = 0</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.10-Ensure-tcp-syn-cookies-is-enabled/","title":"3.3.10 Ensure TCP SYN Cookies is enabled","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1499","T1499.001","TA0040","M1037"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.10-Ensure-tcp-syn-cookies-is-enabled/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameter is set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.tcp_syncookies is set to 1</p> <p>Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.tcp_syncookies=1\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1499","T1499.001","TA0040","M1037"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.10-Ensure-tcp-syn-cookies-is-enabled/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.tcp_syncookies = 1</p> <p>Example: <pre><code># printf '%s\\n' \"net.ipv4.tcp_syncookies = 1\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.tcp_syncookies=1\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre></p> <p>Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.tcp_syncookies = 1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1499","T1499.001","TA0040","M1037"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.11-Ensure-ipv6-router-advertisements-are-not-accepted/","title":"3.3.11 Ensure IPv6 router advertisements are not accepted","text":"","tags":["Level 1","Workstation","Server","Network Configuration","Network Parameters (Host and Router)","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0040","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.11-Ensure-ipv6-router-advertisements-are-not-accepted/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv6.conf.all.accept_ra is set to 0 - net.ipv6.conf.default.accept_ra is set to 0</p> <p>Note:  - kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence. - IPv6 kernel parameters only apply to systems where IPv6 is enabled</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv6.conf.all.accept_ra=0\"\n\"net.ipv6.conf.default.accept_ra=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network Configuration","Network Parameters (Host and Router)","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0040","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.11-Ensure-ipv6-router-advertisements-are-not-accepted/#remediation","title":"Remediation","text":"<p>- IF - IPv6 is enabled on the system: Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv6.conf.all.accept_ra = 0 - net.ipv6.conf.default.accept_ra = 0</p> <p>Example: <pre><code># printf '%s\\n' \"net.ipv6.conf.all.accept_ra = 0\" \"net.ipv6.conf.default.accept_ra = 0\" &gt;&gt; /etc/sysctl.d/60-netipv6_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv6.conf.all.accept_ra=0\nsysctl -w net.ipv6.conf.default.accept_ra=0\nsysctl -w net.ipv6.route.flush=1\n}\n</code></pre></p> <p>Default Value: net.ipv6.conf.all.accept_ra = 1 net.ipv6.conf.default.accept_ra = 1</p>","tags":["Level 1","Workstation","Server","Network Configuration","Network Parameters (Host and Router)","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0040","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.2-Ensure-packet-redirect-sending-is-disabled/","title":"3.3.2 Ensure packet redirect sending is disabled","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.2-Ensure-packet-redirect-sending-is-disabled/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file:</p> <ul> <li>net.ipv4.conf.all.send_redirects is set to 0</li> <li>net.ipv4.conf.default.send_redirects is set to 0</li> </ul> <p>Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.conf.all.send_redirects=0\"\n\"net.ipv4.conf.default.send_redirects=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\"\"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.2-Ensure-packet-redirect-sending-is-disabled/#remediation","title":"Remediation","text":"<p>Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf:</p> <ul> <li>net.ipv4.conf.all.send_redirects = 0</li> <li>net.ipv4.conf.default.send_redirects = 0</li> </ul> <p>Example: <pre><code># printf '%s\\n' \"net.ipv4.conf.all.send_redirects = 0\" \"net.ipv4.conf.default.send_redirects = 0\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: Example: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.conf.all.send_redirects=0\nsysctl -w net.ipv4.conf.default.send_redirects=0\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre> Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.all.send_redirects = 1 net.ipv4.conf.default.send_redirects = 1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.3-Ensure-bogus-icmp-responses-are-ignored/","title":"3.3.3 Ensure bogus ICMP responses are ignored","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1562","T1562.006","TA0040","M1053"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.3-Ensure-bogus-icmp-responses-are-ignored/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameter is set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.icmp_ignore_bogus_error_responses is set to 1</p> <p>Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.icmp_ignore_bogus_error_responses=1\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1562","T1562.006","TA0040","M1053"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.3-Ensure-bogus-icmp-responses-are-ignored/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.icmp_ignore_bogus_error_responses = 1 Example:</p> <pre><code># printf '%s\\n' \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre> <p>Run the following script to set the active kernel parameters: ```bash lienums=1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1562","T1562.006","TA0040","M1053"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.3-Ensure-bogus-icmp-responses-are-ignored/#usrbinenv-bash","title":"!/usr/bin/env bash","text":"<p>{ sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1 sysctl -w net.ipv4.route.flush=1 } ```</p> <p>Default Value: net.ipv4.icmp_ignore_bogus_error_responses = 1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1562","T1562.006","TA0040","M1053"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.4-Ensure-broadcast-icmp-requests-are-ignored/","title":"3.3.4 Ensure broadcast ICMP requests are ignored","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1498","T1498.001","TA0040","M1037"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.4-Ensure-broadcast-icmp-requests-are-ignored/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameter is set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.icmp_echo_ignore_broadcasts is set to 1 Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.icmp_echo_ignore_broadcasts=1\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp;\nA_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1498","T1498.001","TA0040","M1037"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.4-Ensure-broadcast-icmp-requests-are-ignored/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.icmp_echo_ignore_broadcasts = 1 Example:</p> <pre><code># printf '%s\\n' \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre></p> <p>Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.default.log_martians = 0</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1498","T1498.001","TA0040","M1037"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.5-Ensure-icmp-redirects-are-not-accepted/","title":"3.3.5 Ensure ICMP redirects are not accepted","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0007","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.5-Ensure-icmp-redirects-are-not-accepted/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file:</p> <ul> <li>net.ipv4.conf.all.accept_redirects is set to 0</li> <li>net.ipv4.conf.default.accept_redirects is set to 0</li> <li>net.ipv6.conf.all.accept_redirects is set to 0</li> <li>net.ipv6.conf.default.accept_redirects is set to 0</li> </ul> <p>Note: </p> <ul> <li>kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</li> <li>IPv6 kernel parameters only apply to systems where IPv6 is enabled</li> </ul> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.conf.all.accept_redirects=0\"\n\"net.ipv4.conf.default.accept_redirects=0\"\n\"net.ipv6.conf.all.accept_redirects=0\"\n\"net.ipv6.conf.default.accept_redirects=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\" in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp;\nA_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0007","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.5-Ensure-icmp-redirects-are-not-accepted/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf:</p> <ul> <li>net.ipv4.conf.all.accept_redirects = 0</li> <li>net.ipv4.conf.default.accept_redirects = 0</li> </ul> <p>Example: <pre><code># printf '%s\\n' \"net.ipv4.conf.all.accept_redirects = 0\" \"net.ipv4.conf.default.accept_redirects = 0\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.conf.all.accept_redirects=0\nsysctl -w net.ipv4.conf.default.accept_redirects=0\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre></p> <p>- IF - IPv6 is enabled on the system: Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf:</p> <ul> <li>net.ipv6.conf.all.accept_redirects = 0</li> <li>net.ipv6.conf.default.accept_redirects = 0</li> </ul> <p>Example: <pre><code># printf '%s\\n' \"net.ipv6.conf.all.accept_redirects = 0\" \"net.ipv6.conf.default.accept_redirects = 0\" &gt;&gt; /etc/sysctl.d/60-netipv6_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv6.conf.all.accept_redirects=0\nsysctl -w net.ipv6.conf.default.accept_redirects=0\nsysctl -w net.ipv6.route.flush=1\n}\n</code></pre> Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.all.accept_redirects = 1 net.ipv4.conf.default.accept_redirects = 1 net.ipv6.conf.all.accept_redirects = 1 net.ipv6.conf.default.accept_redirects = 1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0007","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.6-Ensure-secure-icmp-redirects-are-not-accepted/","title":"3.3.6 Ensure secure ICMP redirects are not accepted","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.6-Ensure-secure-icmp-redirects-are-not-accepted/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.conf.all.secure_redirects is set to 0 - net.ipv4.conf.default.secure_redirects is set to 0</p> <p>Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.conf.all.secure_redirects=0\"\n\"net.ipv4.conf.default.secure_redirects=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\"\n\"\nin \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.6-Ensure-secure-icmp-redirects-are-not-accepted/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.conf.all.secure_redirects = 0 - net.ipv4.conf.default.secure_redirects = 0</p> <p>Example:</p> <pre><code># printf '%s\\n' \"net.ipv4.conf.all.secure_redirects = 0\" \"net.ipv4.conf.default.secure_redirects = 0\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.conf.all.secure_redirects=0\nsysctl -w net.ipv4.conf.default.secure_redirects=0\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre> Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.all.secure_redirects = 1 net.ipv4.conf.default.secure_redirects = 1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1557","TA0006","TA0009","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.7-Ensure-reverse-path-filtering-is-enabled/","title":"3.3.7 Ensure Reverse Path Filtering is enabled","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1498","T1498.001","TA0006","TA0040","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.7-Ensure-reverse-path-filtering-is-enabled/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.conf.all.rp_filter is set to 1 - net.ipv4.conf.default.rp_filter is set to 1 Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.conf.all.rp_filter=1\"\n\"net.ipv4.conf.default.rp_filter=1\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\"\n\"\nin \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\"\n\"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1498","T1498.001","TA0006","TA0040","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.7-Ensure-reverse-path-filtering-is-enabled/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.conf.all.rp_filter = 1 - net.ipv4.conf.default.rp_filter = 1</p> <p>Example: <pre><code># printf '%s\\n' \"net.ipv4.conf.all.rp_filter = 1\" \"net.ipv4.conf.default.rp_filter = 1\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.conf.all.rp_filter=1\nsysctl -w net.ipv4.conf.default.rp_filter=1\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre> Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.all.rp_filter = 2 net.ipv4.conf.default.rp_filter = 1</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1498","T1498.001","TA0006","TA0040","M1030","M1042"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.8-Ensure-source-routed-packets-are-not-accepted/","title":"3.3.8 Ensure source routed packets are not accepted","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1590","T1590.005","TA0007"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.8-Ensure-source-routed-packets-are-not-accepted/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.conf.all.accept_source_route is set to 0 - net.ipv4.conf.default.accept_source_route is set to 0 - net.ipv6.conf.all.accept_source_route is set to 0 - net.ipv6.conf.default.accept_source_route is set to 0</p> <p>Note:  - kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence. - IPv6 kernel parameters only apply to systems where IPv6 is enabled</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.conf.all.accept_source_route=0\"\n\"net.ipv4.conf.default.accept_source_route=0\"\n\"net.ipv6.conf.all.accept_source_route=0\"\n\"net.ipv6.conf.default.accept_source_route=0\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1590","T1590.005","TA0007"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.8-Ensure-source-routed-packets-are-not-accepted/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.conf.all.accept_source_route = 0 - net.ipv4.conf.default.accept_source_route = 0</p> <p>Example:</p> <pre><code># printf '%s\\n' \"net.ipv4.conf.all.accept_source_route = 0\" \"net.ipv4.conf.default.accept_source_route = 0\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.conf.all.accept_source_route=0\nsysctl -w net.ipv4.conf.default.accept_source_route=0\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre></p> <p>- IF - IPv6 is enabled on the system: Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv6.conf.all.accept_source_route = 0 - net.ipv6.conf.default.accept_source_route = 0</p> <p>Example:</p> <pre><code># printf '%s\\n' \"net.ipv6.conf.all.accept_source_route = 0\" \"net.ipv6.conf.default.accept_source_route = 0\" &gt;&gt; /etc/sysctl.d/60-netipv6_sysctl.conf\n</code></pre> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv6.conf.all.accept_source_route=0\nsysctl -w net.ipv6.conf.default.accept_source_route=0\nsysctl -w net.ipv6.route.flush=1\n}\n</code></pre> Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.all.accept_source_route = 0 net.ipv4.conf.default.accept_source_route = 0 net.ipv6.conf.all.accept_source_route = 0 net.ipv6.conf.default.accept_source_route = 0</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","IG2","IG3","T1590","T1590.005","TA0007"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.9-Ensure-suspicious-packets-are-logged/","title":"3.3.9 Ensure suspicious packets are logged","text":"","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","8.5 Collect Detailed Audit Logs","IG2","IG3","T1562","T1562.006","TA0005"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.9-Ensure-suspicious-packets-are-logged/#audit","title":"Audit","text":"<p>Run the following script to verify the following kernel parameters are set in the running configuration and correctly loaded from a kernel parameter configuration file: - net.ipv4.conf.all.log_martians is set to 1 - net.ipv4.conf.default.log_martians is set to 1</p> <p>Note: kernel parameters are loaded by file and parameter order precedence. The following script observes this precedence as part of the auditing procedure. The parameters being checked may be set correctly in a file. If that file is superseded, the parameter is overridden by an incorrect setting later in that file, or in a canonically later file, that \"correct\" setting will be ignored both by the script and by the system during a normal kernel parameter load sequence.</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ipv6_disabled=\"\"\na_parlist=(\"net.ipv4.conf.all.log_martians=1\"\n\"net.ipv4.conf.default.log_martians=1\")\nl_ufwscf=\"$([ -f /etc/default/ufw ] &amp;&amp; awk -F= '/^\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\nf_ipv6_chk()\n{\nl_ipv6_disabled=\"no\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_disabled=\"yes\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_disabled=\"yes\"\nfi\n}\nf_kernel_parameter_chk()\n{\nl_running_parameter_value=\"$(sysctl \"$l_parameter_name\" | awk -F='{print $2}' | xargs)\" # Check running configuration\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_running_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_running_parameter_value\\\"\" \"in the running configuration\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_running_parameter_value\\\"\" \\\"in the running configuration\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\nunset A_out; declare -A A_out # Check durable setting (files)\nwhile read -r l_out; do\nif [ -n \"$l_out\" ]; then\nif [[ $l_out =~ ^\\s*# ]]; then\nl_file=\"${l_out//# /}\"\nelse\nl_kpar=\"$(awk -F= '{print $1}' &lt;&lt;&lt; \"$l_out\" | xargs)\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_file\")\nfi\nfi\ndone &lt; &lt;(\"$l_systemdsysctl\" --cat-config | grep -Po '^\\h*([^#\\n\\r]+|#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b)')\nif [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\nl_kpar=\"$(grep -Po \"^\\h*$l_parameter_name\\b\" \"$l_ufwscf\" | xargs)\"\nl_kpar=\"${l_kpar//\\//.}\"\n[ \"$l_kpar\" = \"$l_parameter_name\" ] &amp;&amp; A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\nfi\nif (( ${#A_out[@]} &gt; 0 )); then # Assess output from files and generate output\nwhile IFS=\"=\" read -r l_fkpname l_file_parameter_value; do\nl_fkpname=\"${l_fkpname// /}\";\nl_file_parameter_value=\"${l_file_parameter_value// /}\"\nif grep -Pq -- '\\b'\"$l_parameter_value\"'\\b' &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - \\\"$l_parameter_name\\\" is correctly set to \\\"$l_file_parameter_value\\\"\" \\\"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is incorrectly set to \\\"$l_file_parameter_value\\\"\" \"in \\\"$(printf '%s' \"${A_out[@]}\")\\\"\" \\\"and should have a value of: \\\"$l_value_out\\\"\")\nfi\ndone &lt; &lt;(grep -Po -- \"^\\h*$l_parameter_name\\h*=\\h*\\H+\" \"${A_out[@]}\")\nelse\na_output2+=(\" - \\\"$l_parameter_name\\\" is not set in an included file\" \\\"** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure **\")\nfi\n}\nl_systemdsysctl=\"$(readlink -f /lib/systemd/systemd-sysctl)\"\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nif grep -q '^net.ipv6.' &lt;&lt;&lt; \"$l_parameter_name\"; then\n[ -z \"$l_ipv6_disabled\" ] &amp;&amp; f_ipv6_chk\nif [ \"$l_ipv6_disabled\" = \"yes\" ]; then\na_output+=(\" - IPv6 is disabled on the system, \\\"$l_parameter_name\\\" is not applicable\")\nelse\nf_kernel_parameter_chk\nfi\nelse\nf_kernel_parameter_chk\nfi\ndone &lt; &lt;(printf '%s\\n' \"${a_parlist[@]}\")\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","8.5 Collect Detailed Audit Logs","IG2","IG3","T1562","T1562.006","TA0005"]},{"location":"3-Network/3.3-Configure-Network-Kernel-Parameters/3.3.9-Ensure-suspicious-packets-are-logged/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending in .conf: - net.ipv4.conf.all.log_martians = 1 - net.ipv4.conf.default.log_martians = 1</p> <p>Example: <pre><code># printf '%s\\n' \"net.ipv4.conf.all.log_martians = 1\" \"net.ipv4.conf.default.log_martians = 1\" &gt;&gt; /etc/sysctl.d/60-netipv4_sysctl.conf\n</code></pre></p> <p>Run the following script to set the active kernel parameters: <pre><code>#!/usr/bin/env bash\n{\nsysctl -w net.ipv4.conf.all.log_martians=1\nsysctl -w net.ipv4.conf.default.log_martians=1\nsysctl -w net.ipv4.route.flush=1\n}\n</code></pre> Note: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten</p> <p>Default Value: net.ipv4.conf.all.log_martians = 0 net.ipv4.conf.default.log_martians = 0</p>","tags":["Level 1","Workstation","Server","Network","Configure Network Kernel Parameters","Automated","8.5 Collect Detailed Audit Logs","IG2","IG3","T1562","T1562.006","TA0005"]},{"location":"4-Host-Based-Firewall/4.1-Configure-a-single-firewall-utility/4.1.1-Ensure-a-single-firewall-configuration-utility-is-in-use/","title":"4.1.1 Ensure a single firewall configuration utility is in use","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure a single firewall utility","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.1-Configure-a-single-firewall-utility/4.1.1-Ensure-a-single-firewall-configuration-utility-is-in-use/#audit","title":"Audit","text":"<p>Run the following script to verify that a single firewall utility is in use on the system: <pre><code>#!/usr/bin/env bash\n{\nactive_firewall=() firewalls=(\"ufw\" \"nftables\" \"iptables\")\n# Determine which firewall is in use\nfor firewall in \"${firewalls[@]}\"; do\ncase $firewall in\nnftables)\ncmd=\"nft\" ;;\n*)\ncmd=$firewall ;;\nesac\nif command -v $cmd &amp;&gt; /dev/null &amp;&amp; systemctl is-enabled --quiet\n$firewall &amp;&amp; systemctl is-active --quiet $firewall; then\nactive_firewall+=(\"$firewall\")\nfi\ndone\n# Display audit results\nif [ ${#active_firewall[@]} -eq 1 ]; then\nprintf '%s\\n' \"\" \"Audit Results:\" \" ** PASS **\" \" - A single firewall is in use follow the recommendation in ${active_firewall[0]} subsection ONLY\"\nelif [ ${#active_firewall[@]} -eq 0 ]; then\nprintf '%s\\n' \"\" \" Audit Results:\" \" ** FAIL **\" \"- No firewall in use or unable to determine firewall status\"\nelse\nprintf '%s\\n' \"\" \" Audit Results:\" \" ** FAIL **\" \" - Multiple firewalls are in use: ${active_firewall[*]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure a single firewall utility","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.1-Configure-a-single-firewall-utility/4.1.1-Ensure-a-single-firewall-configuration-utility-is-in-use/#remediation","title":"Remediation","text":"<p>Remediating to a single firewall configuration is a complex process and involves several steps. The following provides the basic steps to follow for a single firewall configuration: 1. Determine which firewall utility best fits organizational needs 2. Follow the recommendations in the subsequent subsection for the single firewall to be used Note: Review the firewall subsection overview for the selected firewall to be used, it contains a script to simplify this process. 3. Return to this recommendation to ensure a single firewall configuration utility is in use <pre><code>apt install ufw\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure a single firewall utility","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.1-Ensure-ufw-is-installed/","title":"4.2.1 Ensure ufw is installed","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.1-Ensure-ufw-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify that Uncomplicated Firewall (UFW) is installed: <pre><code># dpkg-query -s ufw &amp;&gt;/dev/null &amp;&amp; echo \"ufw is installed\"\nufw is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.1-Ensure-ufw-is-installed/#remediation","title":"Remediation","text":"<p>Run the following command to install Uncomplicated Firewall (UFW): <pre><code># apt install ufw\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.2-Ensure-iptables-persistent-is-not-installed-with-ufw/","title":"4.2.2 Ensure iptables-persistent is not installed with ufw","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1033"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.2-Ensure-iptables-persistent-is-not-installed-with-ufw/#audit","title":"Audit","text":"<p>Run the following command to verify that the iptables-persistent package is not installed: <pre><code># dpkg-query -s iptables-persistent &amp;&gt;/dev/null &amp;&amp; echo \"iptables-persistent is installed\"\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1033"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.2-Ensure-iptables-persistent-is-not-installed-with-ufw/#remediation","title":"Remediation","text":"<p>Run the following command to remove the iptables-persistent package: <pre><code># apt purge iptables-persistent\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1033"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.3-Ensure-ufw-service-is-enabled/","title":"4.2.3 Ensure ufw service is enabled","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1018"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.3-Ensure-ufw-service-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify that the ufw daemon is enabled: <pre><code># systemctl is-enabled ufw.service\nenabled\n</code></pre></p> <p>Run the following command to verify that the ufw daemon is active: <pre><code># systemctl is-active ufw\nactive\n</code></pre></p> <p>Run the following command to verify ufw is active <pre><code># ufw status\nStatus: active\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1018"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.3-Ensure-ufw-service-is-enabled/#remediation","title":"Remediation","text":"<p>Run the following command to unmask the ufw daemon: <pre><code># systemctl unmask ufw.service\n</code></pre></p> <p>Run the following command to enable and start the ufw daemon: <pre><code># systemctl --now enable ufw.service\nactive\n</code></pre></p> <p>Run the following command to enable ufw: <pre><code># ufw enable\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1018"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.4-Ensure-ufw-loopback-traffic-is-configured/","title":"4.2.4 Ensure ufw loopback traffic is configured","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.4-Ensure-ufw-loopback-traffic-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify loopback interface to accept traffic: <pre><code># grep -P -- 'lo|127.0.0.0' /etc/ufw/before.rules\n</code></pre></p> <p>Output includes: <pre><code># allow all on loopback\n-A ufw-before-input -i lo -j ACCEPT\n-A ufw-before-output -o lo -j ACCEPT\n</code></pre></p> <p>Run the following command and verify all other interfaces deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) <pre><code># ufw status verbose\nTo          Action      From\n--          ------      ----\nAnywhere        DENY IN     127.0.0.0/8\nAnywhere (v6)       DENY IN     ::1\n</code></pre></p> <p>Note: ufw status only shows rules added with ufw and not the rules found in the /etc/ufw rules files where allow all on loopback is configured by default.</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.4-Ensure-ufw-loopback-traffic-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to configure the loopback interface to accept traffic: <pre><code># ufw allow in on lo\n# ufw allow out on lo\n</code></pre></p> <p>Run the following commands to configure all other interfaces to deny traffic to the loopback network: <pre><code># ufw deny in from 127.0.0.0/8\n# ufw deny in from ::1\n</code></pre></p> <p>Default Value: <pre><code># allow all on loopback\n-A ufw-before-input -i lo -j ACCEPT\n-A ufw-before-output -o lo -j ACCEPT\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.5-Ensure-ufw-outbound-connections-are-configured/","title":"4.2.5 Ensure ufw outbound connections are configured","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.5-Ensure-ufw-outbound-connections-are-configured/#audit","title":"Audit","text":"<p>Run the following command and verify all rules for new outbound connections match site policy: <pre><code># ufw status numbered\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.5-Ensure-ufw-outbound-connections-are-configured/#remediation","title":"Remediation","text":"<p>Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces: <pre><code># ufw allow out on all\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.6-Ensure-ufw-firewall-rules-exist-for-all-open-ports/","title":"4.2.6 Ensure ufw firewall rules exist for all open ports","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.6-Ensure-ufw-firewall-rules-exist-for-all-open-ports/#audit","title":"Audit","text":"<p>Run the following script to verify a firewall rule exists for all open ports: <pre><code>#!/usr/bin/env bash\n{\nunset a_ufwout;unset a_openports\nwhile read -r l_ufwport; do\n[ -n \"$l_ufwport\" ] &amp;&amp; a_ufwout+=(\"$l_ufwport\")\ndone &lt; &lt;(ufw status verbose | grep -Po '^\\h*\\d+\\b' | sort -u)\nwhile read -r l_openport; do\n[ -n \"$l_openport\" ] &amp;&amp; a_openports+=(\"$l_openport\")\ndone &lt; &lt;(ss -tuln | awk '($5!~/%lo:/ &amp;&amp; $5!~/127.0.0.1:/ &amp;&amp; $5!~/\\[?::1\\]?:/) {split($5, a, \":\"); print a[2]}' | sort -u)\na_diff=(\"$(printf '%s\\n' \"${a_openports[@]}\" \"${a_ufwout[@]}\"\n\"${a_ufwout[@]}\" | sort | uniq -u)\")\nif [[ -n \"${a_diff[*]}\" ]]; then\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n- The following port(s) don't have a rule in UFW: $(printf '%s\\n' \\\\n\"${a_diff[*]}\")\\n- End List\"\nelse\necho -e \"\\n - Audit Passed -\\n- All open ports have a rule in UFW\\n\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.6-Ensure-ufw-firewall-rules-exist-for-all-open-ports/#remediation","title":"Remediation","text":"<p>For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy: Examples: <pre><code># ufw allow in &lt;port&gt;/&lt;tcp or udp protocol&gt;\n# ufw deny in &lt;port&gt;/&lt;tcp or udp protocol&gt;\n</code></pre></p> <p>Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network. Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network: <pre><code>ufw allow from 192.168.1.0/24 to any proto tcp port 443\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.7-Ensure-ufw-default-deny-firewall-policy/","title":"4.2.7 Ensure ufw default deny firewall policy","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.7-Ensure-ufw-default-deny-firewall-policy/#audit","title":"Audit","text":"<p>Run the following command and verify that the default policy for incoming, outgoing, and routed directions is deny , reject , or disabled: <pre><code># ufw status verbose | grep Default:\n</code></pre></p> <p>Example output: <pre><code>Default: deny (incoming), deny (outgoing), disabled (routed)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.2-Configure-UncomplicatedFirewall/4.2.7-Ensure-ufw-default-deny-firewall-policy/#remediation","title":"Remediation","text":"<p>Run the following commands to implement a default deny policy: <pre><code># ufw default deny incoming\n# ufw default deny outgoing\n# ufw default deny routed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure UncomplicatedFirewall","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.1-Ensure-nftables-is-installed/","title":"4.3.1 Ensure nftables is installed","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.1-Ensure-nftables-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify that nftables is installed: <pre><code># dpkg-query -s nftables &amp;&gt;/dev/null &amp;&amp; echo \"nftables is installed\"\nnftables is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.1-Ensure-nftables-is-installed/#remediation","title":"Remediation","text":"<p>Run the following command to install nftables: <pre><code># apt install nftables\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.10-Ensure-nftables-rules-are-permanent/","title":"4.3.10 Ensure nftables rules are permanent","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.10-Ensure-nftables-rules-are-permanent/#audit","title":"Audit","text":"<p>Run the following commands to verify that input, forward, and output base chains are configured to be applied to a nftables ruleset on boot: Run the following command to verify the input base chain: <pre><code># [ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] &amp;&amp; awk '/hook input/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/nftables.conf)\n</code></pre></p> <p>Output should be similar to: <pre><code>type filter hook input priority 0; policy drop;\n\n# Ensure loopback traffic is configured\niif \"lo\" accept\nip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop\nip6 saddr ::1 counter packets 0 bytes 0 drop\n\n# Ensure established connections are configured\nip protocol tcp ct state established accept\nip protocol udp ct state established accept\n\n# Accept port 22(SSH) traffic from anywhere\ntcp dport ssh accept\n</code></pre></p> <p>Review the input base chain to ensure that it follows local site policy</p> <p>Run the following command to verify the forward base chain: <pre><code># [ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] &amp;&amp; awk '/hook forward/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/nftables.conf)\n</code></pre></p> <p>Output should be similar to: <pre><code> # Base chain for hook forward named forward (Filters forwarded network packets)\n chain forward {\n    type filter hook forward priority 0; policy drop;\n }\n</code></pre></p> <p>Review the forward base chain to ensure that it follows local site policy.</p> <p>Run the following command to verify the forward base chain: <pre><code># [ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] &amp;&amp; awk '/hook output/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/nftables.conf)\n</code></pre></p> <p>Output should be similar to: <pre><code> # Base chain for hook output named output (Filters outbound network packets)\n chain output {\n    type filter hook output priority 0; policy drop;\n\n     # Ensure outbound and established connections are configured\n     ip protocol tcp ct state established,related,new accept\n     ip protocol udp ct state established,related,new accept\n }\n</code></pre></p> <p>Review the output base chain to ensure that it follows local site policy.</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.10-Ensure-nftables-rules-are-permanent/#remediation","title":"Remediation","text":"<p>Edit the /etc/nftables.conf file and un-comment or add a line with <code>include &lt;Absolute path to nftables rules file&gt;</code> for each nftables file you want included in the nftables ruleset on boot</p> <p>Example: <pre><code># vi /etc/nftables.conf\n</code></pre></p> <p>Add the line: <pre><code>include \"/etc/nftables.rules\"\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.2-Ensure-ufw-is-uninstalled-or-disabled-with-nftables/","title":"4.3.2 Ensure ufw is uninstalled or disabled with nftables","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1033"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.2-Ensure-ufw-is-uninstalled-or-disabled-with-nftables/#audit","title":"Audit","text":"<p>Run the following commands to verify that ufw is either not installed or inactive. Only one of the following needs to pass. Run the following command to verify that ufw is not installed: <pre><code># dpkg-query -s ufw &amp;&gt;/dev/null &amp;&amp; echo \"ufw is installed\"\n</code></pre> Nothing should be returned -OR- Run the following commands to verify ufw is disabled and ufw.service is not enabled: <pre><code># ufw status\nStatus: inactive\n# systemctl is-enabled ufw.service\nmasked\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1033"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.2-Ensure-ufw-is-uninstalled-or-disabled-with-nftables/#remediation","title":"Remediation","text":"<p>Run one of the following commands to either remove ufw or disable ufw.service</p> <p>Run the following command to remove ufw: <pre><code># apt purge ufw\n</code></pre> -OR- Run the following commands to disable ufw and mask ufw.service: <pre><code># ufw disable\n# systemctl stop ufw.service\n# systemctl mask ufw.service\n</code></pre></p> <p>Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1033"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.3-Ensure-iptables-are-flushed-with-nftables/","title":"4.3.3 Ensure iptables are flushed with nftables","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.3-Ensure-iptables-are-flushed-with-nftables/#audit","title":"Audit","text":"<p>Run the following commands to ensure no iptables rules exist</p> <p>For iptables: <pre><code># iptables -L\n</code></pre> No rules should be returned</p> <p>For ip6tables: <pre><code># ip6tables -L\n</code></pre> No rules should be returned</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.3-Ensure-iptables-are-flushed-with-nftables/#remediation","title":"Remediation","text":"<p>Run the following commands to flush iptables:</p> <p>For iptables: <pre><code># iptables -F\n</code></pre></p> <p>For ip6tables: <pre><code># ip6tables -F\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.4-Ensure-a-nftables-table-exists/","title":"4.3.4 Ensure a nftables table exists","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1047"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.4-Ensure-a-nftables-table-exists/#audit","title":"Audit","text":"<p>Run the following command to verify that a nftables table exists: <pre><code># nft list tables\n</code></pre> Return should include a list of nftables:</p> <p>Example: <pre><code>table inet filter\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1047"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.4-Ensure-a-nftables-table-exists/#remediation","title":"Remediation","text":"<p>Run the following command to create a table in nftables <pre><code># nft create table inet &lt;table name&gt;\n</code></pre></p> <p>Example: <pre><code># nft create table inet filter\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1047"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.5-Ensure-nftables-base-chains-exist/","title":"4.3.5 Ensure nftables base chains exist","text":"","tags":["Level 1","Workstation","Server","Network Configuration","Firewall Configuration","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1047"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.5-Ensure-nftables-base-chains-exist/#audit","title":"Audit","text":"<p>Run the following commands and verify that base chains exist for INPUT. <pre><code># nft list ruleset | grep 'hook input'\ntype filter hook input priority 0;\n</code></pre></p> <p>Run the following commands and verify that base chains exist for FORWARD. <pre><code># nft list ruleset | grep 'hook forward'\ntype filter hook forward priority 0;\n</code></pre></p> <p>Run the following commands and verify that base chains exist for OUTPUT. <pre><code># nft list ruleset | grep 'hook output'\ntype filter hook output priority 0;\n</code></pre></p>","tags":["Level 1","Workstation","Server","Network Configuration","Firewall Configuration","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1047"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.5-Ensure-nftables-base-chains-exist/#remediation","title":"Remediation","text":"<p>Run the following command to create the base chains: <pre><code># nft create chain inet &lt;table name&gt; &lt;base chain name&gt; { type filter hook &lt;(input|forward|output)&gt; priority 0 \\; }\n</code></pre></p> <p>Example: <pre><code># nft create chain inet filter input { type filter hook input priority 0 \\; }\n# nft create chain inet filter forward { type filter hook forward priority 0 \\; }\n# nft create chain inet filter output { type filter hook output priority 0 \\; }\n</code></pre></p>","tags":["Level 1","Workstation","Server","Network Configuration","Firewall Configuration","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0005","M1047"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.6-Ensure-nftables-loopback-traffic-is-configured/","title":"4.3.6 Ensure nftables loopback traffic is configured","text":"<p>hide:   - toc title: 4.3.6 Ensure nftables loopback traffic is configured description: Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network tags:   - Level 1   - Workstation   - Server   - Host Based Firewall   - Configure nftables   - Automated   - 4.4 Implement and Manage a Firewall on Servers   - 4.5 Implement and Manage a Firewall on End-User Devices   - IG1   - IG2   - IG3   - T1562   - T1562.004   - TA0005</p>"},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.6-Ensure-nftables-loopback-traffic-is-configured/#audit","title":"Audit","text":"<p>Run the following commands to verify that the loopback interface is configured: Run the following command to verify the loopback interface is configured to accept network traffic: <pre><code># nft list ruleset | awk '/hook input/,/}/' | grep 'iif \"lo\" accept'\n</code></pre></p> <p>Example output: <pre><code>iif \"lo\" accept\n</code></pre></p> <p>Run the following command to verify network traffic from an iPv4 loopback interface is configured to drop: <pre><code># nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'\n</code></pre></p> <p>Example output: <pre><code>ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop\n</code></pre></p> <p>- IF - IPv6 is enabled on the system: Run the following command to verify that the IPv6 loopback interface is configured to drop: <pre><code># nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'\n</code></pre></p> <p>Example output: <pre><code>ip6 saddr ::1 counter packets 0 bytes 0 drop\n</code></pre></p>"},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.6-Ensure-nftables-loopback-traffic-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to implement the loopback rules: <pre><code># nft add rule inet filter input iif lo accept\n# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop\n</code></pre></p> <p>- IF - IPv6 is enabled on the system: Run the following command to implement the IPv6 loopback rule: <pre><code># nft add rule inet filter input ip6 saddr ::1 counter drop\n</code></pre></p>"},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.7-Ensure-nftables-outbound-and-established-connections-are-configured/","title":"4.3.7 Ensure nftables outbound and established connections are configured","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.7-Ensure-nftables-outbound-and-established-connections-are-configured/#audit","title":"Audit","text":"<p>Run the following commands and verify all rules for established incoming connections match site policy: site policy: <pre><code># nft list ruleset | awk '/hook input/,/}/' | grep -E 'ip protocol (tcp|udp) ct state'\n</code></pre></p> <p>Output should be similar to: <pre><code>ip protocol tcp ct state established accept\nip protocol udp ct state established accept\n</code></pre></p> <p>Run the folllowing command and verify all rules for new and established outbound connections match site policy <pre><code># nft list ruleset | awk '/hook output/,/}/' | grep -E 'ip protocol (tcp|udp) ct state'\n</code></pre></p> <p>Output should be similar to: <pre><code>ip protocol tcp ct state established,related,new accept\nip protocol udp ct state established,related,new accept\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.7-Ensure-nftables-outbound-and-established-connections-are-configured/#remediation","title":"Remediation","text":"<p>Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: <pre><code># nft add rule inet filter input ip protocol tcp ct state established accept\n# nft add rule inet filter input ip protocol udp ct state established accept\n# nft add rule inet filter output ip protocol tcp ct state new,related,established accept\n# nft add rule inet filter output ip protocol udp ct state new,related,established accept\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.8-Ensure-nftables-default-deny-firewall-policy/","title":"4.3.8 Ensure nftables default deny firewall policy","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.8-Ensure-nftables-default-deny-firewall-policy/#audit","title":"Audit","text":"<p>Run the following commands and verify that base chains contain a policy of DROP. <pre><code># nft list ruleset | grep 'hook input'\ntype filter hook input priority 0; policy drop;\n\n# nft list ruleset | grep 'hook forward'\ntype filter hook forward priority 0; policy drop;\n\n# nft list ruleset | grep 'hook output'\ntype filter hook output priority 0; policy drop;\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.8-Ensure-nftables-default-deny-firewall-policy/#remediation","title":"Remediation","text":"<p>Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy: <pre><code># nft chain &lt;table family&gt; &lt;table name&gt; &lt;chain name&gt; { policy drop \\; }\n</code></pre></p> <p>Example: <pre><code># nft chain inet filter input { policy drop \\; }\n# nft chain inet filter forward { policy drop \\; }\n# nft chain inet filter output { policy drop \\; }\n</code></pre></p> <p>Default Value: accept</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.9-Ensure-nftables-service-is-enabled/","title":"4.3.9 Ensure nftables service is enabled","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.9-Ensure-nftables-service-is-enabled/#audit","title":"Audit","text":"<p>Run the following command and verify that the nftables service is enabled: <pre><code># systemctl is-enabled nftables\nenabled\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.3-Configure-nftables/4.3.9-Ensure-nftables-service-is-enabled/#remediation","title":"Remediation","text":"<p>Run the following command to enable the nftables service: <pre><code># systemctl enable nftables\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure nftables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.1-Ensure-iptables-packages-are-installed/","title":"4.4.1.1 Ensure iptables packages are installed","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.1-Ensure-iptables-packages-are-installed/#audit","title":"Audit","text":"<p>Run the following command to verify that iptables is installed: <pre><code># dpkg-query -s iptables &amp;&gt;/dev/null &amp;&amp; echo \"iptables is installed\"\niptables is installed\n</code></pre></p> <p>Run the following command to verify that iptables-persistent is installed: <pre><code># dpkg-query -s iptables-persistent &amp;&gt;/dev/null &amp;&amp; echo \"iptables-persistent is installed\"\niptables-persistent is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.1-Ensure-iptables-packages-are-installed/#remediation","title":"Remediation","text":"<p>Run the following command to install iptables and iptables-persistent <pre><code># apt install iptables iptables-persistent\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.2-Ensure-nftables-is-not-in-use-with-iptables/","title":"4.4.1.2 Ensure nftables is not in use with iptables","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.2-Ensure-nftables-is-not-in-use-with-iptables/#audit","title":"Audit","text":"<p>Run the following commend to verify that nftables is not installed: <pre><code># dpkg-query -s nftables &amp;&gt;/dev/null &amp;&amp; echo \"nftables is installed\"\n</code></pre> Nothing should be returned</p> <p>- OR - Run the following command to verify nftables.service is not enabled: <pre><code># systemctl is-enabled nftables.service 2&gt;/dev/null | grep '^enabled'\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify nftables.service is not active: <pre><code># systemctl is-active nftables.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.2-Ensure-nftables-is-not-in-use-with-iptables/#remediation","title":"Remediation","text":"<p>Run the following command to remove nftables: <pre><code># apt purge nftables\n</code></pre></p> <p>- OR - Run the following commands to stop and mask nftables.service: <pre><code># systemctl stop nftables.service\n# systemctl mask nftables.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.3-Ensure-ufw-is-not-in-use-with-iptables/","title":"4.4.1.3 Ensure ufw is not in use with iptables","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.3-Ensure-ufw-is-not-in-use-with-iptables/#audit","title":"Audit","text":"<p>Run the following commands to verify that ufw is either not installed or disabled. Only one of the following needs to pass.</p> <p>Run the following command to verify that ufw is not installed: <pre><code># dpkg-query -s ufw &amp;&gt;/dev/null &amp;&amp; echo \"ufw is installed\"\n</code></pre> Nothing should be returned.</p> <p>- OR - Run the following command to verify ufw is disabled: <pre><code># ufw status\nStatus: inactive\n</code></pre></p> <p>Run the following commands to verify that the ufw.service is not enabled: <pre><code># systemctl is-enabled ufw 2&gt;dev/null | grep '^enabled'\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify ufw.service is not active: <pre><code># systemctl is-active ufw.service 2&gt;/dev/null | grep '^active'\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.1-configure-iptables-software/4.4.1.3-Ensure-ufw-is-not-in-use-with-iptables/#remediation","title":"Remediation","text":"<p>Run the following command to remove ufw: <pre><code># apt purge ufw\n</code></pre></p> <p>- OR - Run the following commands to disable ufw, and stop and mask ufw.service: <pre><code># ufw disable\n# systemctl stop ufw.service\n# systemctl mask ufw.service\n</code></pre> Note: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure iptables software","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.1-Ensure-iptables-default-deny-firewall-policy/","title":"4.4.2.1 Ensure iptables default deny firewall policy","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.1-Ensure-iptables-default-deny-firewall-policy/#audit","title":"Audit","text":"<p>Run the following command and verify that the policy for the INPUT, OUTPUT, and FORWARD chains is DROP or REJECT: <pre><code># iptables -L\nChain INPUT (policy DROP)\nChain FORWARD (policy DROP)\nChain OUTPUT (policy DROP)\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.1-Ensure-iptables-default-deny-firewall-policy/#remediation","title":"Remediation","text":"<p>Run the following commands to implement a default DROP policy: <pre><code># iptables -P INPUT DROP\n# iptables -P OUTPUT DROP\n# iptables -P FORWARD DROP\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.2-Ensure-iptables-loopback-traffic-is-configured/","title":"4.4.2.2 Ensure iptables loopback traffic is configured","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.2-Ensure-iptables-loopback-traffic-is-configured/#audit","title":"Audit","text":"<p>Run the following commands and verify output includes the listed rules in order (pkts and bytes counts may differ, prot may be all or 0): <pre><code># iptables -L INPUT -v -n\nChain INPUT (policy DROP 0 packets, 0 bytes)\npkts bytes target prot opt in out source destination\n 0 0 ACCEPT all -- lo * 0.0.0.0/0 0.0.0.0/0\n 0 0 DROP all -- * * 127.0.0.0/8 0.0.0.0/0\n\n# iptables -L OUTPUT -v -n\nChain OUTPUT (policy DROP 0 packets, 0 bytes)\npkts bytes target prot opt in out source destination\n 0 0 ACCEPT all -- * lo 0.0.0.0/0 0.0.0.0/0\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.2-Ensure-iptables-loopback-traffic-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to implement the loopback rules: <pre><code># iptables -A INPUT -i lo -j ACCEPT\n# iptables -A OUTPUT -o lo -j ACCEPT\n# iptables -A INPUT -s 127.0.0.0/8 -j DROP\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.3-Ensure-iptables-outbound-and-established-connections-are-configured/","title":"4.4.2.3 Ensure iptables outbound and established connections are configured","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.3-Ensure-iptables-outbound-and-established-connections-are-configured/#audit","title":"Audit","text":"<p>Run the following command and verify all rules for new outbound, and established connections match site policy: <pre><code># iptables -L -v -n\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.3-Ensure-iptables-outbound-and-established-connections-are-configured/#remediation","title":"Remediation","text":"<p>Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: <pre><code># iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT\n# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT\n# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT\n# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.4-Ensure-iptables-firewall-rules-exist-for-all-open-ports/","title":"4.4.2.4 Ensure iptables firewall rules exist for all open ports","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.4-Ensure-iptables-firewall-rules-exist-for-all-open-ports/#audit","title":"Audit","text":"<p>Run the following command to determine open ports: <pre><code># ss -4tuln\nNetid State Recv-Q Send-Q Local Address:Port Peer Address:Port\nudp UNCONN 0 0 *:68 *:*\nudp UNCONN 0 0 *:123 *:*\ntcp LISTEN 0 128 *:22 *:*\n</code></pre></p> <p>Run the following command to determine firewall rules: <pre><code># iptables -L INPUT -v -n\nChain INPUT (policy DROP 0 packets, 0 bytes)\npkts bytes target prot opt in out source destination\n 0 0 ACCEPT all -- lo * 0.0.0.0/0 0.0.0.0/0\n 0 0 DROP all -- * * 127.0.0.0/8 0.0.0.0/0\n 0 0 ACCEPT tcp -- * * 0.0.0.0/0 0.0.0.0/0\ntcp dpt:22 state NEW\n</code></pre></p> <p>Verify all open ports listening on non-localhost addresses have at least one firewall rule. The last line identified by the tcp dpt:22 state NEW identifies it as a firewall rule for new connections on tcp port 22.</p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.2-configure-ipv4-iptables/4.4.2.4-Ensure-iptables-firewall-rules-exist-for-all-open-ports/#remediation","title":"Remediation","text":"<p>For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections: <pre><code># iptables -A INPUT -p &lt;protocol&gt; --dport &lt;port&gt; -m state --state NEW -j ACCEPT\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv4 iptables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.1-Ensure-ip6tables-default-deny-firewall-policy/","title":"4.4.3.1 Ensure ip6tables default deny firewall policy","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.1-Ensure-ip6tables-default-deny-firewall-policy/#audit","title":"Audit","text":"<p>Run the following command and verify that the policy for the INPUT, OUTPUT, and FORWARD chains is DROP or REJECT: <pre><code># ip6tables -L\nChain INPUT (policy DROP)\nChain FORWARD (policy DROP)\nChain OUTPUT (policy DROP)\n</code></pre></p> <p>- OR - Verify IPv6 is disabled: Run the following script. Output will confirm if IPv6 is enabled on the system. <pre><code>#!/usr/bin/bash\n#!/usr/bin/env bash\n{\nl_ipv6_enabled=\"is\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_enabled=\"is not\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_enabled=\"is not\"\nfi\necho -e \" - IPv6 $l_ipv6_enabled enabled on the system\"\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.1-Ensure-ip6tables-default-deny-firewall-policy/#remediation","title":"Remediation","text":"<p>- IF - IPv6 is enabled on your system: Run the following commands to implement a default DROP policy: <pre><code># ip6tables -P INPUT DROP\n# ip6tables -P OUTPUT DROP\n# ip6tables -P FORWARD DROP\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.2-Ensure-ip6tables-loopback-traffic-is-configured/","title":"4.4.3.2 Ensure ip6tables loopback traffic is configured","text":"","tags":["Level 1","Workstation","Server","Network Configuration","Firewall Configuration","Configure iptables","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.2-Ensure-ip6tables-loopback-traffic-is-configured/#audit","title":"Audit","text":"<p>Run the following commands and verify output includes the listed rules in order (packet and byte counts may differ): <pre><code># ip6tables -L INPUT -v -n\nChain INPUT (policy DROP 0 packets, 0 bytes)\npkts bytes target prot opt in out source destination\n 0 0 ACCEPT all lo * ::/0 ::/0\n 0 0 DROP all * * ::1 ::/0\n\n# ip6tables -L OUTPUT -v -n\nChain OUTPUT (policy DROP 0 packets, 0 bytes)\npkts bytes target prot opt in out source destination\n 0 0 ACCEPT all * lo ::/0 ::/0\n</code></pre></p> <p>- OR - verify IPv6 is disabled: Run the following script. Output will confirm if IPv6 is enabled on the system. <pre><code>#!/usr/bin/env bash\n{\nl_ipv6_enabled=\"is\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_enabled=\"is not\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_enabled=\"is not\"\nfi\necho -e \" - IPv6 $l_ipv6_enabled enabled on the system\"\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Network Configuration","Firewall Configuration","Configure iptables","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.2-Ensure-ip6tables-loopback-traffic-is-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to implement the loopback rules: <pre><code># ip6tables -A INPUT -i lo -j ACCEPT\n# ip6tables -A OUTPUT -o lo -j ACCEPT\n# ip6tables -A INPUT -s ::1 -j DROP\n</code></pre></p>","tags":["Level 1","Workstation","Server","Network Configuration","Firewall Configuration","Configure iptables","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.3-Ensure-ip6tables-outbound-and-established-connections-are-configured/","title":"4.4.3.3 Ensure ip6tables outbound and established connections are configured","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.3-Ensure-ip6tables-outbound-and-established-connections-are-configured/#audit","title":"Audit","text":"<p>Run the following command and verify all rules for new outbound, and established connections match site policy: <pre><code># ip6tables -L -v -n\n</code></pre></p> <p>- OR - Verify IPv6 is disabled: Run the following script. Output will confirm if IPv6 is enabled on the system. <pre><code>#!/usr/bin/env bash\n{\nl_ipv6_enabled=\"is\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_enabled=\"is not\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_enabled=\"is not\"\nfi\necho -e \" - IPv6 $l_ipv6_enabled enabled on the system\"\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.3-Ensure-ip6tables-outbound-and-established-connections-are-configured/#remediation","title":"Remediation","text":"<p>Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections: <pre><code># ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT\n# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT\n# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT\n# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Manual","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.4-Ensure-ip6tables-firewall-rules-exist-for-all-open-ports/","title":"4.4.3.4 Ensure ip6tables firewall rules exist for all open ports","text":"","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.4-Ensure-ip6tables-firewall-rules-exist-for-all-open-ports/#audit","title":"Audit","text":"<p>Run the following command to determine open ports: <pre><code># ss -6tuln\nNetid State Recv-Q Send-Q Local Address:Port Peer Address:Port\nudp UNCONN 0 0 ::1:123 :::*\nudp UNCONN 0 0 :::123 :::*\ntcp LISTEN 0 128 :::22 :::*\ntcp LISTEN 0 20 ::1:25 :::*\n</code></pre></p> <p>Run the following command to determine firewall rules: <pre><code># ip6tables -L INPUT -v -n\nChain INPUT (policy DROP 0 packets, 0 bytes)\npkts bytes target prot opt in out source destination\n 0 0 ACCEPT all lo * ::/0 ::/0\n 0 0 DROP all * * ::1 ::/0\n 0 0 ACCEPT tcp * * ::/0 ::/0\ntcp dpt:22 state NEW\n</code></pre></p> <p>Verify all open ports listening on non-localhost addresses have at least one firewall rule. The last line identified by the \"tcp dpt:22 state NEW\" identifies it as a firewall rule for new connections on tcp port 22.</p> <p>- OR - verify IPv6 is not enabled: Run the following script. Output will confirm if IPv6 is enabled on the system. <pre><code>#!/usr/bin/env bash\n{\nl_ipv6_enabled=\"is\"\n! grep -Pqs -- '^\\h*0\\b' /sys/module/ipv6/parameters/disable &amp;&amp; l_ipv6_enabled=\"is not\"\nif sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\h*=\\h*1\\b\" &amp;&amp; \\\nsysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- \"^\\h*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\h*=\\h*1\\b\"; then\nl_ipv6_enabled=\"is not\"\nfi\necho -e \" - IPv6 $l_ipv6_enabled enabled on the system\"\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"4-Host-Based-Firewall/4.4-Configure-iptables/4.4.3-Configure-IPv6-ip6tables/4.4.3.4-Ensure-ip6tables-firewall-rules-exist-for-all-open-ports/#remediation","title":"Remediation","text":"<p>For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections: <pre><code># ip6tables -A INPUT -p &lt;protocol&gt; --dport &lt;port&gt; -m state --state NEW -j ACCEPT\n</code></pre></p>","tags":["Level 1","Workstation","Server","Host Based Firewall","Configure IPv6 ip6tables","Automated","4.4 Implement and Manage a Firewall on Servers","4.5 Implement and Manage a Firewall on End-User Devices","IG1","IG2","IG3","T1562","T1562.004","TA0011","M1031","M1037"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.1-Ensure-permissions-on-etc-ssh-sshd_config-are-configured/","title":"5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1098","T1098.004","T1543","T1543.002","TA0005","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.1-Ensure-permissions-on-etc-ssh-sshd_config-are-configured/#audit","title":"Audit","text":"<p>Run the following script and verify /etc/ssh/sshd_config and files ending in .conf in the /etc/ssh/sshd_config.d directory are: - Mode 0600 or more restrictive - Owned by the root user - Group owned by the group root.</p> <p><pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=()\nperm_mask='0177' &amp;&amp; maxperm=\"$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )\"\nf_sshd_files_chk()\n{\nwhile IFS=: read -r l_mode l_user l_group; do\na_out2=()\n[ $(( $l_mode &amp; $perm_mask )) -gt 0 ] &amp;&amp; a_out2+=(\"Is mode: \\\"$l_mode\\\"\" \\\"should be mode: \\\"$maxperm\\\" or more restrictive\")\n[ \"$l_user\" != \"root\" ] &amp;&amp; a_out2+=(\"Is owned by \\\"$l_user\\\"should be owned by \\\"root\\\"\")\n[ \"$l_group\" != \"root\" ] &amp;&amp; a_out2+=(\"Is group owned by \\\"$l_user\\\" should be group owned by \\\"root\\\"\")\nif [ \"${#a_out2[@]}\" -gt \"0\" ]; then\na_output2+=(\" - File: \\\"$l_file\\\":\" \"${a_out2[@]}\")\nelse\na_output+=(\" - File: \\\"$l_file\\\":\" \"Correct: mode ($l_mode), owner ($l_user)\" \\\"and group owner ($l_group) configured\")\nfi\ndone &lt; &lt;(stat -Lc '%#a:%U:%G' \"$l_file\")\n}\n[ -e \"/etc/ssh/sshd_config\" ] &amp;&amp; l_file=\"/etc/ssh/sshd_config\" &amp;&amp; f_sshd_files_chk\nwhile IFS= read -r -d $'\\0' l_file; do\n[ -e \"$l_file\" ] &amp;&amp; f_sshd_files_chk\ndone &lt; &lt;(find /etc/ssh/sshd_config.d -type f -name '*.conf' \\( -perm /077 -o ! -user root -o ! -group root \\) -print0 2&gt;/dev/null)\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre> - IF - other locations are listed in an Include statement, *.conf files in these locations should also be checked.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1098","T1098.004","T1543","T1543.002","TA0005","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.1-Ensure-permissions-on-etc-ssh-sshd_config-are-configured/#remediation","title":"Remediation","text":"<p>Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending in .conf in the /etc/ssh/sshd_config.d directory: <pre><code>#!/usr/bin/env bash\n{\nchmod u-x,og-rwx /etc/ssh/sshd_config\nchown root:root /etc/ssh/sshd_config\nwhile IFS= read -r -d $'\\0' l_file; do\nif [ -e \"$l_file\" ]; then\nchmod u-x,og-rwx \"$l_file\"\nchown root:root \"$l_file\"\nfi\ndone &lt; &lt;(find /etc/ssh/sshd_config.d -type f -print0 2&gt;/dev/null)\n</code></pre> - IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1098","T1098.004","T1543","T1543.002","TA0005","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.10-Ensure-sshd-HostbasedAuthentication-is-disabled/","title":"5.1.10 Ensure sshd HostbasedAuthentication is disabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1078","T1078.001","T1078.003","TA0001","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.10-Ensure-sshd-HostbasedAuthentication-is-disabled/#audit","title":"Audit","text":"<p>Run the following command to verify HostbasedAuthentication is set to no: <pre><code># sshd -T | grep hostbasedauthentication\nhostbasedauthentication no\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep hostbasedauthentication\n</code></pre></p> <p>Run the following command: <pre><code># grep -Ei '^\\s*HostbasedAuthentication\\s+yes' /etc/ssh/sshd_config\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1078","T1078.001","T1078.003","TA0001","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.10-Ensure-sshd-HostbasedAuthentication-is-disabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter to no above any Include and Match entries as follows: <pre><code>HostbasedAuthentication no\n</code></pre></p> <p>Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: HostbasedAuthentication no</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1078","T1078.001","T1078.003","TA0001","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.11-Ensure-sshd-IgnoreRhosts-is-enabled/","title":"5.1.11 Ensure sshd IgnoreRhosts is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0001","M1027"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.11-Ensure-sshd-IgnoreRhosts-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify IgnoreRhosts is set to yes: <pre><code># sshd -T | grep ignorerhosts\nignorerhosts yes\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep ignorerhosts\n</code></pre> Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0001","M1027"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.11-Ensure-sshd-IgnoreRhosts-is-enabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above any Include and Match entries as follows: <pre><code>IgnoreRhosts yes\n</code></pre></p> <p>Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: IgnoreRhosts yes</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0001","M1027"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.12-Ensure-sshd-KexAlgorithms-is-configured/","title":"5.1.12 Ensure sshd KexAlgorithms is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.12-Ensure-sshd-KexAlgorithms-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify none of the \"weak\" Key Exchange algorithms are being used: <pre><code># sshd -T | grep -Pi -- 'kexalgorithms\\h+([^#\\n\\r]+,)?(diffie-hellman-group1-sha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1)\\b'\nNothing should be returned\n</code></pre></p> <p>The following are considered \"weak\" Key Exchange Algorithms, and should not be used: <pre><code>diffie-hellman-group1-sha1\ndiffie-hellman-group14-sha1\ndiffie-hellman-group-exchange-sha1\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.12-Ensure-sshd-KexAlgorithms-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:</p> <p>Example: <pre><code>KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1\n</code></pre> Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: KexAlgorithms sntrup761x25519-sha512@openssh.com,curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.13-Ensure-sshd-LoginGraceTime-is-configured/","title":"5.1.13 Ensure sshd LoginGraceTime is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1110","T1110.001","T1110.003","T1110.004","TA0006","M1036"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.13-Ensure-sshd-LoginGraceTime-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify that output LoginGraceTime is between 1 and 60 seconds: <pre><code># sshd -T | grep logingracetime\nlogingracetime 60\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1110","T1110.001","T1110.003","T1110.004","TA0006","M1036"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.13-Ensure-sshd-LoginGraceTime-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 seconds or less above any Include entry as follows: <pre><code>LoginGraceTime 60\n</code></pre> Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: LoginGraceTime 120</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1110","T1110.001","T1110.003","T1110.004","TA0006","M1036"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.14-Ensure-sshd-LogLevel-is-configured/","title":"5.1.14 Ensure sshd LogLevel is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.14-Ensure-sshd-LogLevel-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify that output matches loglevel VERBOSE or loglevel INFO: <pre><code># sshd -T | grep loglevel\n\nloglevel VERBOSE\n- OR -\nloglevel INFO\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep loglevel\n</code></pre> Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.14-Ensure-sshd-LogLevel-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or INFO above any Include and Match entries as follows: <pre><code>LogLevel VERBOSE\n- OR -\nLogLevel INFO\n</code></pre> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: LogLevel INFO</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.15-Ensure-sshd-MACs-are-configured/","title":"5.1.15 Ensure sshd MACs are configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.15-Ensure-sshd-MACs-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify none of the \"weak\" MACs are being used: <pre><code># sshd -T | grep -Pi -- 'macs\\h+([^#\\n\\r]+,)?(hmac-md5|hmac-md5-96|hmac-ripemd160|hmac-sha1-96|umac-64@openssh\\.com|hmac-md5-etm@openssh\\.com|hmac-md5-96-etm@openssh\\.com|hmac-ripemd160-etm@openssh\\.com|hmac-sha1-96-etm@openssh\\.com|umac-64-etm@openssh\\.com|umac-128-etm@openssh\\.com)\\b'\nNothing should be returned\n</code></pre></p> <p>Note: Review CVE-2023-48795 and verify the system has been patched. If the system has not been patched, review the use of the Encrypt Then Mac (etm) MACs. The following are considered \"weak\" MACs, and should not be used: <pre><code>hmac-md5\nhmac-md5-96\nhmac-ripemd160\nhmac-sha1-96\numac-64@openssh.com\nhmac-md5-etm@openssh.com\nhmac-md5-96-etm@openssh.com\nhmac-ripemd160-etm@openssh.com\nhmac-sha1-96-etm@openssh.com\numac-64-etm@openssh.com\numac-128-etm@openssh.com\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.15-Ensure-sshd-MACs-are-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries: Example: <pre><code>MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com\n</code></pre> - IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list: hmac-sha1-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com</p> <p>Default Value: MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.16-Ensure-sshd-MaxAuthTries-is-configured/","title":"5.1.16 Ensure sshd MaxAuthTries is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1110","T1110.001","T1110.003","TA0006","M1036"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.16-Ensure-sshd-MaxAuthTries-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify that MaxAuthTries is 4 or less: <pre><code># sshd -T | grep maxauthtries\nmaxauthtries 4\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep maxauthtries\n</code></pre> Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1110","T1110.001","T1110.003","TA0006","M1036"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.16-Ensure-sshd-MaxAuthTries-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less above any Include and Match entries as follows: <pre><code>MaxAuthTries 4\n</code></pre> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: MaxAuthTries 6</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1110","T1110.001","T1110.003","TA0006","M1036"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.17-Ensure-sshd-MaxSessions-is-configured/","title":"5.1.17 Ensure sshd MaxSessions is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1499","T1499.002","TA0040"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.17-Ensure-sshd-MaxSessions-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify that MaxSessions is 10 or less: <pre><code># sshd -T | grep -i maxsessions\nmaxsessions 10\n</code></pre></p> <p>Run the following command and verify the output: <pre><code>grep -Psi -- '^\\h*MaxSessions\\h+\\\"?(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\\b'\n/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf\nNothing should be returned\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep maxsessions\n</code></pre> Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1499","T1499.002","TA0040"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.17-Ensure-sshd-MaxSessions-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less above any Include and Match entries as follows: <pre><code>MaxSessions 10\n</code></pre> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: MaxSessions 10</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1499","T1499.002","TA0040"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.18-Ensure-sshd-MaxStartups-is-configured/","title":"5.1.18 Ensure sshd MaxStartups is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1499","T1499.002","TA0040"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.18-Ensure-sshd-MaxStartups-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify MaxStartups is 10:30:60 or more restrictive: <pre><code># sshd -T | awk '$1 ~ /^\\s*maxstartups/{split($2, a, \":\");{if(a[1] &gt; 10 || a[2] &gt; 30 || a[3] &gt; 60) print $0}}'\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1499","T1499.002","TA0040"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.18-Ensure-sshd-MaxStartups-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or more restrictive above any Include entries as follows: <pre><code>MaxStartups 10:30:60\n</code></pre> Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: MaxStartups 10:30:100</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1499","T1499.002","TA0040"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.19-Ensure-sshd-PermitEmptyPasswords-is-disabled/","title":"5.1.19 Ensure sshd PermitEmptyPasswords is disabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.19-Ensure-sshd-PermitEmptyPasswords-is-disabled/#audit","title":"Audit","text":"<p>Run the following command to verify PermitEmptyPasswords is set to no: <pre><code># sshd -T | grep permitemptypasswords\npermitemptypasswords no\n</code></pre> - IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep permitemptypasswords\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.19-Ensure-sshd-PermitEmptyPasswords-is-disabled/#remediation","title":"Remediation","text":"<p>Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no above any Include and Match entries as follows: <pre><code>PermitEmptyPasswords no\n</code></pre> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: PermitEmptyPasswords no</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.2-Ensure-permissions-on-SSH-private-host-key-files-are-configured/","title":"5.1.2 Ensure permissions on SSH private host key files are configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1552","T1552.004","TA0003","TA0006","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.2-Ensure-permissions-on-SSH-private-host-key-files-are-configured/#audit","title":"Audit","text":"<p>Run the following script to verify SSH private host key files are owned by the root user and either: - owned by the group root and mode 0600 or more restrictive ** - OR - - owned by the group designated to own openSSH private keys and mode 0640** or more restrictive</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=()\nl_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)\"\nf_file_chk()\n{\nwhile IFS=: read -r l_file_mode l_file_owner l_file_group; do\na_out2=()\n[ \"$l_file_group\" = \"$l_ssh_group_name\" ] &amp;&amp; l_pmask=\"0137\" || l_pmask=\"0177\"\nl_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )\"\nif [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then\na_out2+=(\"\nMode: \\\"$l_file_mode\\\" should be mode: \\\"$l_maxperm\\\" or more restrictive\")\nfi\nif [ \"$l_file_owner\" != \"root\" ]; then\na_out2+=(\"\nOwned by: \\\"$l_file_owner\\\" should be owned by \\\"root\\\"\")\nfi\nif [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then\na_out2+=(\"\nOwned by group \\\"$l_file_group\\\" should be group owned by: \\\"$l_ssh_group_name\\\" or \\\"root\\\"\")\nfi\nif [ \"${#a_out2[@]}\" -gt \"0\" ]; then\na_output2+=(\" - File: \\\"$l_file\\\"${a_out2[@]}\")\nelse\na_output+=(\" - File: \\\"$l_file\\\"\" \\\"Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\"and group owner: \\\"$l_file_group\\\" configured\")\nfi\ndone &lt; &lt;(stat -Lc '%#a:%U:%G' \"$l_file\")\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nif ssh-keygen -lf &amp;&gt;/dev/null \"$l_file\"; then\nfile \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?private\\h+key\\b' &amp;&amp; f_file_chk\nfi\ndone &lt; &lt;(find -L /etc/ssh -xdev -type f -print0 2&gt;/dev/null)\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1552","T1552.004","TA0003","TA0006","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.2-Ensure-permissions-on-SSH-private-host-key-files-are-configured/#remediation","title":"Remediation","text":"<p>Run the following script to set mode, ownership, and group on the private SSH host key files: <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=(); l_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)\"\nf_file_access_fix()\n{\nwhile IFS=: read -r l_file_mode l_file_owner l_file_group; do\na_out2=()\n[ \"$l_file_group\" = \"$l_ssh_group_name\" ] &amp;&amp; l_pmask=\"0137\" || l_pmask=\"0177\"\nl_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )\"\nif [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then\na_out2+=(\"\nMode: \\\"$l_file_mode\\\" should be mode: \\\"$l_maxperm\\\" or more restrictive\" \\\"updating to mode: \\:$l_maxperm\\\"\")\nif [ \"l_file_group\" = \"$l_ssh_group_name\" ]; then\nchmod u-x,g-wx,o-rwx \"$l_file\"\nelse\nchmod u-x,go-rwx \"$l_file\"\nfi\nfi\nif [ \"$l_file_owner\" != \"root\" ]; then\na_out2+=(\"\nOwned by: \\\"$l_file_owner\\\" should be owned by \\\"root\\\"\" \\\"Changing ownership to \\\"root\\\"\")\nchown root \"$l_file\"\nfi\nif [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then\n[ -n \"$l_ssh_group_name\" ] &amp;&amp; l_new_group=\"$l_ssh_group_name\" || l_new_group=\"root\"\na_out2+=(\"\nOwned by group \\\"$l_file_group\\\" should be group owned by:\\\"$l_ssh_group_name\\\" or \\\"root\\\"\" \\\"Changing group ownership to \\\"$l_new_group\\\"\")\nchgrp \"$l_new_group\" \"$l_file\"\nfi\nif [ \"${#a_out2[@]}\" -gt \"0\" ]; then\na_output2+=(\" - File: \\\"$l_file\\\"\" \"${a_out2[@]}\")\nelse\na_output+=(\" - File: \\\"$l_file\\\"\" \\\"Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\", and group owner:\\\"$l_file_group\\\" configured\")\nfi\ndone &lt; &lt;(stat -Lc '%#a:%U:%G' \"$l_file\")\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nif ssh-keygen -lf &amp;&gt;/dev/null \"$l_file\"; then\nfile \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?private\\h+key\\b' &amp;&amp; f_file_access_fix\nfi\ndone &lt; &lt;(find -L /etc/ssh -xdev -type f -print0 2&gt;/dev/null)\nif [ \"${#a_output2[@]}\" -le \"0\" ]; then\nprintf '%s\\n' \"\" \" - No access changes required\" \"\"\nelse\nprintf '%s\\n' \"\" \" - Remediation results:\" \"${a_output2[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1552","T1552.004","TA0003","TA0006","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.20-Ensure-sshd-PermitRootLogin-is-disabled/","title":"5.1.20 Ensure sshd PermitRootLogin is disabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.20-Ensure-sshd-PermitRootLogin-is-disabled/#audit","title":"Audit","text":"<p>Run the following command to verify PermitRootLogin is set to no: <pre><code># sshd -T | grep permitrootlogin\npermitrootlogin no\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep permitrootlogin\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.20-Ensure-sshd-PermitRootLogin-is-disabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no above any Include and Match entries as follows: <pre><code>PermitRootLogin no\n</code></pre> Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: PermitRootLogin without-password</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.21-Ensure-sshd-PermitUserEnvironment-is-disabled/","title":"5.1.21 Ensure sshd PermitUserEnvironment is disabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.21-Ensure-sshd-PermitUserEnvironment-is-disabled/#audit","title":"Audit","text":"<p>Run the following command to verify PermitUserEnviroment is set to no: <pre><code># sshd -T | grep permituserenvironment\npermituserenvironment no\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.21-Ensure-sshd-PermitUserEnvironment-is-disabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to no above any Include entries as follows: <pre><code>PermitUserEnvironment no\n</code></pre> Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: PermitUserEnvironment no</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1021","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.22-Ensure-sshd-UsePAM-is-enabled/","title":"5.1.22 Ensure sshd UsePAM is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1021","T1021.004","TA0001","M1035"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.22-Ensure-sshd-UsePAM-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify UsePAM is set to yes: <pre><code># sshd -T | grep -i usepam\nusepam yes\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1021","T1021.004","TA0001","M1035"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.22-Ensure-sshd-UsePAM-is-enabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any Include entries as follows: <pre><code>UsePAM yes\n</code></pre> Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: UsePAM yes</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1021","T1021.004","TA0001","M1035"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.3-Ensure-permissions-on-SSH-public-host-key-files-are-configured/","title":"5.1.3 Ensure permissions on SSH public host key files are configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1557","TA0003","TA0006","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.3-Ensure-permissions-on-SSH-public-host-key-files-are-configured/#audit","title":"Audit","text":"<p>Run the following command and verify Access does not grant write or execute permissions to group or other for all returned files:  Run the following script to verify SSH public host key files are mode 0644 or more restrictive, owned by the root user, and owned by the root group:</p> <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=()\nl_pmask=\"0133\"; l_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )\"\nf_file_chk()\n{\nwhile IFS=: read -r l_file_mode l_file_owner l_file_group; do\na_out2=()\nif [ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ]; then\na_out2+=(\"\nMode: \\\"$l_file_mode\\\" should be mode: \\\"$l_maxperm\\\" or more restrictive\")\nfi\nif [ \"$l_file_owner\" != \"root\" ]; then\na_out2+=(\"\nOwned by: \\\"$l_file_owner\\\" should be owned by: \\\"root\\\"\")\nfi\nif [ \"$l_file_group\" != \"root\" ]; then\na_out2+=(\"\nOwned by group \\\"$l_file_group\\\" should be group owned by group: \\\"root\\\"\")\nfi\nif [ \"${#a_out2[@]}\" -gt \"0\" ]; then\na_output2+=(\" - File: \\\"$l_file\\\"\" \"${a_out2[@]}\")\nelse\na_output+=(\" - File: \\\"$l_file\\\"\" \\\"Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\" and group owner: \\\"$l_file_group\\\" configured\")\nfi\ndone &lt; &lt;(stat -Lc '%#a:%U:%G' \"$l_file\")\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nif ssh-keygen -lf &amp;&gt;/dev/null \"$l_file\"; then\nfile \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?public\\h+key\\b' &amp;&amp; f_file_chk\nfi\ndone &lt; &lt;(find -L /etc/ssh -xdev -type f -print0 2&gt;/dev/null)\nif [ \"${#a_output2[@]}\" -le 0 ]; then\n[ \"${#a_output[@]}\" -le 0 ] &amp;&amp; a_output+=(\" - No openSSH public keys found\")\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1557","TA0003","TA0006","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.3-Ensure-permissions-on-SSH-public-host-key-files-are-configured/#remediation","title":"Remediation","text":"<p>Run the following script to set mode, ownership, and group on the public SSH host key files: <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=()\nl_pmask=\"0133\"; l_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )\"\nf_file_access_fix()\n{\nwhile IFS=: read -r l_file_mode l_file_owner l_file_group; do\na_out2=()\n[ $(( $l_file_mode &amp; $l_pmask )) -gt 0 ] &amp;&amp; \\\na_out2+=(\"\nMode: \\\"$l_file_mode\\\" should be mode: \\\"$l_maxperm\\\" or more restrictive\" \\\"updating to mode: \\\"$l_maxperm\\\"\") &amp;&amp; chmod u-x,go-wx\n\"$l_file\"\n[ \"$l_file_owner\" != \"root\" ] &amp;&amp; \\\na_out2+=(\"\nOwned by: \\\"$l_file_owner\\\" should be owned by \\\"root\\\"\" \\\"Changing ownership to \\\"root\\\"\") &amp;&amp; chown root \"$l_file\"\n[ \"$l_file_group\" != \"root\" ] &amp;&amp; \\\na_out2+=(\"Owned by group \\\"$l_file_group\\\" should be group owned by: \\\"root\\\"\" \\\"Changing group ownership to \\\"root\\\"\") &amp;&amp; chgrp root \"$l_file\"\nif [ \"${#a_out2[@]}\" -gt \"0\" ]; then\na_output2+=(\" - File: \\\"$l_file\\\"\" \"${a_out2[@]}\")\nelse\na_output+=(\" - File: \\\"$l_file\\\"\" \\\"Correct: mode: \\\"$l_file_mode\\\", owner: \\\"$l_file_owner\\\", and group owner: \\\"$l_file_group\\\" configured\")\nfi\ndone &lt; &lt;(stat -Lc '%#a:%U:%G' \"$l_file\")\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nif ssh-keygen -lf &amp;&gt;/dev/null \"$l_file\"; then\nfile \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?public\\h+key\\b' &amp;&amp; f_file_access_fix\nfi\ndone &lt; &lt;(find -L /etc/ssh -xdev -type f -print0 2&gt;/dev/null)\nif [ \"${#a_output2[@]}\" -le \"0\" ]; then\nprintf '%s\\n' \"\" \" - No access changes required\" \"\"\nelse\nprintf '%s\\n' \" - Remediation results:\" \"${a_output2[@]}\" \"\"\nfi\n}\n</code></pre></p> <p>Default Value: 644 0/root 0/root</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1557","TA0003","TA0006","M1022"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.4-Ensure-sshd-access-is-configured/","title":"5.1.4 Ensure SSH access is limited","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1021","T1021.004","TA0008","M1018"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.4-Ensure-sshd-access-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify the output: <pre><code># sshd -T | grep -Pi -- '^\\h*(allow|deny)(users|groups)\\h+\\H+'\n</code></pre></p> <p>Verify that the output matches at least one of the following lines: <pre><code>allowusers &lt;userlist&gt;\n-OR-\nallowgroups &lt;grouplist&gt;\n-OR-\ndenyusers &lt;userlist&gt;\n-OR-\ndenygroups &lt;grouplist&gt;\n</code></pre></p> <p>Review the list(s) to ensure included users and/or groups follow local site policy - IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep -Pi -- '^\\h*(allow|deny)(users|groups)\\h+\\H+'\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1021","T1021.004","TA0008","M1018"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.4-Ensure-sshd-access-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any Include and Match set statements as follows: <pre><code>AllowUsers &lt;userlist&gt;\n- AND/OR -\nAllowGroups &lt;grouplist&gt;\n</code></pre> Note: - First occurrence of an option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a .conf file in a Include directory. - Be advised that these options are \"ANDed\" together. If both AllowUsers and AllowGroups are set, connections will be limited to the list of users that are also a member of an allowed group. It is recommended that only one be set for clarity and ease of administration. - It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user or group and forget to add it to the deny list.</p> <p>Default Value: None</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1021","T1021.004","TA0008","M1018"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.5-Ensure-sshd-banner-is-configured/","title":"5.1.5 Ensure sshd banner is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","TA0001","TA0007","M1035"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.5-Ensure-sshd-banner-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify Banner is set: <pre><code># sshd -T | grep -Pi -- '^banner\\h+\\/\\H+'\n</code></pre></p> <p>Example: <pre><code>banner /etc/issue.net\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep -Pi -- '^banner\\h+\\/\\H+'\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain). Run the following command and verify that the contents or the file being called by the Banner argument match site policy: <pre><code># [ -e \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\" ] &amp;&amp; cat \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\"\n</code></pre></p> <p>Run the following command and verify no results are returned: <pre><code># grep -Psi -- \"(\\\\\\v|\\\\\\r|\\\\\\m|\\\\\\s|\\b$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/\"//g')\\b)\" \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\"\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","TA0001","TA0007","M1035"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.5-Ensure-sshd-banner-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include and Match entries as follows: <pre><code>Banner /etc/issue.net\n</code></pre></p> <p>Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location. Edit the file being called by the Banner argument with the appropriate contents according to your site policy, remove any instances of \\m , \\r , \\s , \\v or references to the OS platform Example: <pre><code># printf '%s\\n' \"Authorized users only. All activity may be monitored and reported.\" &gt; \"$(sshd -T | awk '$1 == \"banner\" {print $2}')\"\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","TA0001","TA0007","M1035"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.6-Ensure-sshd-Ciphers-are-configured/","title":"5.1.6 Ensure sshd Ciphers are configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.6-Ensure-sshd-Ciphers-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify none of the \"weak\" ciphers are being used: <pre><code># sshd -T | grep -Pi --\n'^ciphers\\h+\\\"?([^#\\n\\r]+,)?((3des|blowfish|cast128|aes(128|192|256))-cbc|arcfour(128|256)?|rijndael-cbc@lysator\\.liu\\.se|chacha20-poly1305@openssh\\.com)\\b'\n</code></pre></p> <p>- IF - a line is returned, review the list of ciphers. If the line includes chacha20-poly1305@openssh.com, review CVE-2023-48795 and verify the system has been patched. No ciphers in the list below should be returned as they're considered \"weak\": <pre><code>3des-cbc\naes128-cbc\naes192-cbc\naes256-cbc\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.6-Ensure-sshd-Ciphers-are-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries: Example: <pre><code>Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com\n</code></pre> - IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers. Note: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","3.10 Encrypt Sensitive Data in Transit","T1040","T1557","TA0006","M1041"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.7-Ensure-sshd-ClientAliveInterval-and-ClentAliveCountMax-are-configured/","title":"5.1.7 Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1078","T1078.001","T1078.002","T1078.003","TA0001","M1026"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.7-Ensure-sshd-ClientAliveInterval-and-ClentAliveCountMax-are-configured/#audit","title":"Audit","text":"<p>Run the following command and verify ClientAliveInterval and ClientAliveCountMax are greater than zero: <pre><code># sshd -T | grep -Pi -- '(clientaliveinterval|clientalivecountmax)'\n</code></pre></p> <p>Example output: <pre><code>clientaliveinterval 15\nclientalivecountmax 3\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep -Pi -- '(clientaliveinterval|clientalivecountmax)'\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1078","T1078.001","T1078.002","T1078.003","TA0001","M1026"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.7-Ensure-sshd-ClientAliveInterval-and-ClentAliveCountMax-are-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and ClientAliveCountMax parameters above any Include and Match entries according to site policy.</p> <p>Example: <pre><code>ClientAliveInterval 15\nClientAliveCountMax 3\n</code></pre></p> <p>Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: ClientAliveInterval 0 ClientAliveCountMax 3</p>","tags":["Level 1","Workstation","Server","Access Control","Configure SSH Server","Automated","T1078","T1078.001","T1078.002","T1078.003","TA0001","M1026"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.8-Ensure-sshd-DisableForwarding-is-enabled/","title":"5.1.8 Ensure sshd DisableForwarding is enabled","text":"","tags":["Level 1","Level 2","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1210","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.8-Ensure-sshd-DisableForwarding-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify DisableForwarding is set to yes: <pre><code># sshd -T | grep -i disableforwarding\ndisableforwarding yes\n</code></pre></p>","tags":["Level 1","Level 2","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1210","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.8-Ensure-sshd-DisableForwarding-is-enabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows: <pre><code>DisableForwarding yes\n</code></pre></p> <p>Note: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p>","tags":["Level 1","Level 2","Workstation","Server","Access Control","Configure SSH Server","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1210","TA0008","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.9-Ensure-sshd-GSSAPIAuthentication-is-disabled/","title":"5.1.9 Ensure sshd GSSAPIAuthentication is disabled","text":"","tags":["Level 1","Level 2","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0001","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.9-Ensure-sshd-GSSAPIAuthentication-is-disabled/#audit","title":"Audit","text":"<p>Run the following command to verify GSSAPIAuthentication is set to no: <pre><code># sshd -T | grep gssapiauthentication\ngssapiauthentication no\n</code></pre></p> <p>- IF - Match set statements are used in your environment, specify the connection parameters to use for the -T extended test mode and run the audit to verify the setting is not incorrectly configured in a match block Example additional audit needed for a match block for the user sshuser: <pre><code># sshd -T -C user=sshuser | grep gssapiauthentication\n</code></pre></p> <p>Note: If provided, any Match directives in the configuration file that would apply are applied before the configuration is written to standard output. The connection parameters are supplied as keyword=value pairs and may be supplied in any order, either with multiple -C options or as a comma-separated list. The keywords are addr (source address), user (user), host (resolved source host name), laddr (local address), lport (local port number), and rdomain (routing domain).</p>","tags":["Level 1","Level 2","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0001","M1042"]},{"location":"5-Access-Control/5.1-Configure-SSH-Server/5.1.9-Ensure-sshd-GSSAPIAuthentication-is-disabled/#remediation","title":"Remediation","text":"<p>Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to no above any Include and Match entries as follows: <pre><code>GSSAPIAuthentication no\n</code></pre></p> <p>Note: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.</p> <p>Default Value: GSSAPIAuthentication no</p>","tags":["Level 1","Level 2","Workstation","Server","Access Control","Configure SSH Server","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0001","M1042"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.1-Ensure-sudo-is-installed/","title":"5.2.1 Ensure sudo is installed","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.1-Ensure-sudo-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify that either sudo is installed: <pre><code># dpkg-query -s sudo &amp;&gt;/dev/null &amp;&amp; echo \"sudo is installed\"\nsudo is installed\n</code></pre></p> <p>- OR - Run the following command to verify that either sudo-ldap is installed: <pre><code># dpkg-query -s sudo-ldap &amp;&gt;/dev/null &amp;&amp; echo \"sudo-ldap is installed\"\nsudo-ldap is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.1-Ensure-sudo-is-installed/#remediation","title":"Remediation","text":"<p>First determine is LDAP functionality is required. If so, then install sudo-ldap, else install sudo. Example: <pre><code># apt install sudo\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.2-Ensure-sudo-commands-use-pty/","title":"5.2.2 Ensure sudo commands use pty","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1078","T1078.003","T1548","T1548.003","TA0001","TA0003","M1026","M1028"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.2-Ensure-sudo-commands-use-pty/#audit","title":"Audit","text":"<p>Verify that sudo can only run other commands from a pseudo terminal. Run the following command to verify Defaults use_pty is set: <pre><code># grep -rPi -- '^\\h*Defaults\\h+([^#\\n\\r]+,\\h*)?use_pty\\b' /etc/sudoers*\n</code></pre></p> <p>Verify the output matches: <pre><code>/etc/sudoers:Defaults use_pty\n</code></pre></p> <p>Run the follow command to to verify Defaults !use_pty is not set: <pre><code># grep -rPi -- '^\\h*Defaults\\h+([^#\\n\\r]+,\\h*)?!use_pty\\b' /etc/sudoers*\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1078","T1078.003","T1548","T1548.003","TA0001","TA0003","M1026","M1028"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.2-Ensure-sudo-commands-use-pty/#remediation","title":"Remediation","text":"<p>Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f  and add the following line: <pre><code>Defaults use_pty\n</code></pre> <p>Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo -f  and and remove any occurrence of !use_pty <p>Note: - sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or contain a . character to avoid causing problems with package manager or editor temporary/backup files. - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second. - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second. - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1078","T1078.003","T1548","T1548.003","TA0001","TA0003","M1026","M1028"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.3-Ensure-sudo-log-file-exists/","title":"5.2.3 Ensure sudo log file exists","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.3-Ensure-sudo-log-file-exists/#audit","title":"Audit","text":"<p>Run the following command to verify that sudo has a custom log file configured: <pre><code># grep -rPsi\n\"^\\h*Defaults\\h+([^#]+,\\h*)?logfile\\h*=\\h*(\\\"|\\')?\\H+(\\\"|\\')?(,\\h*\\H+\\h*)*\\h*(#.*)?$\" /etc/sudoers*\n</code></pre></p> <p>Verify the output matches: <pre><code>Defaults logfile=\"/var/log/sudo.log\"\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.3-Ensure-sudo-log-file-exists/#remediation","title":"Remediation","text":"<p>Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <code>&lt;PATH TO FILE&gt;</code> and add the following line:</p> <p>Example: <pre><code>Defaults logfile=\"/var/log/sudo.log\"\n</code></pre></p> <p>Note: - sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or contain a . character to avoid causing problems with package manager or editor temporary/backup files. - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second. - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second. - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.4-Ensure-users-must-provide-password-for-privilege-escalation/","title":"5.2.4 Ensure users must provide password for privilege escalation","text":"","tags":["Level 2","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.4-Ensure-users-must-provide-password-for-privilege-escalation/#audit","title":"Audit","text":"<p>Note: If passwords are not being used for authentication, this is not applicable.</p> <p>Verify the operating system requires users to supply a password for privilege escalation. Check the configuration of the /etc/sudoers and /etc/sudoers.d/* files with the following command: <pre><code># grep -r \"^[^#].*NOPASSWD\" /etc/sudoers*\n</code></pre></p> <p>If any line is found refer to the remediation procedure below.</p>","tags":["Level 2","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.4-Ensure-users-must-provide-password-for-privilege-escalation/#remediation","title":"Remediation","text":"<p>Based on the outcome of the audit procedure, use visudo -f <code>&lt;PATH TO FILE&gt;</code> to edit the relevant sudoers file.</p> <p>Remove any line with occurrences of NOPASSWD tags in the file.</p>","tags":["Level 2","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.5-Ensure-re-authentication-for-privilege-escalation-is-not-disabled-globally/","title":"5.2.5 Ensure re-authentication for privilege escalation is not disabled globally","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.5-Ensure-re-authentication-for-privilege-escalation-is-not-disabled-globally/#audit","title":"Audit","text":"<p>Verify the operating system requires users to re-authenticate for privilege escalation. Check the configuration of the /etc/sudoers and /etc/sudoers.d/* files with the following command: <pre><code># grep -r \"^[^#].*\\!authenticate\" /etc/sudoers*\n</code></pre></p> <p>If any line is found with a !authenticate tag, refer to the remediation procedure below.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.5-Ensure-re-authentication-for-privilege-escalation-is-not-disabled-globally/#remediation","title":"Remediation","text":"<p>Configure the operating system to require users to reauthenticate for privilege escalation.</p> <p>Based on the outcome of the audit procedure, use visudo -f <code>&lt;PATH TO FILE&gt;</code> to edit the relevant sudoers file.</p> <p>Remove any occurrences of !authenticate tags in the file(s).</p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.6-Ensure-sudo-authentication-timeout-is-configured-correctly/","title":"5.2.6 Ensure sudo authentication timeout is configured correctly","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.6-Ensure-sudo-authentication-timeout-is-configured-correctly/#audit","title":"Audit","text":"<p>Ensure that the caching timeout is no more than 15 minutes.</p> <p>Example: <pre><code># grep -roP \"timestamp_timeout=\\K[0-9]*\" /etc/sudoers*\n</code></pre></p> <p>If there is no timestamp_timeout configured in /etc/sudoers* then the default is 15 minutes. This default can be checked with: <pre><code># sudo -V | grep \"Authentication timestamp timeout:\"\n</code></pre></p> <p>NOTE: A value of -1 means that the timeout is disabled. Depending on the configuration of the timestamp_type, this could mean for all terminals / processes of that user and not just that one single terminal session.</p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.6-Ensure-sudo-authentication-timeout-is-configured-correctly/#remediation","title":"Remediation","text":"<p>If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <code>&lt;PATH TO FILE&gt;</code> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset. See the following two examples: <pre><code>Defaults env_reset, timestamp_timeout=15\nDefaults timestamp_timeout=15\nDefaults env_reset\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts","T1548","TA0004","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.7-Ensure-access-to-the-su-command-is-restricted/","title":"5.2.7 Ensure access to the su command is restricted","text":"","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.7-Ensure-access-to-the-su-command-is-restricted/#audit","title":"Audit","text":"<p>Run the following command: <pre><code># grep -Pi '^\\h*auth\\h+(?:required|requisite)\\h+pam_wheel\\.so\\h+(?:[^#\\n\\r]+\\h+)?((?!\\2)(use_uid\\b|group=\\H+\\b))\\h+(?:[^#\\n\\r]+\\h+)?((?!\\1)(use_uid\\b|group=\\H+\\b))(\\h+.*)?$' /etc/pam.d/su\n</code></pre></p> <p>Verify the output matches: <pre><code>auth required pam_wheel.so use_uid group=&lt;group_name&gt;\n</code></pre></p> <p>Run the following command and verify that the group specified in  contains no users: <pre><code># grep &lt;group_name&gt; /etc/group\n</code></pre> <p>Verify the output does not contain any users in the relevant group: <pre><code>&lt;group_name&gt;:x:&lt;GID&gt;:\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.2-Configure-privilege-escalation/5.2.7-Ensure-access-to-the-su-command-is-restricted/#remediation","title":"Remediation","text":"<p>Create an empty group that will be specified for use of the su command. The group should be named according to site policy.</p> <p>Example: <pre><code># groupadd sugroup\n</code></pre></p> <p>Add the following line to the /etc/pam.d/su file, specifying the empty group:  <pre><code>auth required pam_wheel.so use_uid group=sugroup\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Configure privilege escalation","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.1-Ensure-latest-version-of-pam%20-is-installed/","title":"5.3.1.1 Ensure latest version of pam is installed","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.1-Ensure-latest-version-of-pam%20-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify the version of libpam-runtime on the system: <pre><code># dpkg-query -s libpam-runtime | grep -P -- '^(Status|Version)\\b'\n</code></pre></p> <p>The output should be similar to: <pre><code>Status: install ok installed\nVersion: 1.5.2-6\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.1-Ensure-latest-version-of-pam%20-is-installed/#remediation","title":"Remediation","text":"<p>- IF - the version of libpam-runtime on the system is less than version 1.5.2-6: Run the following command to update to the latest version of PAM: <pre><code># apt upgrade libpam-runtime\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.2-Ensure-libpam-modules-is-installed/","title":"5.3.1.2 Ensure libpam-modules is installed","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.2-Ensure-libpam-modules-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify libpam-modules is installed and version 1.5.2-6 or later: <pre><code># dpkg-query -s libpam-modules | grep -P -- '^(Status|Version)\\b'\n</code></pre></p> <p>The output should be similar to: <pre><code>Status: install ok installed\nVersion: 1.5.2-6\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.2-Ensure-libpam-modules-is-installed/#remediation","title":"Remediation","text":"<p>- IF - the version of libpam-modules on the system is less than version 1.5.2-6: Run the following command to update to the latest version of PAM: <pre><code># apt upgrade libpam-modules\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.3-Ensure-libpam-pwquality-is-installed/","title":"5.3.1.3 Ensure libpam-pwquality is installed","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.3-Ensure-libpam-pwquality-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify libpam-pwquality is installed: <pre><code># dpkg-query -s libpam-pwquality | grep -P -- '^(Status|Version)\\b'\n</code></pre></p> <p>The output should be similar to: <pre><code>Status: install ok installed\nVersion: 1.4.5-1+b1\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.1-Configure-PAM-software-packages/5.3.1.3-Ensure-libpam-pwquality-is-installed/#remediation","title":"Remediation","text":"<p>Run the following command to update to install libpam-pwquality: <pre><code># apt upgrade libpam-pwquality\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM software packages","Automated"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.1-Ensure-pam_unix-module-is-enabled/","title":"5.3.2.1 Ensure pam_unix module is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.1-Ensure-pam_unix-module-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify that pam_unix is enabled: <pre><code># grep -PH -- '\\bpam_unix\\.so\\b' /etc/pam.d/common-{account,auth,password,session,session-noninteractive}\n</code></pre></p> <p>Output should be similar to: <pre><code>/etc/pam.d/common-account:account [success=1 new_authtok_reqd=done default=ignore] pam_unix.so\n/etc/pam.d/common-auth:auth [success=2 default=ignore] pam_unix.so try_first_pass\n/etc/pam.d/common-password:password [success=1 default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt\n/etc/pam.d/common-session:session required pam_unix.so\n/etc/pam.d/common-session-noninteractive:session required pam_unix.so\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.1-Ensure-pam_unix-module-is-enabled/#remediation","title":"Remediation","text":"<p>Run the following command to enable the pam_unix module: <pre><code># pam-auth-update --enable unix\n</code></pre> Note: If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.2-Ensure-pam_faillock-module-is-enabled/","title":"5.3.2.2 Ensure pam_faillock module is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.2-Ensure-pam_faillock-module-is-enabled/#audit","title":"Audit","text":"<p>Run the following commands to verify that pam_faillock is enabled: <pre><code># grep -P -- '\\bpam_faillock\\.so\\b' /etc/pam.d/common-{auth,account}\n</code></pre></p> <p>Output should be similar to: <pre><code>/etc/pam.d/common-auth:auth requisite pam_faillock.so preauth\n/etc/pam.d/common-auth:auth [default=die] pam_faillock.so authfail\n/etc/pam.d/common-account:account required pam_faillock.so\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.2-Ensure-pam_faillock-module-is-enabled/#remediation","title":"Remediation","text":"<p>Create two pam-auth-update profiles in /usr/share/pam-configs/: 1. Create the faillock profile in /usr/share/pam-configs/ with the following lines: <pre><code>Name: Enable pam_faillock to deny access\nDefault: yes\nPriority: 0\nAuth-Type: Primary\nAuth:\n[default=die] pam_faillock.so authfail\n</code></pre></p> <p>Example Script: <pre><code>#!/usr/bin/env bash\n{\narr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority: 0' 'Auth-Type: Primary' 'Auth:' ' [default=die] pam_faillock.so authfail')\nprintf '%s\\n' \"${arr[@]}\" &gt; /usr/share/pam-configs/faillock\n}\n</code></pre></p> <ol> <li>Create the faillock_notify profile in /usr/share/pam-configs/ with the following lines: <pre><code>Name: Notify of failed login attempts and reset count upon success\nDefault: yes\nPriority: 1024\nAuth-Type: Primary\nAuth:\nrequisite pam_faillock.so preauth\nAccount-Type: Primary\nAccount:\nrequired pam_faillock.so\n</code></pre></li> </ol> <p>Example Script: <pre><code>#!/usr/bin/env bash\n{\narr=('Name: Notify of failed login attempts and reset count upon success' 'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' ' requisite pam_faillock.so preauth' 'Account-Type: Primary' 'Account:' ' required pam_faillock.so')\nprintf '%s\\n' \"${arr[@]}\" &gt; /usr/share/pam-configs/faillock_notify\n}\n</code></pre></p> <p>Run the following command to update the common-auth and common-account PAM files with the new profiles: <pre><code># pam-auth-update --enable &lt;profile_filename&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable faillock\n# pam-auth-update --enable faillock_notify\n</code></pre></p> <p>Note:  - The name used for the file must be used in the pam-auth-update --enable command - The Name: line should be easily recognizable and understood - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_faillock module, enable that module instead</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.3-Ensure-pam_pwquality-module-is-enabled/","title":"5.3.2.3 Ensure pam_pwquality module is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.3-Ensure-pam_pwquality-module-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify that pam_pwhistory is enabled: <pre><code># grep -P -- '\\bpam_pwquality\\.so\\b' /etc/pam.d/common-password\n</code></pre></p> <p>Output should be similar to: <pre><code>password requisite pam_pwquality.so retry=3\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.3-Ensure-pam_pwquality-module-is-enabled/#remediation","title":"Remediation","text":"<p>Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile: <pre><code># grep -P -- '\\bpam_pwquality\\.so\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Output should be similar to: <pre><code>/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3\n/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3\n</code></pre></p> <p>- IF - similar output is returned: Run the following command to update /etc/pam.d/common-password with the returned profile: <pre><code># pam-auth-update --enable {PROFILE_NAME}\n</code></pre></p> <p>Example: <pre><code># pam-auth-update pwquality\n</code></pre></p> <p>- IF - similar output is NOT returned: Create a pam-auth-update profile in /usr/share/pam-configs/ with the following lines: <pre><code>Name: Pwquality password strength checking\nDefault: yes\nPriority: 1024\nConflicts: cracklib\nPassword-Type: Primary\nPassword:\nrequisite pam_pwquality.so retry=3\n</code></pre></p> <p>Example: <pre><code>#!/usr/bin/env bash\n{\narr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' '\nrequisite pam_pwquality.so retry=3')\nprintf '%s\\n' \"${arr[@]}\" &gt; /usr/share/pam-configs/pwquality\n}\n</code></pre></p> <p>Run the following command to update the /etc/pam.d/common-password with the pwquality profile: <pre><code># pam-auth-update --enable pwquality\n</code></pre></p> <p>Note:  - The name used for the file must be used in the pam-auth-update --enable command - The Name: line should be easily recognizable and understood - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.4-Ensure-pam_pwhistory-module-is-enabled/","title":"5.3.2.4 Ensure pam_history module is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.4-Ensure-pam_pwhistory-module-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify that pam_pwhistory is enabled: <pre><code># grep -P -- '\\bpam_pwhistory\\.so\\b' /etc/pam.d/common-password\n</code></pre></p> <p>Output should be similar to: <pre><code>password requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.2-Configure-pam-auth-update-profiles/5.3.2.4-Ensure-pam_pwhistory-module-is-enabled/#remediation","title":"Remediation","text":"<p>Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile: <pre><code># grep -P -- '\\bpam_pwhistory\\.so\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Output should be similar to: <pre><code>/usr/share/pam-configs/pwhistory: requisite enforce_for_root try_first_pass use_authtok\n</code></pre></p> <p>- IF - similar output is returned: Run the following command to update /etc/pam.d/common-password with the returned profile: <pre><code># pam-auth-update --enable {PROFILE_NAME}\n</code></pre></p> <p>Example: <pre><code># pam-auth-update pwhistory\n</code></pre></p> <p>- IF - similar output is NOT returned: Create a pwhistory profile in /usr/share/pam-configs/ with the following lines: <pre><code>Name: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok\n</code></pre></p> <p>Example: <pre><code>#!/usr/bin/env bash\n{\narr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')\nprintf '%s\\n' \"${arr[@]}\" &gt; /usr/share/pam-configs/pwhistory\n}\n}\n</code></pre></p> <p>Run the following command to update the /etc/pam.d/common-password with the pwhistory profile: <pre><code># pam-auth-update --enable pwhistory\n</code></pre></p> <p>Note:  - The name used for the file must be used in the pam-auth-update --enable command - The Name: line should be easily recognizable and understood - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure pam-auth-update profiles","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1110","T1110.001","T1110.002","T1110.003","T1178.001","T1178.002","T1178.003","T1178.004","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.1-Ensure-password-failed-attempts-lockout-is-configured/","title":"5.3.3.1.1 Ensure password failed attempts lockout is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.1-Ensure-password-failed-attempts-lockout-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that Number of failed logon attempts before the account is locked is no greater than 5 and meets local site policy: <pre><code># grep -Pi -- '^\\h*deny\\h*=\\h*[1-5]\\b' /etc/security/faillock.conf\ndeny = 5\n</code></pre></p> <p>Run the following command to verify that the deny argument has not been set, or 5 or less and meets local site policy: <pre><code># grep -Pi -- '^\\h*auth\\h+(requisite|required|sufficient)\\h+pam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?deny\\h*=\\h*(0|[6-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-auth\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.1-Ensure-password-failed-attempts-lockout-is-configured/#remediation","title":"Remediation","text":"<p>Create or edit the following line in /etc/security/faillock.conf setting the deny option to 5 or less: <pre><code>deny = 5\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?deny\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the deny= arguments from the pam_faillock.so line(s): <p>Default Value: deny = 3</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.2-Ensure-password-unlock-time-is-configured/","title":"5.3.3.1.2 Ensure password unlock time is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.2-Ensure-password-unlock-time-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that the time in seconds before the account is unlocked is either 0 (never) or 900 (15 minutes) or more and meets local site policy: <pre><code># grep -Pi -- '^\\h*unlock_time\\h*=\\h*(0|9[0-9][0-9]|[1-9][0-9]{3,})\\b' /etc/security/faillock.conf\ndeny = 5\n</code></pre></p> <p>Run the following command to verify that the unlock_time argument has not been set, or is either 0 (never) or 900 (15 minutes) or more and meets local site policy: <pre><code># grep -Pi -- '^\\h*auth\\h+(requisite|required|sufficient)\\h+pam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?unlock_time\\h*=\\h*([1-9]|[1-9][0-9]|[1-8][0-9][0-9])\\b' /etc/pam.d/common-auth\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.2-Ensure-password-unlock-time-is-configured/#remediation","title":"Remediation","text":"<p>Set password unlock time to conform to site policy. unlock_time should be 0 (never), or 900 seconds or greater. Edit /etc/security/faillock.conf and update or add the following line: <pre><code>unlock_time = 900\n</code></pre></p> <p>Run the following command: remove the unlock_time argument from the pam_faillock.so module in the PAM files: <pre><code># grep -Pl -- '\\bpam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?unlock_time\\b' /usr/share/pam-configs/*\n</code></pre> Edit any returned files and remove the unlock_time= arguments from the pam_faillock.so line(s): <p>Default Value: unlock_time = 600</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.3-Ensure-password-failed-attempts-lockout-includes-root-account/","title":"5.3.3.1.3 Ensure password failed attempts lockout includes root account","text":"","tags":["Level 2","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.3-Ensure-password-failed-attempts-lockout-includes-root-account/#audit","title":"Audit","text":"<p>Run the following command to verify that even_deny_root and/or root_unlock_time is enabled: <pre><code># grep -Pi -- '^\\h*(even_deny_root|root_unlock_time\\h*=\\h*\\d+)\\b' /etc/security/faillock.conf\n</code></pre></p> <p>Example output: <pre><code>even_deny_root\n\n--AND/OR--\n\nroot_unlock_time = 60\n</code></pre></p> <p>Run the following command to verify that - IF - root_unlock_time is set, it is set to 60 (One minute) or more: <pre><code># grep -Pi -- '^\\h*root_unlock_time\\h*=\\h*([1-9]|[1-5][0-9])\\b' /etc/security/faillock.conf\n</code></pre> Nothing should be returned</p> <p>Run the following command to check the pam_faillock.so module for the root_unlock_time argument. Verify -IF- root_unlock_time is set, it is set to 60 (One minute) or more: <pre><code># grep -Pi -- '^\\h*auth\\h+([^#\\n\\r]+\\h+)pam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?root_unlock_time\\h*=\\h*([1-9]|[1-5][0-9])\\b' /etc/pam.d/common-auth\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.1-Configure-pam_faillock-module/5.3.3.1.3-Ensure-password-failed-attempts-lockout-includes-root-account/#remediation","title":"Remediation","text":"<p>Edit /etc/security/faillock.conf: - Remove or update any line containing root_unlock_time, - OR - set it to a value of 60 or more - Update or add the following line: <pre><code>even_deny_root\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_faillock\\.so\\h+([^#\\n\\r]+\\h+)?(root_unlock_time=([0-9]|[1-5][0-9]))' /usr/share/pam-configs/*\n</code></pre> Edit any returned files and remove the root_unlock_time arguments from the pam_faillock.so line(s) and run the following command to regenerate the effected pam files: <pre><code># pam-auth-update\n</code></pre></p> <p>Default Value: disabled</p>","tags":["Level 2","Workstation","Server","Access Control","Pluggable Authentication Modules","Configure PAM Arguments","Configure pam_faillock module","Automated","IG1","IG2","IG3","6.2 Establish an Access Revoking Process","T1110","T1110.001","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.1-Ensure-password-number-of-changed-characters-is-configured/","title":"5.3.3.2.1 Ensure password number of changed characters is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.1-Ensure-password-number-of-changed-characters-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that the difok option is set to 2 or more and follows local site policy: <pre><code># grep -Psi -- '^\\h*difok\\h*=\\h*([2-9]|[1-9][0-9]+)\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Example output: <pre><code>/etc/security/pwquality.conf.d/50-pwdifok.conf:difok = 2\n</code></pre> Verify returned value(s) are 2 or more and meet local site policy Run the following command to verify that difok is not set, is 2 or more, and conforms to local site policy: <pre><code># grep -Psi -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?difok\\h*=\\h*([0-1])\\b' /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p> <p>Note: - settings should be configured in only one location for clarity - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.1-Ensure-password-number-of-changed-characters-is-configured/#remediation","title":"Remediation","text":"<p>Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set difok to 2 or more. Ensure setting conforms to local site policy: Example: <pre><code>#!/usr/bin/env bash\n{\nsed -ri 's/^\\s*difok\\s*=/# &amp;/' /etc/security/pwquality.conf\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '\\n%s' \"difok = 2\" &gt; /etc/security/pwquality.conf.d/50-pwdifok.conf\n}\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?difok\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the difok argument from the pam_pwquality.so line(s):</p> <p>Default Value: difok = 1</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.2-Ensure-minimum-password-length-is-configured/","title":"5.3.3.2.2 Ensure minimum password length is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.2-Ensure-minimum-password-length-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that password length is 14 or more characters, and conforms to local site policy: <pre><code># grep -Psi -- '^\\h*minlen\\h*=\\h*(1[4-9]|[2-9][0-9]|[1-9][0-9]{2,})\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Example output: <pre><code>/etc/security/pwquality.conf.d/50-pwlength.conf:minlen = 14\n</code></pre></p> <p>Verify returned value(s) are no less than 14 characters and meet local site policy Run the following command to verify that minlen is not set, or is 14 or more characters, and conforms to local site policy: <pre><code># grep -Psi -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?minlen\\h*=\\h*([0-9]|1[0-3])\\b' /etc/pam.d/system-auth /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p> <p>Note: - settings should be configured in only one location for clarity - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.2-Ensure-minimum-password-length-is-configured/#remediation","title":"Remediation","text":"<p>Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set password length of 14 or more characters. Ensure that password length conforms to local site policy: Example: <pre><code>#!/usr/bin/env bash\n{\nsed -ri 's/^\\s*minlen\\s*=/# &amp;/' /etc/security/pwquality.conf\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '\\n%s' \"minlen = 14\" &gt; /etc/security/pwquality.conf.d/50-pwlength.conf\n}\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?minlen\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the minlen argument from the pam_pwquality.so line(s):</p> <p>Default Value: minlen = 8</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.3-Ensure-password-complexity-is-configured/","title":"5.3.3.2.3 Ensure password complexity is configured","text":"<p>hide:   - toc title: 5.3.3.2.3 Ensure password complexity is configured description: Password complexity can be set through: tags:   - Level 1   - Workstation   - Server   - Access Control   - Pluggable Authentication Modules   - Confgure PAM Arguments   - Configure pam_pwquality module   - Manual   - IG1   - IG2   - IG3   - 5.2 Use Unique Passwords   - T1078.001   - T1078.002   - T1078.003   - T1078.004   - T1110   - T1110.001   - T1110.002   - T1110.003   - TA0006   - M1027</p>"},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.3-Ensure-password-complexity-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify: - dcredit, ucredit, lcredit, and ocredit are not set to a value greater than 0 - Complexity conforms to local site policy: <pre><code># grep -Psi -- '^\\h*(minclass|[dulo]credit)\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Example output: <pre><code>/etc/security/pwquality.conf.d/50-pwcomplexity.conf:minclass = 3\n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:ucredit = -2\n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:lcredit = -2\n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:dcredit = -1\n/etc/security/pwquality.conf.d/50-pwcomplexity.conf:ocredit = 0\n</code></pre></p> <p>The example represents a requirement of three character classes, with passwords requiring two upper case, two lower case, and one numeric character. Run the following command to verify that module arguments in the configuration file(s) are not being overridden by arguments in /etc/pam.d/common-password: <pre><code># grep -Psi -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?(minclass=\\d*|[dulo]credit=-?\\d*)\\b' /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p> <p>Note: - settings should be configured in only one location for clarity - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>"},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.3-Ensure-password-complexity-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?(minclass|[dulo]credit)\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the minclass, dcredit, ucredit, lcredit, and ocredit arguments from the pam_pwquality.so line(s) Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy: - minclass = N - dcredit = N # Value should be either 0 or a number proceeded by a minus (-) symbol - ucredit = -1 # Value should be either 0 or a number proceeded by a minus (-) symbol - ocredit = -1 # Value should be either 0 or a number proceeded by a minus (-) symbol - lcredit = -1 # Value should be either 0 or a number proceeded by a minus (-) symbol</p> <p>Example 1 - Set minclass = 3: <pre><code>#!/usr/bin/env bash\n{\nsed -ri 's/^\\s*minclass\\s*=/# &amp;/' /etc/security/pwquality.conf\nsed -ri 's/^\\s*[dulo]credit\\s*=/# &amp;/' /etc/security/pwquality.conf\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '\\n%s' \"minclass = 3\" &gt; /etc/security/pwquality.conf.d/50-pwcomplexity.conf\n}\n</code></pre></p> <p>Example 2 - set dcredit = -1, ucredit = -1, and lcredit = -1: <pre><code>#!/usr/bin/env bash\n{\nsed -ri 's/^\\s*minclass\\s*=/# &amp;/' /etc/security/pwquality.conf\nsed -ri 's/^\\s*[dulo]credit\\s*=/# &amp;/' /etc/security/pwquality.conf\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '%s\\n' \"dcredit = -1\" \"ucredit = -1\" \"lcredit = -1\" &gt; /etc/security/pwquality.conf.d/50-pwcomplexity.conf\n}\n</code></pre></p> <p>Default Value: minclass = 0 dcredit = 0 ucredit = 0 ocredit = 0 lcredit = 0</p>"},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.4-Ensure-password-same-consecutive-characters-is-configured/","title":"5.3.3.2.4 Ensure password same consecutive characters is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.4-Ensure-password-same-consecutive-characters-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that the maxrepeat option is set to 3 or less, not 0, and follows local site policy: <pre><code># grep -Psi -- '^\\h*maxrepeat\\h*=\\h*[1-3]\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Example output: <pre><code>/etc/security/pwquality.conf.d/50-pwrepeat.conf:maxrepeat = 3\n</code></pre></p> <p>Verify returned value(s) are 3 or less, not 0, and meet local site policy Run the following command to verify that maxrepeat is not set, is 3 or less, not 0, and conforms to local site policy: <pre><code># grep -Psi -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?maxrepeat\\h*=\\h*(0|[4-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p> <p>Note: - settings should be configured in only one location for clarity - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.4-Ensure-password-same-consecutive-characters-is-configured/#remediation","title":"Remediation","text":"<p>Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxrepeat to 3 or less and not 0. Ensure setting conforms to local site policy: Example: <pre><code>#!/usr/bin/env bash\n{\nsed -ri 's/^\\s*maxrepeat\\s*=/# &amp;/' /etc/security/pwquality.conf\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '\\n%s' \"maxrepeat = 3\" &gt; /etc/security/pwquality.conf.d/50-pwrepeat.conf\n}\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?maxrepeat\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the maxrepeat argument from the pam_pwquality.so line(s):</p> <p>Default Value: maxrepeat = 0</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.5-Ensure-password-maximum-sequential-characters-is-configured/","title":"5.3.3.2.5 Ensure password maximum sequential characters is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.5-Ensure-password-maximum-sequential-characters-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that the maxsequence option is set to 3 or less, not 0, and follows local site policy: <pre><code># grep -Psi -- '^\\h*maxsequence\\h*=\\h*[1-3]\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Example output: <pre><code>/etc/security/pwquality.conf.d/50-pwmaxsequence.conf:maxsequence = 3\n</code></pre></p> <p>Verify returned value(s) are 3 or less, not 0, and meet local site policy Run the following command to verify that maxsequence is not set, is 3 or less, not 0, and conforms to local site policy: <pre><code># grep -Psi -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?maxsequence\\h*=\\h*(0|[4-9]|[1-9][0-9]+)\\b' /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p> <p>Note: - settings should be configured in only one location for clarity - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.5-Ensure-password-maximum-sequential-characters-is-configured/#remediation","title":"Remediation","text":"<p>Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set maxsequence to 3 or less and not 0. Ensure setting conforms to local site policy: Example: <pre><code>#!/usr/bin/env bash\n{\nsed -ri 's/^\\s*maxsequence\\s*=/# &amp;/' /etc/security/pwquality.conf\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '\\n%s' \"maxsequence = 3\" &gt; /etc/security/pwquality.conf.d/50-pwmaxsequence.conf\n}\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?maxsequence\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the maxsequence argument from the pam_pwquality.so line(s):</p> <p>Default Value: maxsequence = 0</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.6-Ensure-password-dictionary-check-is-enabled/","title":"5.3.3.2.6 Ensure password dictionary check is enabled","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.6-Ensure-password-dictionary-check-is-enabled/#audit","title":"Audit","text":"<p>Run the following command to verify that the dictcheck option is set to 0 (disabled) in a pwquality configuration file: <pre><code># grep -Psi -- '^\\h*dictcheck\\h*=\\h*0\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify that the dictcheck option is not set to 0 (disabled) as a module argument in a PAM file: <pre><code># grep -Psi -- '^\\h*password\\h+(requisite|required|sufficient)\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?dictcheck\\h*=\\h*0\\b' /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p> <p>Note: - settings should be configured in only one location for clarity - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.6-Ensure-password-dictionary-check-is-enabled/#remediation","title":"Remediation","text":"<p>Edit any file ending in .conf in the /etc/security/pwquality.conf.d/ directory and/or the file /etc/security/pwquality.conf and comment out or remove any instance of dictcheck = 0: Example: <pre><code># sed -ri 's/^\\s*dictcheck\\s*=/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?dictcheck\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the dictcheck argument from the pam_pwquality.so line(s):</p> <p>Default Value: dictcheck = 1</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.7-Ensure-password-quality-checking-is-enforced/","title":"5.3.3.2.7 Ensure password quality checking is enforced","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.7-Ensure-password-quality-checking-is-enforced/#audit","title":"Audit","text":"<p>Run the following command to verify that enforcing=0 has not been set in a pwquality configuration file: <pre><code># grep -PHsi -- '^\\h*enforcing\\h*=\\h*0\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify that the enforcing=0 argument has not been set on the pam_pwquality module: <pre><code># grep -PHsi -- '^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?enforcing=0\\b' /etc/pam.d/common-password\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.7-Ensure-password-quality-checking-is-enforced/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?enforcing=0\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Run the following command: <pre><code># grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?dictcheck\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and remove the enforcing=0 argument from the pam_pwquality.so line(s): Edit /etc/security/pwquality.conf and all files ending in .conf in the /etc/security/pwquality.conf.d/ directory and remove or comment out any line containing the enforcing = 0 argument: Example: <pre><code># sed -ri 's/^\\s*enforcing\\s*=\\s*0/# &amp;/' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Default Value: enforcing=1</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.8-Ensure-password-quality-is-enforced-for-the-root-user/","title":"5.3.3.2.8 Ensure password quality is enforced for the root user","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.8-Ensure-password-quality-is-enforced-for-the-root-user/#audit","title":"Audit","text":"<p>Run the following command to verify that the enforce_for_root option is enabled in a pwquality configuration file: <pre><code># grep -Psi -- '^\\h*enforce_for_root\\b' /etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf\n</code></pre></p> <p>Example output: <pre><code>/etc/security/pwquality.conf.d/50-pwroot.conf:enforce_for_root\n</code></pre> Note: - module arguments override the settings in the /etc/security/pwquality.conf configuration file - Settings observe an order of precedence:  - module arguments override the settings in the /etc/security/pwquality.conf configuration file  - settings in the /etc/security/pwquality.conf configuration file override settings in a .conf file in the /etc/security/pwquality.conf.d/ directory  - settings in a .conf file in the /etc/security/pwquality.conf.d/ directory are read in canonical order, with last read file containing the setting taking precedence - It is recommended that settings be configured in a .conf file in the /etc/security/pwquality.conf.d/ directory for clarity, convenience, and durability.</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.2-Configure-pam_pwquality-module/5.3.3.2.8-Ensure-password-quality-is-enforced-for-the-root-user/#remediation","title":"Remediation","text":"<p>Edit or add the following line in a .conf* file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf**: Example: <pre><code>#!/urs/bin/env bash\n{\n[ ! -d /etc/security/pwquality.conf.d/ ] &amp;&amp; mkdir /etc/security/pwquality.conf.d/\nprintf '\\n%s\\n' \"enforce_for_root\" &gt; /etc/security/pwquality.conf.d/50-pwroot.conf\n}\n</code></pre></p> <p>Default Value: disabled</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwquality module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.1-Ensure-password-history-remember-is-configured/","title":"5.3.3.3.1 Ensure password history remember is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.004"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.1-Ensure-password-history-remember-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify: - The pwhistory line in /etc/pam.d/common-password includes remember= - The value of  is 24 or more - The value meets local site policy <pre><code># grep -Psi -- '^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwhistory\\.so\\h+([^#\\n\\r]+\\h+)?remember=\\d+\\b' /etc/pam.d/common-password\n</code></pre> <p>Output should be similar to: <pre><code>password requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.004"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.1-Ensure-password-history-remember-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section: Example File: <pre><code>Name: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword:\nrequisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # &lt;- **ensure line includes remember=&lt;N&gt;**\n</code></pre></p> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable pwhistory\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.004"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.2-Ensure-password-history-is-enforced-for-the-root-user/","title":"5.3.3.3.2 Ensure password history is enforced for the root user","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.2-Ensure-password-history-is-enforced-for-the-root-user/#audit","title":"Audit","text":"<p>Run the following command to verify that the enforce_for_root argument is exists on the pwhistory line in /etc/pam.d/common-password: <pre><code># grep -Psi -- '^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwhistory\\.so\\h+([^#\\n\\r]+\\h+)?enforce_for_root\\b' /etc/pam.d/common-password\n</code></pre></p> <p>Output should be similar to: <pre><code>password requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.2-Ensure-password-history-is-enforced-for-the-root-user/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section: Example File: <pre><code>Name: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword:\nrequisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # &lt;- **ensure line includes enforce_for_root**\n</code></pre></p> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable pwhistory\n</code></pre></p> <p>Default Value: disabled</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","TA0006","M1027"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.3-Ensure-pam_pwhistory-includes-use_authtok/","title":"5.3.3.3.3 Ensure pam_pwhistory includes use_authtok","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.3-Ensure-pam_pwhistory-includes-use_authtok/#audit","title":"Audit","text":"<p>Run the following command to verify that the use_authtok argument exists on the pwhistory line in /etc/pam.d/common-password: <pre><code># grep -Psi -- '^\\h*password\\h+[^#\\n\\r]+\\h+pam_pwhistory\\.so\\h+([^#\\n\\r]+\\h+)?use_authtok\\b' /etc/pam.d/common-password\n</code></pre></p> <p>Output should be similar to: <pre><code>password requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.3-Configure-pam_pwhistory-module/5.3.3.3.3-Ensure-pam_pwhistory-includes-use_authtok/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section: Example File: <pre><code>Name: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword:\nrequisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # &lt;- **ensure line includes use_authtok**\n</code></pre></p> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable pwhistory\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_pwhistory module","Automated","IG1","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.1-Ensure-pam_unix-does-not-include-nullok/","title":"5.3.3.4.1 Ensure pam_unix does not include nullok","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.1-Ensure-pam_unix-does-not-include-nullok/#audit","title":"Audit","text":"<p>Run the following command to verify that the nullok argument is not set on the pam_unix.so module: <pre><code># grep -PHs -- '^\\h*[^#\\n\\r]+\\h+pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?nullok\\b' /etc/pam.d/common-{password,auth,account,session,session-noninteractive}\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.1-Ensure-pam_unix-does-not-include-nullok/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># grep -PH -- '^\\h*([^#\\n\\r]+\\h+)?pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?nullok\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any files returned and remove the nullok argument for the pam_unix lines Example File: <pre><code>Name: Unix authentication\nDefault: yes\nPriority: 256\nAuth-Type: Primary\nAuth:\n[success=end default=ignore] pam_unix.so try_first_pass # &lt;- **ensure line does not include nullok nullok**\nAuth-Initial:\n[success=end default=ignore] pam_unix.so # &lt;- **ensure line does not include nullok nullok**\nAccount-Type: Primary\nAccount:\n[success=end new_authtok_reqd=done default=ignore] pam_unix.so\nAccount-Initial:\n[success=end new_authtok_reqd=done default=ignore] pam_unix.so\nSession-Type: Additional\nSession:\nrequired pam_unix.so\nSession-Initial:\nrequired pam_unix.so\nPassword-Type: Primary\nPassword:\n[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt\nPassword-Initial:\n[success=end default=ignore] pam_unix.so obscure yescrypt\n</code></pre></p> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable pwhistory\n</code></pre></p> <p>Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable  command skipped","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.2-Ensure-pam_unix-does-not-include-remember/","title":"5.3.3.4.2 Ensure pam_unix does not include remember","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.2-Ensure-pam_unix-does-not-include-remember/#audit","title":"Audit","text":"<p>Run the following command to verify that the remember argument is not set on the pam_unix.so module: <pre><code># grep -PHs -- '^\\h*^\\h*[^#\\n\\r]+\\h+pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?remember=\\d+\\b' /etc/pam.d/common-{password,auth,account,session,session-noninteractive}\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.2-Ensure-pam_unix-does-not-include-remember/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># grep -PH -- '^\\h*([^#\\n\\r]+\\h+)?pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?remember\\b' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any files returned and remove the remember= argument for the pam_unix lines Example File: <pre><code>[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember=5 # **&lt;- remove remember=&lt;N&gt;**\n[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **&lt;-remove remember=&lt;N&gt;**\n</code></pre> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable unix\n</code></pre></p> <p>Note: If custom files are being used, the corresponding files in /etc/pam.d/ would need to be edited directly, and the pam-auth-update --enable  command skipped","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.3-Ensure-pam_unix-includes-a-strong-password-hashing-algorithm/","title":"5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.3-Ensure-pam_unix-includes-a-strong-password-hashing-algorithm/#audit","title":"Audit","text":"<p>Run the following command to verify that a strong password hashing algorithm is set on the pam_unix.so module: <pre><code># grep -PH -- '^\\h*password\\h+([^#\\n\\r]+)\\h+pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?(sha512|yescrypt)\\b' /etc/pam.d/common-password\n</code></pre></p> <p>Output should be similar to: <pre><code>/etc/pam.d/common-password:password [success=1 default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt\n</code></pre> Verify that the line(s) include either sha512 - OR - yescrypt</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.3-Ensure-pam_unix-includes-a-strong-password-hashing-algorithm/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix\\.so/) print FILENAME}' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section: Example File: <pre><code>Name: Unix authentication\nDefault: yes\nPriority: 256\nAuth-Type: Primary # &lt;- Start of \"Auth\" section\nAuth:\n[success=end default=ignore] pam_unix.so try_first_pass\nAuth-Initial:\n[success=end default=ignore] pam_unix.so\nAccount-Type: Primary # &lt;- Start of \"Account\" section\nAccount:\n[success=end new_authtok_reqd=done default=ignore] pam_unix.so\nAccount-Initial:\n[success=end new_authtok_reqd=done default=ignore] pam_unix.so\nSession-Type: Additional # &lt;- Start of \"Session\" section\nSession:\nrequired pam_unix.so\nSession-Initial:\nrequired pam_unix.so\nPassword-Type: Primary # &lt;- Start of \"Password\" section\nPassword:\n[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # &lt;- **ensure hashing algorithm is either sha512 or yescrypt**\nPassword-Initial:\n[success=end default=ignore] pam_unix.so obscure yescrypt # &lt;- **ensure hashing algorithm is either sha512 or yescrypt**\n</code></pre></p> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable unix\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.4-Ensure-pam_unix-includes-use_authtok/","title":"5.3.3.4.4 Ensure pam_unix includes use_authtok","text":"","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.4-Ensure-pam_unix-includes-use_authtok/#audit","title":"Audit","text":"<p>Run the following command to verify that use_authtok is set on the pam_unix.so module lines in the password stack: <pre><code># grep -PH -- '^\\h*password\\h+([^#\\n\\r]+)\\h+pam_unix\\.so\\h+([^#\\n\\r]+\\h+)?use_authtok\\b' /etc/pam.d/common-password\n</code></pre></p> <p>Output should be similar to: <pre><code>etc/pam.d/common-password:password [success=1 default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt\n</code></pre> Verify that the line(s) include use_authtok</p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.3-Pluggable-Authentication-Modules/5.3.3-Configure-PAM-Arguments/5.3.3.4%20-Configure-pam_unix-module/5.3.3.4.4-Ensure-pam_unix-includes-use_authtok/#remediation","title":"Remediation","text":"<p>Run the following command: <pre><code># awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix\\.so/) print FILENAME}' /usr/share/pam-configs/*\n</code></pre></p> <p>Edit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection: Note: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection Example File: <pre><code>Name: Unix authentication\nDefault: yes\nPriority: 256\nAuth-Type: Primary # &lt;- Start of \"Auth\" section\nAuth:\n[success=end default=ignore] pam_unix.so try_first_pass\nAuth-Initial:\n[success=end default=ignore] pam_unix.so\nAccount-Type: Primary # &lt;- Start of \"Account\" section\nAccount:\n[success=end new_authtok_reqd=done default=ignore] pam_unix.so\nAccount-Initial:\n[success=end new_authtok_reqd=done default=ignore] pam_unix.so\nSession-Type: Additional # &lt;- Start of \"Session\" section\nSession:\nrequired pam_unix.so\nSession-Initial:\nrequired pam_unix.so\nPassword-Type: Primary # &lt;- Start of \"Password\" section\nPassword:\n[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # &lt;- **ensure line includes use_authtok**\nPassword-Initial:\n[success=end default=ignore] pam_unix.so obscure yescrypt # &lt;- **Password-Initial: subsection does not include use_authtok\n</code></pre></p> <p>Run the following command to update the files in the /etc/pam.d/ directory: <pre><code># pam-auth-update --enable &lt;MODIFIED_PROFILE_NAME&gt;\n</code></pre></p> <p>Example: <pre><code># pam-auth-update --enable unix\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","Pluggable Authentication Modules","Confgure PAM Arguments","Configure pam_unix module","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.1-Ensure-password-expiration-is-configured/","title":"5.4.1.1 Ensure password expiration is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","T1110.004"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.1-Ensure-password-expiration-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify PASS_MAX_DAYS is set to 365 days or less and conforms to local site policy: <pre><code># grep -Pi -- '^\\h*PASS_MAX_DAYS\\h+\\d+\\b' /etc/login.defs\n</code></pre></p> <p>Example output: <pre><code>PASS_MAX_DAYS 365\n</code></pre></p> <p>Run the following command to verify all /etc/shadow passwords PASS_MAX_DAYS: - is greater than 0 days - is less than or equal to 365 days - conforms to local site policy <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($5 &gt; 365 || $5 &lt; 1)print \"User: \" $1 \"PASS_MAX_DAYS: \" $5}' /etc/shadow\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","T1110.004"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.1-Ensure-password-expiration-is-configured/#remediation","title":"Remediation","text":"<p>Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : <pre><code>PASS_MA_DAYS 365\n</code></pre></p> <p>Modify user parameters for all users with a password set to match: <pre><code># chage --maxdays 365 &lt;user&gt;\n</code></pre></p> <p>Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy: Example: <pre><code>PASS_MAX_DAYS 365\n</code></pre></p> <p>Run the following command to modify user parameters for all users with a password set to a maximum age no greater than 365 or less than 1 that follows local site policy: <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($5 &gt; 365 || $5 &lt; 1)system (\"chage --maxdays 365 \" $1)}' /etc/shadow\n</code></pre></p> <p>Warning: If a password has been set at system install or kickstart, the last change date field is not set, In this case, setting PASS_MAX_DAYS will immediately expire the password. One possible solution is to populate the last change date field through a command like: chage -d \"$(date +%Y-%m-%d)\" root</p> <p>Default Value: PASS_MAX_DAYS 99999</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","T1110.004"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.2-Ensure-minimum-password-days-is-configured/","title":"5.4.1.2 Ensure minimum password days is configured","text":"","tags":["Level 2","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.004","TA0006","MA1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.2-Ensure-minimum-password-days-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that PASS_MIN_DAYS is set to a value greater than 0and follows local site policy: <pre><code># grep -Pi -- '^\\h*PASS_MIN_DAYS\\h+\\d+\\b' /etc/login.defs\n</code></pre> Example output: <pre><code>PASS_MIN_DAYS 1\n</code></pre></p> <p>Run the following command to verify all passwords have a PASS_MIN_DAYS greater than 0: <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($4 &lt; 1)print \"User: \" $1 \" PASS_MIN_DAYS: \"$4}' /etc/shadow\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.004","TA0006","MA1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.2-Ensure-minimum-password-days-is-configured/#remediation","title":"Remediation","text":"<p>Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows local site policy: Example: <pre><code>PASS_MIN_DAYS 1\n</code></pre></p> <p>Run the following command to modify user parameters for all users with a password set to a minimum days greater than zero that follows local site policy: <pre><code># chage --mindays &lt;N&gt; &lt;user&gt;\n</code></pre></p> <p>Example <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($4 &lt; 1)system (\"chage --mindays 1 \" $1)}' /etc/shadow\n</code></pre></p> <p>Default Value: PASS_MIN_DAYS 0</p>","tags":["Level 2","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.004","TA0006","MA1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.3-Ensure-password-expiration-warning-days-is-configured/","title":"5.4.1.3 Ensure password expiration warning days is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","4.1 Establish and Maintain a Secure Configuration Process","T1078","TA0006","M1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.3-Ensure-password-expiration-warning-days-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify PASS_WARN_AGE is 7 or more and follows local site policy: <pre><code># grep -Pi -- '^\\h*PASS_WARN_AGE\\h+\\d+\\b' /etc/login.defs\n</code></pre></p> <p>Example output: <pre><code>PASS_WARN_AGE 7\n</code></pre></p> <p>Run the following command to verify all passwords have a PASS_WARN_AGE of 7 or more: <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($6 &lt; 7)print \"User: \" $1 \" PASS_WARN_AGE: \"$6}' /etc/shadow\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","4.1 Establish and Maintain a Secure Configuration Process","T1078","TA0006","M1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.3-Ensure-password-expiration-warning-days-is-configured/#remediation","title":"Remediation","text":"<p>Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows local site policy: Example: <pre><code>PASS_WARN_AGE 7\n</code></pre></p> <p>Run the following command to modify user parameters for all users with a password set to a minimum warning to 7 or more days that follows local site policy: <pre><code># chage --warndays &lt;N&gt; &lt;user&gt;\n</code></pre></p> <p>Example: <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($6 &lt; 7)system (\"chage --warndays 7 \" $1)}' /etc/shadow\n</code></pre></p> <p>Default Value: PASS_WARN_AGE 7</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","4.1 Establish and Maintain a Secure Configuration Process","T1078","TA0006","M1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.4-Ensure-strong-password-hashing-algorithm-is-configured/","title":"5.4.1.4 Ensure strong password hashing algorithm is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.4-Ensure-strong-password-hashing-algorithm-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify the hashing algorithm is sha512 or yescrypt in /etc/login.defs: <pre><code># grep -Pi -- '^\\h*ENCRYPT_METHOD\\h+(SHA512|yescrypt)\\b' /etc/login.defs\n</code></pre></p> <p>Example output: <pre><code>ENCRYPT_METHOD SHA512\n- OR -\nENCRYPT_METHOD YESCRYPT\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.4-Ensure-strong-password-hashing-algorithm-is-configured/#remediation","title":"Remediation","text":"<p>Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT: Example: <pre><code>ENCRYPT_METHOD &lt;HASHING_ALGORITHM&gt;\n</code></pre></p> <p>Example: <pre><code>ENCRYPT_METHOD YESCRYPT\n</code></pre></p> <p>Note: - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt. - If it is determined that the password algorithm being used is not sha512 or yescrypt, once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm. - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration</p> <p>Default Value: ENCRYPT_METHOD SHA512</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","T1110","T1110.002","TA0006","M1041"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.5-Ensure-inactive-password-lock-is-configured/","title":"5.4.1.5 Ensure inactive password lock is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.002","T1078.003","TA0001","M1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.5-Ensure-inactive-password-lock-is-configured/#audit","title":"Audit","text":"<p>Run the following command and verify INACTIVE conforms to site policy (no more than 45 days): <pre><code># useradd -D | grep INACTIVE\nINACTIVE=45\n</code></pre></p> <p>Verify all users with a password have Password inactive no more than 45 days after password expires Run the following command and Review list of users and INACTIVE to verify that all users INACTIVE conforms to site policy (no more than 45 days): <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($7 &gt; 45 || $7 &lt; 0)print \"User: \" $1 \" INACTIVE:\" $7}' /etc/shadow\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.002","T1078.003","TA0001","M1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.5-Ensure-inactive-password-lock-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to set the default password inactivity period to 45 days or less that meets local site policy: <pre><code># useradd -D -f &lt;N&gt;\n</code></pre></p> <p>Example: <pre><code># useradd -D -f 45\n</code></pre></p> <p>Run the following command to modify user parameters for all users with a password set to a inactive age of 45 days or less that follows local site policy: <pre><code># chage --inactive &lt;N&gt; &lt;user&gt;\n</code></pre></p> <p>Example: <pre><code># awk -F: '($2~/^\\$.+\\$/) {if($7 &gt; 45 || $7 &lt; 0)system (\"chage --inactive 45\" $1)}' /etc/shadow\n</code></pre></p> <p>Default Value: INACTIVE=-1</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.002","T1078.003","TA0001","M1027"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.6-Ensure-all-users-last-password-change-date-is-in-the-past/","title":"5.4.1.6 Ensure all users last password change date is in the past","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","T1110.004"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.6-Ensure-all-users-last-password-change-date-is-in-the-past/#audit","title":"Audit","text":"<p>Run the following script and verify nothing is returned: <pre><code>#!/usr/bin/env bash\n{\nwhile IFS= read -r l_user; do\nl_change=$(date -d \"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2 | grep -v 'never$')\" +%s)\nif [[ \"$l_change\" -gt \"$(date +%s)\" ]]; then\necho \"User: \\\"$l_user\\\" last password change was \\\"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2)\\\"\"\nfi\ndone &lt; &lt;(awk -F: '$2~/^\\$.+\\$/{print $1}' /etc/shadow)\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","T1110.004"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.1-Configure-shadow-password-suite-parameters/5.4.1.6-Ensure-all-users-last-password-change-date-is-in-the-past/#remediation","title":"Remediation","text":"<p>Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure Shadow Password Suite Parameters","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.002","T1078.003","T1078.004","T1110","T1110.001","T1110.002","T1110.003","T1110.004"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.1-Ensure-root-is-the-only-UID-0-account/","title":"5.4.2.1 Ensure root is the only UID 0 account","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","T1548","TA0001","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.1-Ensure-root-is-the-only-UID-0-account/#audit","title":"Audit","text":"<p>Run the following command and verify that only \"root\" is returned: <pre><code># awk -F: '($3 == 0) { print $1 }' /etc/passwd\nroot\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","T1548","TA0001","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.1-Ensure-root-is-the-only-UID-0-account/#remediation","title":"Remediation","text":"<p>Run the following command to change the root account UID to 0: <pre><code># usermod -u 0 root\n</code></pre> Modify any users other than root with UID 0 and assign them a new UID.</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","T1548","TA0001","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.2-Ensure-root-is-the-only-GID-0-account/","title":"5.4.2.2 Ensure root is the only GID 0 account","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.2-Ensure-root-is-the-only-GID-0-account/#audit","title":"Audit","text":"<p>Run the following command to verify the root user's primary GID is 0, and no other user's have GID 0 as their primary GID: <pre><code># awk -F: '($1 !~ /^(sync|shutdown|halt|operator)/ &amp;&amp; $4==\"0\") {print $1\":\"$4}' /etc/passwd\nroot:0\n</code></pre> Note: User's: sync, shutdown, halt, and operator are excluded from the check for other user's with GID 0</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.2-Ensure-root-is-the-only-GID-0-account/#remediation","title":"Remediation","text":"<p>Run the following command to set the root user's GID to 0: <pre><code># usermod -g 0 root\n</code></pre></p> <p>Run the following command to set the root group's GID to 0: <pre><code># groupmod -g 0 root\n</code></pre> Remove any users other than the root user with GID 0 or assign them a new GID if appropriate.</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.3-Ensure-group-root-is-the-only-GID-0-group/","title":"5.4.2.3 Ensure group root is the only GID 0 group","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.3-Ensure-group-root-is-the-only-GID-0-group/#audit","title":"Audit","text":"<p>Run the following command to verify no group other than root is assigned GID 0: <pre><code># awk -F: '$3==\"0\"{print $1\":\"$3}' /etc/group\nroot:0\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.3-Ensure-group-root-is-the-only-GID-0-group/#remediation","title":"Remediation","text":"<p>Run the following command to set the root group's GID to 0: <pre><code># groupmod -g 0 root\n</code></pre></p> <p>Remove any groups other than the root group with GID 0 or assign them a new GID if appropriate.</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1548","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.4-Ensure-root-account-access-is-controlled/","title":"5.4.2.4 Ensure root account access is controlled","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.4-Ensure-root-account-access-is-controlled/#audit","title":"Audit","text":"<p>Run the following command to verify that either the root user's password is set or the root user's account is locked: <pre><code># passwd -S root | awk '$2 ~ /^(P|L)/ {print \"User: \\\"\" $1 \"\\\" Password is status: \" $2}'\n</code></pre></p> <p>Verify the output is either: <pre><code>User: \"root\" Password is status: P\n- OR -\nUser: \"root\" Password is status: L\n</code></pre> Note: - P - Password is set - L - Password is locked</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.4-Ensure-root-account-access-is-controlled/#remediation","title":"Remediation","text":"<p>Run the following command to set a password for the root user: <pre><code># passwd root\n</code></pre></p> <p>- OR - Run the following command to lock the root user account: <pre><code># usermod -L root\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.5-Ensure-root-path-integrity/","title":"5.4.2.4 Ensure root account access is controlled","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","T1204","T1204.002","TA0006","M1022"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.5-Ensure-root-path-integrity/#audit","title":"Audit","text":"<p>Run the following script to verify root's path does not include: - Locations that are not directories - An empty directory (::) - A trailing (:) - Current working directory (.) - Non root owned directories - Directories that less restrictive than mode 0755</p> <pre><code>#!/usr/bin/env bash\n{\nl_output2=\"\"\nl_pmask=\"0022\"\nl_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_pmask )) )\"\nl_root_path=\"$(sudo -Hiu root env | grep '^PATH' | cut -d= -f2)\"\nunset a_path_loc &amp;&amp; IFS=\":\" read -ra a_path_loc &lt;&lt;&lt; \"$l_root_path\"\ngrep -q \"::\" &lt;&lt;&lt; \"$l_root_path\" &amp;&amp; l_output2=\"$l_output2\\n - root's path contains a empty directory (::)\"\ngrep -Pq \":\\h*$\" &lt;&lt;&lt; \"$l_root_path\" &amp;&amp; l_output2=\"$l_output2\\n - root's path contains a trailing (:)\"\ngrep -Pq '(\\h+|:)\\.(:|\\h*$)' &lt;&lt;&lt; \"$l_root_path\" &amp;&amp; l_output2=\"$l_output2\\n - root's path contains current working directory (.)\"\nwhile read -r l_path; do\nif [ -d \"$l_path\" ]; then\nwhile read -r l_fmode l_fown; do\n[ \"$l_fown\" != \"root\" ] &amp;&amp; l_output2=\"$l_output2\\n - Directory: \\\"$l_path\\\" is owned by: \\\"$l_fown\\\" should be owned by \\\"root\\\"\"\n[ $(( $l_fmode &amp; $l_pmask )) -gt 0 ] &amp;&amp; l_output2=\"$l_output2\\n - Directory: \\\"$l_path\\\" is mode: \\\"$l_fmode\\\" and should be mode: \\\"$l_maxperm\\\" or more restrictive\"\ndone &lt;&lt;&lt; \"$(stat -Lc '%#a %U' \"$l_path\")\"\nelse\nl_output2=\"$l_output2\\n - \\\"$l_path\\\" is not a directory\"\nfi\ndone &lt;&lt;&lt; \"$(printf \"%s\\n\" \"${a_path_loc[@]}\")\"\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n *** PASS ***\\n - Root's path is correctly configured\\n\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :\\n$l_output2\\n\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","T1204","T1204.002","TA0006","M1022"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.5-Ensure-root-path-integrity/#remediation","title":"Remediation","text":"<p>Correct or justify any: - Locations that are not directories - Empty directory (::) - Trailing (:) - Current working directory (.) - Non root owned directories - Directories that less restrictive than mode 0755</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","T1204","T1204.002","TA0006","M1022"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.6-Ensure-root-user-umask-is-configured/","title":"5.4.2.6 Ensure root user umask is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1083","TA0007"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.6-Ensure-root-user-umask-is-configured/#audit","title":"Audit","text":"<p>Run the following to verify the root user umask is set to enforce a newly created directories' permissions to be 750 (drwxr-x---), and a newly created file's permissions be 640 (rw-r-----), or more restrictive: <pre><code># grep -Psi -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\b)))' /root/.bash_profile /root/.bashrc\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1083","TA0007"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.6-Ensure-root-user-umask-is-configured/#remediation","title":"Remediation","text":"<p>Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.</p> <p>Default Value: System default umask</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1083","TA0007"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.7-Ensure-system-accounts-do-not-have-a-valid-login-shell/","title":"5.4.2.7 Ensure system accounts do not have a valid login shell","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","T1078.001","T1078.003","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.7-Ensure-system-accounts-do-not-have-a-valid-login-shell/#audit","title":"Audit","text":"<p>Run the following command to verify system accounts, except for root, halt, sync, shutdown or nfsnobody, do not have a valid login shell: <pre><code>#!/usr/bin/env bash\n{\nl_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\nawk -v pat=\"$l_valid_shells\" -F:'($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3&lt;'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) &amp;&amp; $(NF) ~ pat)\n{print \"Service account: \\\"\" $1 \"\\\" has a valid shell: \" $7}' /etc/passwd\n}\n</code></pre> Nothing should be returned.</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","T1078.001","T1078.003","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.7-Ensure-system-accounts-do-not-have-a-valid-login-shell/#remediation","title":"Remediation","text":"<p>Run the following command to set the shell for any service accounts returned by the audit to nologin: <pre><code># usermod -s $(command -v nologin) &lt;user&gt;\n</code></pre></p> <p>Example script: <pre><code>#!/usr/bin/env bash\n{\nl_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\nawk -v pat=\"$l_valid_shells\" -F:'($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ &amp;&amp; ($3&lt;'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) &amp;&amp; $(NF) ~ pat)\n{system (\"usermod -s '\"$(command -v nologin)\"' \" $1)}' /etc/passwd\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","T1078.001","T1078.003","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.8-Ensure-accounts-without-a-valid-login-shell-are-locked/","title":"5.4.2.8 Ensure accounts without a valid login shell are locked","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","T1078.001","T1078.003","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.8-Ensure-accounts-without-a-valid-login-shell-are-locked/#audit","title":"Audit","text":"<p>Run the following script to verify all non-root accounts without a valid login shell are locked. <pre><code>#!/usr/bin/env bash\n{\nl_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\nwhile IFS= read -r l_user; do\npasswd -S \"$l_user\" | awk '$2 !~ /^L/ {system (\"usermod -L \" $1)}'\ndone &lt; &lt;(awk -v pat=\"$l_valid_shells\" -F: '($1 != \"root\" &amp;&amp; $(NF) !~ pat)\n{print $1}' /etc/passwd)\n}\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","T1078.001","T1078.003","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.2-Configure-root-and-system-accounts-and-environment/5.4.2.8-Ensure-accounts-without-a-valid-login-shell-are-locked/#remediation","title":"Remediation","text":"<p>Run the following command to lock any non-root accounts without a valid login shell returned by the audit: <pre><code># usermod -L &lt;user&gt;\n</code></pre></p> <p>Example script: <pre><code>#!/usr/bin/env bash\n{\nl_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\nwhile IFS= read -r l_user; do\npasswd -S \"$l_user\" | awk '$2 !~ /^L/ {system (\"usermod -L \" $1)}'\ndone &lt; &lt;(awk -v pat=\"$l_valid_shells\" -F: '($1 != \"root\" &amp;&amp; $(NF) !~ pat)\n{print $1}' /etc/passwd)\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure root and system accounts and environment","Automated","3.3 Configure Data Access Control Lists","IG1","IG2","IG3","T1078","T1078.001","T1078.003","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.1-Ensure-nologin-is-not-listed-in-etc-shells/","title":"5.4.3.1 Ensure nologin is not listed in /etc/shells","text":"","tags":["Level 2","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.1-Ensure-nologin-is-not-listed-in-etc-shells/#audit","title":"Audit","text":"<p>Run the following command to verify that nologin is not listed in the /etc/shells file: <pre><code># grep -Ps '^\\h*([^#\\n\\r]+)?\\/nologin\\b' /etc/shells\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.1-Ensure-nologin-is-not-listed-in-etc-shells/#remediation","title":"Remediation","text":"<p>Edit /etc/shells and remove any lines that include nologin</p>","tags":["Level 2","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.2-Ensure-default-user-shell-timeout-is-configured/","title":"5.4.3.2 Ensure default user shell timeout is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1078","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.2-Ensure-default-user-shell-timeout-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify that TMOUT is configured to: include a timeout of no more than 900 seconds, to be readonly, to be exported, and is not being changed to a longer timeout. <pre><code>#!/usr/bin/env bash\n{\noutput1=\"\" output2=\"\"\n[ -f /etc/bashrc ] &amp;&amp; BRC=\"/etc/bashrc\"\nfor f in \"$BRC\" /etc/profile /etc/profile.d/*.sh ; do\ngrep -Pq '^\\s*([^#]+\\s+)?TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\b' \"$f\" &amp;&amp; grep -Pq '^\\s*([^#]+;\\s*)?readonly\\s+TMOUT(\\s+|\\s*;|\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\b' \"$f\" &amp;&amp; grep -Pq '^\\s*([^#]+;\\s*)?export\\s+TMOUT(\\s+|\\s*;|\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-\n9]|[1-9]))\\b' \"$f\" &amp;&amp; output1=\"$f\"\ndone\ngrep -Pq '^\\s*([^#]+\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\d{3,})\\b' /etc/profile /etc/profile.d/*.sh \"$BRC\" &amp;&amp; output2=$(grep -Ps\n'^\\s*([^#]+\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\d{3,})\\b' /etc/profile /etc/profile.d/*.sh $BRC)\nif [ -n \"$output1\" ] &amp;&amp; [ -z \"$output2\" ]; then\necho -e \"\\nPASSED\\n\\nTMOUT is configured in: \\\"$output1\\\"\\n\"\nelse\n[ -z \"$output1\" ] &amp;&amp; echo -e \"\\nFAILED\\n\\nTMOUT is not configured\\n\"\n[ -n \"$output2\" ] &amp;&amp; echo -e \"\\nFAILED\\n\\nTMOUT is incorrectly configured in: \\\"$output2\\\"\\n\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1078","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.2-Ensure-default-user-shell-timeout-is-configured/#remediation","title":"Remediation","text":"<p>Review /etc/bash.bashrc, /etc/profile, and all files ending in .sh* in the /etc/profile.d/ directory and remove or edit all TMOUT=n entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0. Configure TMOUT in one** of the following files: - A file in the /etc/profile.d/ directory ending in .sh - /etc/profile - /etc/bash.bashrc</p> <p>TMOUT configuration examples:</p> <ul> <li> <p>As multiple lines: <pre><code>TMOUT=900\nreadonly TMOUT\nexport TMOUT\n</code></pre></p> </li> <li> <p>As a single line: <pre><code>readonly TMOUT=900 ; export TMOUT\n</code></pre></p> </li> </ul>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated","IG1","IG2","IG3","4.3 Configure Automatic Session Locking on Enterprise Assets","T1078","TA0005","M1026"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.3-Ensure-default-user-umask-is-configured/","title":"5.4.3.3 Ensure default user umask is configured","text":"","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T083","TA0007"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.3-Ensure-default-user-umask-is-configured/#audit","title":"Audit","text":"<p>Run the following to verify the default user umask is set to 027(octal) or u=rwx,g=rx,o= (Symbolic) to enforce newly created directories' permissions to be 750 (drwxr-x---), and newly created file's permissions be 640 (rw-r-----), or more restrictive: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\"\nfile_umask_chk()\n{\nif grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \"$l_file\"; then\nl_output=\"$l_output\\n - umask is set correctly in \\\"$l_file\\\"\"\nelif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\b)))' \"$l_file\"; then\nl_output2=\"$l_output2\\n - umask is incorrectly set in \\\"$l_file\\\"\"\nfi\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nfile_umask_chk\ndone &lt; &lt;(find /etc/profile.d/ -type f -name '*.sh' -print0)\n[ -z \"$l_output\" ] &amp;&amp; l_file=\"/etc/profile\" &amp;&amp; file_umask_chk\n[ -z \"$l_output\" ] &amp;&amp; l_file=\"/etc/bashrc\" &amp;&amp; file_umask_chk\n[ -z \"$l_output\" ] &amp;&amp; l_file=\"/etc/bash.bashrc\" &amp;&amp; file_umask_chk\n[ -z \"$l_output\" ] &amp;&amp; l_file=\"/etc/pam.d/postlogin\"\nif [ -z \"$l_output\" ]; then\nif grep -Psiq --\n'^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(0?[0-7][2-7]7)\\b' \"$l_file\"; then\nl_output1=\"$l_output1\\n - umask is set correctly in \\\"$l_file\\\"\"\nelif grep -Psiq\n'^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \"$l_file\"; then\nl_output2=\"$l_output2\\n - umask is incorrectly set in \\\"$l_file\\\"\"\nfi\nfi\n[ -z \"$l_output\" ] &amp;&amp; l_file=\"/etc/login.defs\" &amp;&amp; file_umask_chk\n[ -z \"$l_output\" ] &amp;&amp; l_file=\"/etc/default/login\" &amp;&amp; file_umask_chk\n[[ -z \"$l_output\" &amp;&amp; -z \"$l_output2\" ]] &amp;&amp; l_output2=\"$l_output2\\n - umask is not set\"\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - * Correctly configured * :\\n$l_output\\n\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :\\n$l_output2\"\n[ -n \"$l_output\" ] &amp;&amp; echo -e \"\\n- * Correctly configured * :\\n$l_output\\n\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T083","TA0007"]},{"location":"5-Access-Control/5.4-User-Accounts-and-Environment/5.4.3-Configure-user-default-environment/5.4.3.3-Ensure-default-user-umask-is-configured/#remediation","title":"Remediation","text":"<p>Run the following script and perform the instructions in the output to set the default umask to 027 or more restrictive: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\" l_out=\"\"\nfile_umask_chk()\n{\nif grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-\n7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \"$l_file\"; then\nl_out=\"$l_out\\n - umask is set correctly in \\\"$l_file\\\"\"\nelif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-\n7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-\n6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx\n]{1,3},)?o=[wrx]{1,3}\\b)))' \"$l_file\"; then\nl_output2=\"$l_output2\\n\n- \\\"$l_file\\\"\"\nfi\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nfile_umask_chk\ndone &lt; &lt;(find /etc/profile.d/ -type f -name '*.sh' -print0)\n[ -n \"$l_out\" ] &amp;&amp; l_output=\"$l_out\"\nl_file=\"/etc/profile\" &amp;&amp; file_umask_chk\nl_file=\"/etc/bashrc\" &amp;&amp; file_umask_chk\nl_file=\"/etc/bash.bashrc\" &amp;&amp; file_umask_chk\nl_file=\"/etc/pam.d/postlogin\"\nif grep -Psiq\n'^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-\n7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \"$l_file\"; then\nl_output2=\"$l_output2\\n\n- \\\"$l_file\\\"\"\nfi\nl_file=\"/etc/login.defs\" &amp;&amp; file_umask_chk\nl_file=\"/etc/default/login\" &amp;&amp; file_umask_chk\nif [ -z \"$l_output2\" ]; then\necho -e \" - No files contain a UMASK that is not restrictive enough\\n\nNo UMASK updates required to existing files\"\nelse\necho -e \"\\n - UMASK is not restrictive enough in the following\nfile(s):$l_output2\\n\\n- Remediation Procedure:\\n - Update these files and\ncomment out the UMASK line\\n\nor update umask to be \\\"0027\\\" or more\nrestrictive\"\nfi\nif [ -n \"$l_output\" ]; then\necho -e \"$l_output\"\nelse\necho -e \" - Configure UMASK in a file in the \\\"/etc/profile.d/\\\"\ndirectory ending in \\\".sh\\\"\\n\\n\nExample Command (Hash to represent being\nrun at a root prompt):\\n\\n# printf '%s\\\\\\n' \\\"umask 027\\\" &gt;\n/etc/profile.d/50-systemwide_umask.sh\\n\"\nfi\n}\n</code></pre></p> <p>Notes: - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked - If the pam_umask.so module is going to be used to set umask, ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information</p> <p>Default Value: UMASK 022</p>","tags":["Level 1","Workstation","Server","Access Control","User Accounts and Environment","Configure user default environment","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T083","TA0007"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.1-Ensure-journald-service-is-enabled-and-active/","title":"6.1.1.1 Ensure journald service is enabled and active","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.001","TA0005","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.1-Ensure-journald-service-is-enabled-and-active/#audit","title":"Audit","text":"<p>Run the following command to verify systemd-journald is enabled: <pre><code># systemctl is-enabled systemd-journald.service\nstatic\n</code></pre></p> <p>Note: By default the systemd-journald service does not have an [Install] section and thus cannot be enabled / disabled. It is meant to be referenced as Requires or Wants by other unit files. As such, if the status of systemd-journald is not static, investigate why</p> <p>Run the following command to verify systemd-journald is active: <pre><code># systemctl is-active systemd-journald.service\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.001","TA0005","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.1-Ensure-journald-service-is-enabled-and-active/#remediation","title":"Remediation","text":"<p>Run the following commands to unmask and start systemd-journald.service <pre><code># systemctl unmask systemd-journald.service\n# systemctl start systemd-journald.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.001","TA0005","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.2-Ensure-journald-log-file-access-is-configured/","title":"6.1.1.2 Ensure journald log file access is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.2-Ensure-journald-log-file-access-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify: - systemd-journald logfiles are mode 0640 or more restrictive - Directories /run/ and /var/lib/systemd/ are mode 0755 or more restrictive - All other configured directories are mode 2755, 0750, or more restrictive <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=()\nl_systemd_config_file=\"/etc/tmpfiles.d/systemd.conf\"\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nf_file_chk()\n{\nl_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_perm_mask )) )\"\nif [ $(( $l_mode &amp; $l_perm_mask )) -le 0 ] || [[ \"$l_type\" = \"Directory\" &amp;&amp; \"$l_mode\" =~ 275(0|5) ]]; then\na_out+=(\" - $l_type \\\"$l_logfile\\\" access is:\" \\\"mode: \\\"$l_mode\\\", owned by: \\\"$l_user\\\", and group owned by: \\\"$l_group\\\"\")\nelse\na_out2+=(\" - $l_type \\\"$l_logfile\\\" access is:\" \\\"mode: \\\"$l_mode\\\", owned by: \\\"$l_user\\\", and group owned by: \\\"$l_group\\\"\" \\\"should be mode: \\\"$l_maxperm\\\" or more restrictive\")\nfi\n}\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\" a_out=() a_out2=()\nl_logfile_perms_line=\"$(awk '($1~/^(f|d)$/ &amp;&amp; $2~/\\/\\S+/ &amp;&amp; $3~/[0-9]{3,}/){print $2 \":\" $3 \":\" $4 \":\" $5}' \"$l_file\")\"\nwhile IFS=: read -r l_logfile l_mode l_user l_group; do\nif [ -d \"$l_logfile\" ]; then\nl_perm_mask=\"0027\" l_type=\"Directory\"\ngrep -Psq '^(\\/run|\\/var\\/lib\\/systemd)\\b' &lt;&lt;&lt; \"$l_logfile\" &amp;&amp; l_perm_mask=\"0022\"\nelse\nl_perm_mask=\"0137\" l_type=\"File\"\nfi\ngrep -Psq '^(\\/run|\\/var\\/lib\\/systemd)\\b' &lt;&lt;&lt; \"$l_logfile\" &amp;&amp; l_perm_mask=\"0022\"\nf_file_chk\ndone &lt;&lt;&lt; \"$l_logfile_perms_line\"\n[ \"${#a_out[@]}\" -gt \"0\" ] &amp;&amp; a_output+=(\" - File: \\\"$l_file\\\" sets:\" \"${a_out[@]}\")\n[ \"${#a_out2[@]}\" -gt \"0\" ] &amp;&amp; a_output2+=(\" - File: \\\"$l_file\\\" sets:\" \"${a_out2[@]}\")\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** REVIEW **\" \\\" - Review file access to ensure they are set IAW site policy:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.2-Ensure-journald-log-file-access-is-configured/#remediation","title":"Remediation","text":"<p>If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Recommended mode for logfiles is 0640 or more restrictive.</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.3-Ensure-journald-log-file-rotation-is-configured/","title":"6.1.1.3 Ensure journald log file rotation is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.3-Ensure-journald-log-file-rotation-is-configured/#audit","title":"Audit","text":"<p>Review the systemd-journald configuration. Verify logs are rotated according to site policy. The specific parameters for log rotation are: Run the following script and review the output to ensure logs are rotated according to site policy: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"systemd/journald.conf\"\na_parameters=(\"SystemMaxUse=^.+$\" \"SystemKeepFree=^.+$\" \"RuntimeMaxUse=^.+$\" \"RuntimeKeepFree=^.+$\" \"MaxFileSec=^.+$\")\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_output2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: ***\" \"\\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure\")\nfi\n}\nfor l_input_parameter in \"${a_parameters[@]}\"; do\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt;&lt;&lt; \"$l_input_parameter\"\ndone\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.3-Ensure-journald-log-file-rotation-is-configured/#remediation","title":"Remediation","text":"<p>Edit /etc/systemd/journald.conf or a file ending in .conf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters. Example Configuration: <pre><code>[Journal]\nSystemMaxUse=1G\nSystemKeepFree=500M\nRuntimeMaxUse=200M\nRuntimeKeepFree=50M\nMaxFileSec=1month\n</code></pre></p> <p>Example script to create systemd drop-in configuration file: <pre><code>{\na_settings=(\"SystemMaxUse=1G\" \"SystemKeepFree=500M\" \"RuntimeMaxUse=200M\" \"RuntimeKeepFree=50M\" \"MaxFileSec=1month\")\n[ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/\nif grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-journald.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nelse\nprintf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nfi\n}\n</code></pre></p> <p>Note: - If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten - Logfile size and configuration to move logfiles to a remote log server should be accounted for when configuring these settings</p> <p>Run to following command to update the parameters in the service: <pre><code># systemctl reload-or-restart systemd-journald\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.4-Ensure-only-one-logging-system-is-in-use/","title":"6.1.1.4 Ensure only one logging system is in use","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Automated"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.4-Ensure-only-one-logging-system-is-in-use/#audit","title":"Audit","text":"<p>Run the following script to ensure only one logging system is in use: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\" # Check the status of rsyslog and journald\nif systemctl is-active --quiet rsyslog; then\nl_output=\"$l_output\\n - rsyslog is in use\\n- follow the recommendations in Configure rsyslog subsection only\"\nelif systemctl is-active --quiet systemd-journald; then\nl_output=\"$l_output\\n - journald is in use\\n- follow the recommendations in Configure journald subsection only\"\nelse\necho -e \u201cunable to determine system logging\u201d\nl_output2=\"$l_output2\\n - unable to determine system logging\\n-Configure only ONE system logging: rsyslog OR journald\"\nfi\nif [ -z \"$l_output2\" ]; then # Provide audit results\necho -e \"\\n- Audit Result:\\n ** PASS **\\n$l_output\\n\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - Reason(s) for audit failure:\\n$l_output2\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Automated"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.1-Configure-systemd-journald-service/6.1.1.4-Ensure-only-one-logging-system-is-in-use/#remediation","title":"Remediation","text":"<ol> <li>Determine whether to use journald - OR - rsyslog depending on site needs</li> <li>Configure systemd-jounald.service</li> <li>Configure only ONE either journald - OR - rsyslog and complete the recommendations in that subsection</li> <li>Return to this recommendation to ensure only one logging system is in use</li> </ol>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure systemd-journald service","Automated"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.2-Ensure-journald-ForwardToSyslog-is-disabled/","title":"6.1.2.2 Ensure journald ForwardToSyslog is disabled","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.2-Ensure-journald-ForwardToSyslog-is-disabled/#audit","title":"Audit","text":"<p>- IF - journald is the method for capturing logs Run the following script to verify ForwardToSyslog is set to no: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"systemd/journald.conf\"\na_parameters=(\"ForwardToSyslog=no\")\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\")\nelse\na_output2+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\" \\\"Should be set to: \\\"$l_value_out\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_output2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure ***\")\nfi\n}\nfor l_input_parameter in \"${a_parameters[@]}\"; do\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt;&lt;&lt; \"$l_input_parameter\"\ndone\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.2-Ensure-journald-ForwardToSyslog-is-disabled/#remediation","title":"Remediation","text":"<p>- IF - rsyslog is the preferred method for capturing logs, this section and Recommendation should be skipped and the \"Configure rsyslog\" section followed. - IF - journald is the preferred method for capturing logs: Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in .conf: <pre><code>ForwardToSyslog=no\n</code></pre></p> <p>Example script to create systemd drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_settings=(\"ForwardToSyslog=no\")\n[ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/\nif grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-journald.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nelse\nprintf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nfi\n}\n</code></pre></p> <p>Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten Run to following command to update the parameters in the service: <pre><code># systemctl reload-or-restart systemd-journald\n</code></pre></p> <p>Default Value: ForwardToSyslog=no</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.3-Ensure-journald-Compress-is-configured/","title":"6.1.2.3 Ensure journald Compress is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.001","TA0040","M1053"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.3-Ensure-journald-Compress-is-configured/#audit","title":"Audit","text":"<p>- IF - journald is the method for capturing logs Run the following script to verify Compress is set to yes: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"systemd/journald.conf\"\na_parameters=(\"Compress=yes\")\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\")\nelse\na_output2+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\" \\\"Should be set to: \\\"$l_value_out\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_output2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure ***\")\nfi\n}\nfor l_input_parameter in \"${a_parameters[@]}\"; do\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt;&lt;&lt; \"$l_input_parameter\"\ndone\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.001","TA0040","M1053"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.3-Ensure-journald-Compress-is-configured/#remediation","title":"Remediation","text":"<p>IF - rsyslog is the preferred method for capturing logs, this section and Recommendation should be skipped and the \"Configure rsyslog\" section followed. - IF - journald is the preferred method for capturing logs: Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in .conf: <pre><code>Compress=yes\n</code></pre></p> <p>Example script to create systemd drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_settings=(\"Compress=yes\")\n[ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/\nif grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-journald.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nelse\nprintf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nfi\n}\n</code></pre></p> <p>Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten Run to following command to update the parameters in the service: <pre><code># systemctl reload-or-restart systemd-journald\n</code></pre></p> <p>Default Value: Compress=yes</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.001","TA0040","M1053"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.4-Ensure-journald-Storage-is-configured/","title":"6.1.2.4 Ensure journald Storage is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","T1070","T1070.002","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.4-Ensure-journald-Storage-is-configured/#audit","title":"Audit","text":"<p>- IF - journald is the method for capturing logs Run the following script to verify Storage is set to persistent: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"systemd/journald.conf\"\na_parameters=(\"Storage=persistent\")\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\")\nelse\na_output2+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\" \\\"Should be set to: \\\"$l_value_out\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_output2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure ***\")\nfi\n}\nfor l_input_parameter in \"${a_parameters[@]}\"; do\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt;&lt;&lt; \"$l_input_parameter\"\ndone\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","T1070","T1070.002","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.4-Ensure-journald-Storage-is-configured/#remediation","title":"Remediation","text":"<p>- IF - rsyslog is the preferred method for capturing logs, this section and Recommendation should be skipped and the \"Configure rsyslog\" section followed. - IF - journald is the preferred method for capturing logs: Set the following parameter in the [Journal] section in/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in .conf: <pre><code>Storage=persistent\n</code></pre></p> <p>Example script to create systemd drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_settings=(\"Storage=persistent\")\n[ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/\nif grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-journald.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nelse\nprintf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nfi\n}\n</code></pre></p> <p>Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten Run to following command to update the parameters in the service: <pre><code># systemctl reload-or-restart systemd-journald\n</code></pre></p> <p>Default Value: Storage=persistent</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","T1070","T1070.002","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.1-Ensure-systemd-journal-remote-is-installed/","title":"6.1.2.1.1 Ensure systemd-journal-remote is installed","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.1-Ensure-systemd-journal-remote-is-installed/#audit","title":"Audit","text":"<p>- IF - journald will be used for logging on the system: Run the following command to verify systemd-journal-remote is installed. <pre><code># dpkg-query -s systemd-journal-remote &amp;&gt;/dev/null &amp;&amp; echo \"systemd-journal-remote is installed\"\n</code></pre></p> <p>Verify the output matches: <pre><code>systemd-journal-remote is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.1-Ensure-systemd-journal-remote-is-installed/#remediation","title":"Remediation","text":"<p>Run the following command to install systemd-journal-remote: <pre><code># apt install systemd-journal-remote\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.2-Ensure-systemd-journal-upload-authentication-is-configured/","title":"6.1.2.1.2 Ensure systemd-journal-upload authentication is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.2-Ensure-systemd-journal-upload-authentication-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify systemd-journal-upload authentication is configured: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"systemd/journal-upload.conf\"\na_parameters=(\"URL=^.+$\" \"ServerKeyFile=^.+$\" \"ServerCertificateFile=^.+$\" \"TrustedCertificateFile=^.+$\")\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_output2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: ***\" \"\\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure\")\nfi\n}\nfor l_input_parameter in \"${a_parameters[@]}\"; do\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt;&lt;&lt; \"$l_input_parameter\"\ndone\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p> <p>Review the output to ensure it matches your environments' certificate locations and the URL of the log server: Example output: <pre><code>- Audit Result:\n** PASS **\n  - Parameter: \"URL\"\n    set to: \"192.168.50.42\"\n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\"\n  - Parameter: \"ServerKeyFile\"\n    set to: \"/etc/ssl/private/journal-upload.pem\"\n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\"\n  - Parameter: \"ServerCertificateFile\"\n    set to: \"/etc/ssl/certs/journal-upload.pem\"\n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\"\n  - Parameter: \"TrustedCertificateFile\"\n    set to: \"/etc/ssl/ca/trusted.pem\"\n    in the file: \"/etc/systemd/journal-upload.conf.d/60-journald_upload.conf\"\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.2-Ensure-systemd-journal-upload-authentication-is-configured/#remediation","title":"Remediation","text":"<p>Edit the /etc/systemd/journal-upload.conf file or a file in /etc/systemd/journal-upload.conf.d ending in .conf and ensure the following lines are set in the [Upload] section per your environment: Example settings: <pre><code>[Upload]\nURL=192.168.50.42\nServerKeyFile=/etc/ssl/private/journal-upload.pem\nServerCertificateFile=/etc/ssl/certs/journal-upload.pem\nTrustedCertificateFile=/etc/ssl/ca/trusted.pem\n</code></pre></p> <p>Example script to create systemd drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_settings=(\"URL=192.168.50.42\" \"ServerKeyFile=/etc/ssl/private/journal-upload.pem\" \\\"ServerCertificateFile=/etc/ssl/certs/journal-upload.pem\" \"TrustedCertificateFile=/etc/ssl/ca/trusted.pem\")\n[ ! -d /etc/systemd/journal-upload.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journal-upload.conf.d/\nif grep -Psq -- '^\\h*\\[Upload\\]' /etc/systemd/journal-upload.conf.d/60-journald_upload.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journal-upload.conf.d/60-journald_upload.conf\nelse\nprintf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journal-upload.conf.d/60-journald_upload.conf\nfi\n}\n</code></pre></p> <p>Run the following command to update the parameters in the service: <pre><code># systemctl reload-or-restart systemd-journal-upload\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.3-Ensure-systemd-journal-upload-is-enabled-and-active/","title":"6.1.2.1.3 Ensure systemd-journal-upload is enabled and active","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.3-Ensure-systemd-journal-upload-is-enabled-and-active/#audit","title":"Audit","text":"<p>Run the following command to verify systemd-journal-upload is enabled. <pre><code># systemctl is-enabled systemd-journal-upload.service\nenabled\n</code></pre></p> <p>Run the following command to verify systemd-journal-upload is active: <pre><code># systemctl is-active systemd-journal-upload.service\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.3-Ensure-systemd-journal-upload-is-enabled-and-active/#remediation","title":"Remediation","text":"<p>Run the following commands to unmask, enable and start systemd-journal-upload: <pre><code># systemctl unmask systemd-journal-upload.service\n# systemctl --now enable systemd-journal-upload.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.4-Ensure-systemd-journal-remote-is-not-in-use/","title":"6.1.2.1.4 Ensure systemd-journal-remote service is not in use","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.4-Ensure-systemd-journal-remote-is-not-in-use/#audit","title":"Audit","text":"<p>Run the following command to verify systemd-journal-remote.socket and systemd-journal-remote.service are not enabled: <pre><code># systemctl is-enabled systemd-journal-remote.socket systemd-journal-remote.service | grep -P -- '^enabled'\n</code></pre> Nothing should be returned</p> <p>Run the following command to verify systemd-journal-remote.socket and systemd-journal-remote.service are not active: <pre><code># systemctl is-active systemd-journal-remote.socket systemd-journal-remote.service | grep -P -- '^active'\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.2-Configure-journald/6.1.2.1-Configure-systemd-journal-remote/6.1.2.1.4-Ensure-systemd-journal-remote-is-not-in-use/#remediation","title":"Remediation","text":"<p>Run the following commands to stop and mask systemd-journal-remote.socket and systemd-journal-remote.service: <pre><code># systemctl stop systemd-journal-remote.socket systemd-journal-remote.service\n# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure journald","Configure systemd-journald-remote","Automated","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.1-Ensure-rsyslog-is-installed/","title":"6.1.3.1 Ensure rsyslog is installed","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1005","T1070","T1070.002","TA0005","M1029","M1057"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.1-Ensure-rsyslog-is-installed/#audit","title":"Audit","text":"<p>- IF - rsyslog is being used for logging on the system: Run the following command to verify rsyslog is installed: <pre><code># dpkg-query -s rsyslog &amp;&gt;/dev/null &amp;&amp; echo \"rsyslog is installed\"\n</code></pre> Verify the output matches: <pre><code>rsyslog is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1005","T1070","T1070.002","TA0005","M1029","M1057"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.1-Ensure-rsyslog-is-installed/#remediation","title":"Remediation","text":"<p>Run the following command to install rsyslog: <pre><code># apt install rsyslog\n</code></pre></p> <p>Default Value: Installed</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1005","T1070","T1070.002","TA0005","M1029","M1057"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.2-Ensure-rsyslog-service-is-enabled-and-active/","title":"6.1.3.2 Ensure rsyslog service is enabled and active","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.001","TA0005","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.2-Ensure-rsyslog-service-is-enabled-and-active/#audit","title":"Audit","text":"<p>- IF - rsyslog is being used for logging on the system: Run the following command to verify rsyslog.service is enabled: <pre><code># systemctl is-enabled rsyslog\nenabled\n</code></pre></p> <p>Run the following command to verify rsyslog.service is active: <pre><code># systemctl is-active rsyslog.service\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.001","TA0005","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.2-Ensure-rsyslog-service-is-enabled-and-active/#remediation","title":"Remediation","text":"<p>- IF - rsyslog is being used for logging on the system: Run the following commands to unmask, enable, and start rsyslog.service: <pre><code># systemctl unmask rsyslog.service\n# systemctl enable rsyslog.service\n# systemctl start rsyslog.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.001","TA0005","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.3-Ensure-journald-is-configured-to-send-logs-to-rsyslog/","title":"6.1.3.3 Ensure journald is configured to send logs to rsyslog","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.9 Centralize Audit Logs","T1070","T1070.002","T1562","T1562.006","T1565","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.3-Ensure-journald-is-configured-to-send-logs-to-rsyslog/#audit","title":"Audit","text":"<p>- IF - rsyslog is the preferred method for capturing logs Run the following script to verify that logs are forwarded to rsyslog by setting ForwardToSyslog to yes in the systemd-journald configuration: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_systemd_config_file=\"systemd/journald.conf\"\na_parameters=(\"ForwardToSyslog=yes\")\nf_config_file_parameter_chk()\n{\nl_used_parameter_setting=\"\"\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"$l_systemd_config_file\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nwhile IFS=: read -r l_file_name l_file_parameter; do\nwhile IFS=\"=\" read -r l_file_parameter_name l_file_parameter_value; do\nif grep -Pq -- \"$l_parameter_value\" &lt;&lt;&lt; \"$l_file_parameter_value\"; then\na_output+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"correctly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\")\nelse\na_output2+=(\" - Parameter: \\\"${l_file_parameter_name// /}\\\"\" \\\"incorrectly set to: \\\"${l_file_parameter_value// /}\\\"\" \\\"in the file: \\\"$l_file_name\\\"\" \\\"Should be set to: \\\"$l_value_out\\\"\")\nfi\ndone &lt;&lt;&lt; \"$l_file_parameter\"\ndone &lt;&lt;&lt; \"$l_used_parameter_setting\"\nelse\na_output2+=(\" - Parameter: \\\"$l_parameter_name\\\" is not set in an included file\" \\\"*** Note: \\\"$l_parameter_name\\\" May be set in a file that's ignored by load procedure ***\")\nfi\n}\nfor l_input_parameter in \"${a_parameters[@]}\"; do\nwhile IFS=\"=\" read -r l_parameter_name l_parameter_value; do # Assess and check parameters\nl_parameter_name=\"${l_parameter_name// /}\";\nl_parameter_value=\"${l_parameter_value// /}\"\nl_value_out=\"${l_parameter_value//-/ through }\";\nl_value_out=\"${l_value_out//|/ or }\"\nl_value_out=\"$(tr -d '(){}' &lt;&lt;&lt; \"$l_value_out\")\"\nf_config_file_parameter_chk\ndone &lt;&lt;&lt; \"$l_input_parameter\"\ndone\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p> <p>Run the following command to verify systemd-journald.service and rsyslog.service are loaded and active: <pre><code># systemctl list-units --type service | grep -P -- '(journald|rsyslog)'\n</code></pre> Output should be similar to: <pre><code>rsyslog.service         loaded active running\nSystem Logging Service\nsystemd-journald.service    loaded active running\nJournal Service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.9 Centralize Audit Logs","T1070","T1070.002","T1562","T1562.006","T1565","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.3-Ensure-journald-is-configured-to-send-logs-to-rsyslog/#remediation","title":"Remediation","text":"<p>- IF - Journald is the preferred method for capturing logs, this section and Recommendation should be skipped and the \"Configure Journald\" section followed. - IF - rsyslog is the preferred method for capturing logs: Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in .conf: <pre><code>ForwardToSyslog=yes\n</code></pre></p> <p>Example script to create systemd drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_settings=(\"ForwardToSyslog=yes\")\n[ ! -d /etc/systemd/journald.conf.d/ ] &amp;&amp; mkdir /etc/systemd/journald.conf.d/\nif grep -Psq -- '^\\h*\\[Journal\\]' /etc/systemd/journald.conf.d/60-journald.conf; then\nprintf '%s\\n' \"\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nelse\nprintf '%s\\n' \"\" \"[Journal]\" \"${a_settings[@]}\" &gt;&gt; /etc/systemd/journald.conf.d/60-journald.conf\nfi\n}\n</code></pre></p> <p>Note: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten Run to following command to update the parameters in the service: Restart systemd-journald.service: <pre><code># systemctl reload-or-restart systemd-journald.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.9 Centralize Audit Logs","T1070","T1070.002","T1562","T1562.006","T1565","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.4-Ensure-rsyslog-log-file-creation-mode-is-configured/","title":"6.1.3.4 Ensure rsyslog log file creation mode is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","8.2 Collect Audit Logs","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.4-Ensure-rsyslog-log-file-creation-mode-is-configured/#audit","title":"Audit","text":"<p>Run the following command Run the following script to verify $FileCreateMode to set to mode 0640 or more restrictive: <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_include='\\$IncludeConfig' a_config_files=(\"/etc/rsyslog.conf\")\nl_parameter_name='\\$FileCreateMode'\nf_parameter_chk()\n{\nl_perm_mask=\"0137\"; l_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_perm_mask )) )\"\nl_mode=\"$(awk '{print $2}' &lt;&lt;&lt; \"$l_used_parameter_setting\" | xargs)\"\nif [ $(( $l_mode &amp; $l_perm_mask )) -gt 0 ]; then\na_output2+=(\" - Parameter: \\\"${l_parameter_name//\\\\/}\\\" is incorrectly set to mode: \\\"$l_mode\\\"\" \\\"in the file: \\\"$l_file\\\"\" \"Should be mode: \\\"$l_maxperm\\\" or more restrictive\")\nelse\na_output+=(\" - Parameter: \\\"${l_parameter_name//\\\\/}\\\" is correctly set to mode: \\\"$l_mode\\\"\" \\\"in the file: \\\"$l_file\\\"\" \"Should be mode: \\\"$l_maxperm\\\" or more restrictive\")\nfi\n}\nwhile IFS= read -r l_file; do\nl_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\" | tail -n 1)\"\n[ -n \"$l_conf_loc\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"${a_config_files[*]}\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -d \"$l_conf_loc\" ]; then\nl_dir=\"$l_conf_loc\" l_ext=\"*\"\nelif grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' &lt;&lt;&lt; \"$l_conf_loc\" || [ -f \"$(readlink -f\n\"$l_conf_loc\")\" ]; then\nl_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\"\nfi\nwhile read -r -d $'\\0' l_file_name; do\n[ -f \"$(readlink -f \"$l_file_name\")\" ] &amp;&amp; a_config_files+=(\"$(readlink -f \"$l_file_name\")\")\ndone &lt; &lt;(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2&gt;/dev/null)\nwhile IFS= read -r l_file; do\nl_file=\"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\"\nl_used_parameter_setting=\"$(grep -PHs -- '^\\h*'\"$l_parameter_name\"'\\b' \"$l_file\" | tail -n 1)\"\n[ -n \"$l_used_parameter_setting\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -n \"$l_used_parameter_setting\" ]; then\nf_parameter_chk\nelse\na_output2+=(\" - Parameter: \\\"${l_parameter_name//\\\\/}\\\" is not set in a configuration file\" \\\"*** Note: \\\"${l_parameter_name//\\\\/}\\\" May be set in a file that's ignored by load procedure ***\")\nfi\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","8.2 Collect Audit Logs","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.4-Ensure-rsyslog-log-file-creation-mode-is-configured/#remediation","title":"Remediation","text":"<p>Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set $FileCreateMode to 0640 or more restrictive: <pre><code>$FileCreateMode 0640\n</code></pre></p> <p>Example script to create a drop-in configuration file in the default include location: <pre><code>#!/usr/bin/env bash\n{\n[ ! -d \"/etc/rsyslog.d/\" ] &amp;&amp; mkdir /etc/rsyslog.d/\nprintf '%s\\n' \"\" \"\\$FileCreateMode 0640\" &gt;&gt; /etc/rsyslog.d/60-rsyslog.conf\n}\n</code></pre></p> <p>Reload the service: <pre><code># systemctl reload-or-restart rsyslog\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","8.2 Collect Audit Logs","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.5-Ensure-rsyslog-logging-is-configured/","title":"6.1.3.5 Ensure rsyslog logging is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.5-Ensure-rsyslog-logging-is-configured/#audit","title":"Audit","text":"<p>Review the contents of /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files to ensure appropriate logging is set. In addition, run the following command and verify that the log files are logging information as expected: Run the following script and review the output from the rsyslog configuration to ensure appropriate logging is set an in accordance with local site policy. <pre><code>#!/usr/bin/env bash\n{\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_include='\\$IncludeConfig' a_config_files=(\"/etc/rsyslog.conf\")\nwhile IFS= read -r l_file; do\nl_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\" | tail -n 1)\"\n[ -n \"$l_conf_loc\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -d \"$l_conf_loc\" ]; then\nl_dir=\"$l_conf_loc\" l_ext=\"*\"\nelif grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' &lt;&lt;&lt; \"$l_conf_loc\" || [ -f \"$(readlink -f \"$l_conf_loc\")\" ]; then\nl_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\"\nfi\nwhile read -r -d $'\\0' l_file_name; do\n[ -f \"$(readlink -f \"$l_file_name\")\" ] &amp;&amp; a_config_files+=(\"$(readlink -f \"$l_file_name\")\")\ndone &lt; &lt;(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2&gt;/dev/null)\nfor l_logfile in \"${a_config_files[@]}\"; do\ngrep -PHs -- '^\\h*[^#\\n\\r\\/:]+\\/var\\/log\\/.*$' \"$l_logfile\"\ndone\n}\n</code></pre> Example output: <pre><code>/etc/rsyslog.d/60-rsyslog.conf:auth,authpriv.*      /var/log/secure\n/etc/rsyslog.d/60-rsyslog.conf:mail.*           -/var/log/mail\n/etc/rsyslog.d/60-rsyslog.conf:mail.info        -/var/log/mail.info\n/etc/rsyslog.d/60-rsyslog.conf:mail.warning     -/var/log/mail.warn\n/etc/rsyslog.d/60-rsyslog.conf:mail.err         /var/log/mail.err\n/etc/rsyslog.d/60-rsyslog.conf:cron.*           /var/log/cron\n/etc/rsyslog.d/60-rsyslog.conf:*.=warning;*.=err    -/var/log/warn\n/etc/rsyslog.d/60-rsyslog.conf:*.crit           /var/log/warn\n/etc/rsyslog.d/60-rsyslog.conf:*.*;mail.none;news.none  -/var/log/messages\n/etc/rsyslog.d/60-rsyslog.conf:local0,local1.*      -/var/log/localmessages\n/etc/rsyslog.d/60-rsyslog.conf:local2,local3.*      -/var/log/localmessages\n/etc/rsyslog.d/60-rsyslog.conf:local4,local5.*      -/var/log/localmessages\n/etc/rsyslog.d/60-rsyslog.conf:local6,local7.*      -/var/log/localmessages\n/etc/rsyslog.d/50-default.conf:auth,authpriv.*      /var/log/auth.log #&lt;- Will be ignored\n/etc/rsyslog.d/50-default.conf:*.*;auth,authpriv.none   -/var/log/syslog\n/etc/rsyslog.d/50-default.conf:kern.*           -/var/log/kern.log\n/etc/rsyslog.d/50-default.conf:mail.*           -/var/log/mail.log #&lt;- Will be ignored\n/etc/rsyslog.d/50-default.conf:mail.err         /var/log/mail.err #&lt;- Will be ignored\n</code></pre></p> <p>Note:</p> <ul> <li>Output is generated as \\&lt;CONFIGURATION_FILE&gt;:&lt;PARAMETER&gt;</li> <li>Files are listed in order of precedence. If the same parameter is listed multiple times, only the first occurrence will be used be the rsyslog daemon</li> </ul>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.5-Ensure-rsyslog-logging-is-configured/#remediation","title":"Remediation","text":"<p>Edit the following lines in the configuration file(s) returned by the audit as appropriate for your environment. Note: The below configuration is shown for example purposes only. Due care should be given to how the organization wishes to store log data. <pre><code>*.emerg         :omusrmsg:*\nauth,authpriv.*     /var/log/secure\nmail.*          -/var/log/mail\nmail.info       -/var/log/mail.info\nmail.warning        -/var/log/mail.warn\nmail.err        /var/log/mail.err\ncron.*          /var/log/cron\n*.=warning;*.=err   -/var/log/warn\n*.crit          /var/log/warn\n*.*;mail.none;news.none -/var/log/messages\nlocal0,local1.*     -/var/log/localmessages\nlocal2,local3.*     -/var/log/localmessages\nlocal4,local5.*     -/var/log/localmessages\nlocal6,local7.*     -/var/log/localmessages\n</code></pre></p> <p>Run the following command to reload the rsyslogd configuration: <pre><code># systemctl reload-or-restart rsyslog\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.6-Ensure-rsyslog-is-configured-to-send-logs-to-a-remote-log-host/","title":"6.1.3.6 Ensure rsyslog is configured to send logs to a remote log host","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.6-Ensure-rsyslog-is-configured-to-send-logs-to-a-remote-log-host/#audit","title":"Audit","text":"<p>Run the following script and review the output of rsyslog configuration. Verify that logs are sent to a central host used by your organization: basic format</p> <p>basic format <pre><code>#!/usr/bin/env bash\n{\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_include='\\$IncludeConfig' a_config_files=(\"/etc/rsyslog.conf\")\nwhile IFS= read -r l_file; do\nl_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\" | tail -n 1)\"\n[ -n \"$l_conf_loc\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -d \"$l_conf_loc\" ]; then\nl_dir=\"$l_conf_loc\" l_ext=\"*\"\nelif grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' &lt;&lt;&lt; \"$l_conf_loc\" || [ -f \"$(readlink -f \"$l_conf_loc\")\" ]; then\nl_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\"\nfi\nwhile read -r -d $'\\0' l_file_name; do\n[ -f \"$(readlink -f \"$l_file_name\")\" ] &amp;&amp; a_config_files+=(\"$(readlink -f \"$l_file_name\")\")\ndone &lt; &lt;(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2&gt;/dev/null)\nfor l_logfile in \"${a_config_files[@]}\"; do\ngrep -Hs -- \"^*.*[^I][^I]*@\" \"$l_logfile\"\ndone\n}\n</code></pre></p> <p>Output should include **@@ Example output: <pre><code>/etc/rsyslog.d/60-rsyslog.conf:*.* @@loghost.example.com\n</code></pre> <p>- OR - Run the following script and review the output of rsyslog configuration. Verify that logs are sent to a central host used by your organization: advanced format: <pre><code>#!/usr/bin/env bash\n{\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_include='\\$IncludeConfig' a_config_files=(\"/etc/rsyslog.conf\")\nwhile IFS= read -r l_file; do\nl_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\" | tail -n 1)\"\n[ -n \"$l_conf_loc\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -d \"$l_conf_loc\" ]; then\nl_dir=\"$l_conf_loc\" l_ext=\"*\"\nelif grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' &lt;&lt;&lt; \"$l_conf_loc\" || [ -f \"$(readlink -f \"$l_conf_loc\")\" ]; then\nl_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\"\nfi\nwhile read -r -d $'\\0' l_file_name; do\n[ -f \"$(readlink -f \"$l_file_name\")\" ] &amp;&amp; a_config_files+=(\"$(readlink -f \"$l_file_name\")\")\ndone &lt; &lt;(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2&gt;/dev/null)\nfor l_logfile in \"${a_config_files[@]}\"; do\ngrep -PHsi --'^\\s*([^#]+\\s+)?action\\(([^#]+\\s+)?\\btarget=\\\"?[^#\"]+\\\"?\\b' \"$l_logfile\"\ndone\n}\n</code></pre></p> <p>Output should include target= Example output: <pre><code>/etc/rsyslog.d/60-rsyslog.conf:*.* action(type=\"omfwd\" target=\"loghost.example.com\" port=\"514\" protocol=\"tcp\"\n</code></pre>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.6-Ensure-rsyslog-is-configured-to-send-logs-to-a-remote-log-host/#remediation","title":"Remediation","text":"<p>Edit the rsyslog configuration and add the following line (where loghost.example.com is the name of your central log host). The target directive may either be a fully qualified domain name or an IP address. Example script to create a drop-in configuration file: <pre><code>#!/usr/bin/env bash\n{\na_parameters=('*.* action(type=\"omfwd\" target=\"loghost.example.com\" port=\"514\" protocol=\"tcp\"' \\'action.resumeRetryCount=\"100\"' '\nqueue.type=\"LinkedList\" queue.size=\"1000\")')\n[ ! -d \"/etc/rsyslog.d/\" ] &amp;&amp; mkdir /etc/rsyslod.d/\nprintf '%s\\n' \"\" \"${a_parameters[@]}\" &gt;&gt; /etc/rsyslog.d/60-rsyslog.conf\n}\n</code></pre></p> <p>Run the following command to reload rsyslog.service: <pre><code># systemctl reload-or-restart rsyslog.service\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.2 Collect Audit Logs","T1070","T1070.002","T1562","T1562.006","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.7-Ensure-rsyslog-is-not-configured-to-receive-logs-from-a-remote-client/","title":"6.1.3.7 Ensure rsyslog is not configured to receive logs from a remote client","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1070","T1070.002","T1562","T1562.006","TA0005","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.7-Ensure-rsyslog-is-not-configured-to-receive-logs-from-a-remote-client/#audit","title":"Audit","text":"<p>Unless the system's primary function is to serve as a logfile server, run the following script to review the rsyslog configuration and verify that the system is not configured to accept incoming logs. advanced format <pre><code>#!/usr/bin/env bash\n{\na_output2=()\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_include='\\$IncludeConfig' a_config_files=(\"/etc/rsyslog.conf\")\nwhile IFS= read -r l_file; do\nl_conf_loc=\"$(awk '$1~/^\\s*'\"$l_include\"'$/ {print $2}' \"$(tr -d '# ' &lt;&lt;&lt; \"$l_file\")\" | tail -n 1)\"\n[ -n \"$l_conf_loc\" ] &amp;&amp; break\ndone &lt; &lt;($l_analyze_cmd cat-config \"${a_config_files[@]}\" | tac | grep -Pio '^\\h*#\\h*\\/[^#\\n\\r\\h]+\\.conf\\b')\nif [ -d \"$l_conf_loc\" ]; then\nl_dir=\"$l_conf_loc\" l_ext=\"*\"\nelif grep -Psq '\\/\\*\\.([^#/\\n\\r]+)?\\h*$' &lt;&lt;&lt; \"$l_conf_loc\" || [ -f \"$(readlink -f \"$l_conf_loc\")\" ]; then\nl_dir=\"$(dirname \"$l_conf_loc\")\" l_ext=\"$(basename \"$l_conf_loc\")\"\nfi\nwhile read -r -d $'\\0' l_file_name; do\n[ -f \"$(readlink -f \"$l_file_name\")\" ] &amp;&amp; a_config_files+=(\"$(readlink -f \"$l_file_name\")\")\ndone &lt; &lt;(find -L \"$l_dir\" -type f -name \"$l_ext\" -print0 2&gt;/dev/null)\nfor l_logfile in \"${a_config_files[@]}\"; do\nl_fail=\"$(grep -Psi -- '^\\h*module\\(load=\\\"?imtcp\\\"?\\)' \"$l_logfile\")\"\n[ -n \"$l_fail\" ] &amp;&amp; a_output2+=(\"- Advanced format entry to accept incoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\")\nl_fail=\"$(grep -Psi -- '^\\h*input\\(type=\\\"?imtcp\\\"?\\b' \"$l_logfile\")\"\n[ -n \"$l_fail\" ] &amp;&amp; a_output2+=(\"- Advanced format entry to accept incoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\")\nl_fail=\"$(grep -Psi -- '^\\h*module\\(load=\\\"?imtcp\\\"?\\)' \"$l_logfile\")\"\n[ -n \"$l_fail\" ] &amp;&amp; a_output2+=(\"- Obsolete format entry to accept incoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\")\nl_fail=\"$(grep -Psi -- '^\\h*input\\(type=\\\"?imtcp\\\"?\\b' \"$l_logfile\")\"\n[ -n \"$l_fail\" ] &amp;&amp; a_output2+=(\"- Obsolete format entry to accept incoming logs: \\\"$l_fail\\\"\" \"found in: \\\"$l_logfile\\\"\")\ndone\nif [ \"${#a_output2[@]}\" -le \"0\" ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \" - No entries to accept incoming logs found\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1070","T1070.002","T1562","T1562.006","TA0005","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.7-Ensure-rsyslog-is-not-configured-to-receive-logs-from-a-remote-client/#remediation","title":"Remediation","text":"<p>Unless the system's primary function is to serve as a logfile server , modify the files returned by the Audit Procedure and remove the specific lines highlighted by the audit. Verify none of the following entries are present in the rsyslog configuration. advanced formatt <pre><code>module(load=\"imtcp\")\ninput(type=\"imtcp\" port=\"514\")\n</code></pre></p> <p>deprecated legacy format <pre><code>$ModLoad imtcp\n$InputTCPServerRun\n</code></pre></p> <p>Reload the service: <pre><code># systemctl reload-or-restart rsyslog\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Automated","IG1","IG2","IG3","4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software","T1070","T1070.002","T1562","T1562.006","TA0005","TA0040","M1029"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.8-Ensure-logrotate-is-configured/","title":"6.1.3.8 Ensure logrotate is configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1070","T1070.002","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.8-Ensure-logrotate-is-configured/#audit","title":"Audit","text":"<p>Run the following script to analyze the logrotate configuration: <pre><code>#!/usr/bin/env bash\n{\nl_analyze_cmd=\"$(readlink -f /bin/systemd-analyze)\"\nl_config_file=\"/etc/logrotate.conf\"\nl_include=\"$(awk '$1~/^\\s*include$/{print$2}' \"$l_config_file\" 2&gt;/dev/null)\"\n[ -d \"$l_include\" ] &amp;&amp; l_include=\"$l_include/*\"\n$l_analyze_cmd cat-config \"$l_config_file\" $l_include\n}\n</code></pre></p> <p>Note: The last occurrence of a argument is the one used for the logrotate configuration</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1070","T1070.002","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.3-Configure-rsyslog/6.1.3.8-Ensure-logrotate-is-configured/#remediation","title":"Remediation","text":"<p>Edit /etc/logrotate.conf, or the appropriate configuration file provided by the script in the Audit Procedure, as necessary to ensure logs are rotated according to site policy.</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure rsyslog","Manual","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1070","T1070.002","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.4-Configure-Logfiles/6.1.4.1-Ensure-access-to-all-logfiles-has-been-configured/","title":"6.1.4.1 Ensure access to all logfiles has been configured","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure Logfiles","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1028"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.4-Configure-Logfiles/6.1.4.1-Ensure-access-to-all-logfiles-has-been-configured/#audit","title":"Audit","text":"<p>Run the following script to verify that files in /var/log/ have appropriate permissions and ownership: <pre><code>#!/usr/bin/env bash\n{\na_output=(); a_output2=()\nf_file_test_chk()\n{\na_out2=()\nmaxperm=\"$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )\"\n[ $(( $l_mode &amp; $perm_mask )) -gt 0 ] &amp;&amp; \\\na_out2+=(\"o Mode: \\\"$l_mode\\\" should be \\\"$maxperm\\\" or more restrictive\")\n[[ ! \"$l_user\" =~ $l_auser ]] &amp;&amp; \\\na_out2+=(\"o Owned by: \\\"$l_user\\\" and should be owned by \\\"${l_auser//|/ or }\\\"\")\n[[ ! \"$l_group\" =~ $l_agroup ]] &amp;&amp; \\\na_out2+=(\"o Group owned by: \\\"$l_group\\\" and should be group owned by \\\"${l_agroup//|/ or }\\\"\")\n[ \"${#a_out2[@]}\" -gt 0 ] &amp;&amp; a_output2+=(\" - File: \\\"$l_fname\\\" is:\" \"${a_out2[@]}\")\n}\nwhile IFS= read -r -d $'\\0' l_file; do\nwhile IFS=: read -r l_fname l_mode l_user l_group; do\nif grep -Pq -- '\\/(apt)\\h*$' &lt;&lt;&lt; \"$(dirname \"$l_fname\")\"; then\nperm_mask='0133' l_auser=\"root\" l_agroup=\"(root|adm)\"; f_file_test_chk\nelse\ncase \"$(basename \"$l_fname\")\" in\nlastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)\nperm_mask='0113' l_auser=\"root\" l_agroup=\"(root|utmp)\"\nf_file_test_chk ;;\ncloud-init.log* | localmessages* | waagent.log*)\nperm_mask='0133' l_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\"\nf_file_test_chk ;;\nsecure{,*.*,.*,-*} | auth.log | syslog | messages)\nperm_mask='0137' l_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\"\nf_file_test_chk ;;\nSSSD | sssd)\nperm_mask='0117' l_auser=\"(root|SSSD)\" l_agroup=\"(root|SSSD)\"\nf_file_test_chk ;;\ngdm | gdm3)\nperm_mask='0117' l_auser=\"root\" l_agroup=\"(root|gdm|gdm3)\"\nf_file_test_chk ;;\n*.journal | *.journal~)\nperm_mask='0137' l_auser=\"root\" l_agroup=\"(root|systemd-journal)\"\nf_file_test_chk ;;\n*)\nperm_mask='0137' l_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\"\nif [ \"$l_user\" = \"root\" ] || ! grep -Pq -- \"^\\h*$(awk -F: '$1==\"'\"$l_user\"'\"\n{print $7}' /etc/passwd)\\b\" /etc/shells; then\n! grep -Pq -- \"$l_auser\" &lt;&lt;&lt; \"$l_user\" &amp;&amp; l_auser=\"(root|syslog|$l_user)\"\n! grep -Pq -- \"$l_agroup\" &lt;&lt;&lt; \"$l_group\" &amp;&amp; l_agroup=\"(root|adm|$l_group)\"\nfi\nf_file_test_chk ;;\nesac\nfi\ndone &lt; &lt;(stat -Lc '%n:%#a:%U:%G' \"$l_file\")\ndone &lt; &lt;(find -L /var/log -type f \\( -perm /0137 -o ! -user root -o ! -group root \\) -print0)\nif [ \"${#a_output2[@]}\" -le 0 ]; then\na_output+=(\" - All files in \\\"/var/log/\\\" have appropriate permissions and ownership\")\nprintf '\\n%s' \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '\\n%s' \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\" \"\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure Logfiles","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1028"]},{"location":"6-Logging-and-Auditing/6.1-System-Logging/6.1.4-Configure-Logfiles/6.1.4.1-Ensure-access-to-all-logfiles-has-been-configured/#remediation","title":"Remediation","text":"<p>Run the following script to update permissions and ownership on files in /var/log.</p> <p>Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=()\nf_file_test_fix()\n{\na_out2=()\nmaxperm=\"$( printf '%o' $(( 0777 &amp; ~$perm_mask)) )\"\nif [ $(( $l_mode &amp; $perm_mask )) -gt 0 ]; then\na_out2+=(\"o Mode: \\\"$l_mode\\\" should be \\\"$maxperm\\\" or more restrictive\" \"x Removing excess permissions\")\nchmod \"$l_rperms\" \"$l_fname\"\nfi\nif [[ ! \"$l_user\" =~ $l_auser ]]; then\na_out2+=(\"o Owned by: \\\"$l_user\\\" and should be owned by \\\"${l_auser//|/ or }\\\"\" \"x Changing ownership to: \\\"$l_fix_account\\\"\")\nchown \"$l_fix_account\" \"$l_fname\"\nfi\nif [[ ! \"$l_group\" =~ $l_agroup ]]; then\na_out2+=(\"\no Group owned by: \\\"$l_group\\\" and should be group owned by \\\"${l_agroup//|/ or }\\\"\" \"x Changing group ownership to: \\\"$l_fix_account\\\"\")\nchgrp \"$l_fix_account\" \"$l_fname\"\nfi\n[ \"${#a_out2[@]}\" -gt 0 ] &amp;&amp; a_output2+=(\" - File: \\\"$l_fname\\\" is:\" \"${a_out2[@]}\")\n}\nl_fix_account='root'\nwhile IFS= read -r -d $'\\0' l_file; do\nwhile IFS=: read -r l_fname l_mode l_user l_group; do\nif grep -Pq -- '\\/(apt)\\h*$' &lt;&lt;&lt; \"$(dirname \"$l_fname\")\"; then\nperm_mask='0133' l_rperms=\"u-x,go-wx\" l_auser=\"root\"\nl_agroup=\"(root|adm)\"; f_file_test_fix\nelse\ncase \"$(basename \"$l_fname\")\" in\nlastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)\nperm_mask='0113' l_rperms=\"ug-x,o-wx\" l_auser=\"root\"\nl_agroup=\"(root|utmp)\"\nf_file_test_fix ;;\ncloud-init.log* | localmessages* | waagent.log*)\nperm_mask='0133' l_rperms=\"u-x,go-wx\"\nl_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\"\nfile_test_fix ;;\nsecure | auth.log | syslog | messages)\nperm_mask='0137' l_rperms=\"u-x,g-wx,o-rwx\"\nl_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\"\nf_file_test_fix ;;\nSSSD | sssd)\nperm_mask='0117' l_rperms=\"ug-x,o-rwx\"\nl_auser=\"(root|SSSD)\" l_agroup=\"(root|SSSD)\"\nf_file_test_fix ;;\ngdm | gdm3)\nperm_mask='0117' l_rperms=\"ug-x,o-rwx\" l_auser=\"root\"\nl_agroup=\"(root|gdm|gdm3)\"\nf_file_test_fix ;;\n*.journal | *.journal~)\nperm_mask='0137' l_rperms=\"u-x,g-wx,o-rwx\" l_auser=\"root\"\nl_agroup=\"(root|systemd-journal)\"\nf_file_test_fix ;;\n*)\nperm_mask='0137' l_rperms=\"u-x,g-wx,o-rwx\"\nl_auser=\"(root|syslog)\" l_agroup=\"(root|adm)\"\nif [ \"$l_user\" = \"root\" ] || ! grep -Pq -- \"^\\h*$(awk -F: '$1==\"'\"$l_user\"'\" {print $7}' /etc/passwd)\\b\" /etc/shells; then\n! grep -Pq -- \"$l_auser\" &lt;&lt;&lt; \"$l_user\" &amp;&amp; l_auser=\"(root|syslog|$l_user)\"\n! grep -Pq -- \"$l_agroup\" &lt;&lt;&lt; \"$l_group\" &amp;&amp; l_agroup=\"(root|adm|$l_group)\"\nfi\nf_file_test_fix ;;\nesac\nfi\ndone &lt; &lt;(stat -Lc '%n:%#a:%U:%G' \"$l_file\")\ndone &lt; &lt;(find -L /var/log -type f \\( -perm /0137 -o ! -user root -o ! -group root \\) -print0)\nif [ \"${#a_output2[@]}\" -le 0 ]; then # If all files passed, then we report no changes\na_output+=(\" - All files in \\\"/var/log/\\\" have appropriate permissions and ownership\")\nprintf '\\n%s' \"- All files in \\\"/var/log/\\\" have appropriate permissions and ownership\" \" o No changes required\" \"\"\nelse\nprintf '\\n%s' \"${a_output2[@]}\" \"\"\nfi\n}\n</code></pre> <p>Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions. If there are services that log to other locations, ensure that those log files have the appropriate permissions.</p>","tags":["Level 1","Workstation","Server","Logging and Auditing","System Logging","Configure Logfiles","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.1-Ensure-auditd-packages-are-installed/","title":"6.2.1.1 Ensure auditd packages are installed","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.001","TA0005","M1018"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.1-Ensure-auditd-packages-are-installed/#audit","title":"Audit","text":"<p>Run the following command and verify auditd is installed: <pre><code># dpkg-query -s auditd &amp;&gt;/dev/null &amp;&amp; echo auditd is installed\nauditd is installed\n</code></pre></p> <p>Run the following command to verify audispd-plugins is installed: <pre><code># dpkg-query -s audispd-plugins &amp;&gt;/dev/null &amp;&amp; echo audispd-plugins is installed\naudispd-plugins is installed\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.001","TA0005","M1018"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.1-Ensure-auditd-packages-are-installed/#remediation","title":"Remediation","text":"<p>Run the following command to Install auditd and audispd-plugins <pre><code># apt install auditd audispd-plugins\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.001","TA0005","M1018"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.2-Ensure-auditd-service-is-enabled-and-active/","title":"6.2.1.2 Ensure auditd service is enabled and active","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.2-Ensure-auditd-service-is-enabled-and-active/#audit","title":"Audit","text":"<p>Run the following command to verify auditd is enabled: <pre><code># systemctl is-enabled auditd | grep '^enabled'\nenabled\n</code></pre> Verify result is \"enabled\".</p> <p>Run the following command to verify auditd is active: <pre><code># systemctl is-active auditd | grep '^active'\nactive\n</code></pre> Verify result is active</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.2-Ensure-auditd-service-is-enabled-and-active/#remediation","title":"Remediation","text":"<p>Run the following commands to unmask, enable and start auditd: <pre><code># systemctl unmask auditd\n# systemctl enable auditd\n# systemctl start auditd\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.3-Ensure-auditing-for-processes-that-start-prior-to-auditd-is-enabled/","title":"6.2.1.3 Ensure auditing for processes that start prior to auditd is enabled","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.3-Ensure-auditing-for-processes-that-start-prior-to-auditd-is-enabled/#audit","title":"Audit","text":"<p>Run the following command: <pre><code># find /boot -type f -name 'grub.cfg' -exec grep -Ph -- '^\\h*linux' {} + | grep -v 'audit=1'\n</code></pre></p> <p>Nothing should be returned.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.3-Ensure-auditing-for-processes-that-start-prior-to-auditd-is-enabled/#remediation","title":"Remediation","text":"<p>Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX: Example: <pre><code>GRUB_CMDLINE_LINUX=\"audit=1\"\n</code></pre></p> <p>Run the following command to update the grub2 configuration: <pre><code># update-grub\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.4-Ensure-audit_backlog_limit-is-sufficient/","title":"6.2.1.4 Ensure audit_backlog_limit is sufficient","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.4-Ensure-audit_backlog_limit-is-sufficient/#audit","title":"Audit","text":"<p>Run the following command and verify the audit_backlog_limit= parameter is set: <pre><code># find /boot -type f -name 'grub.cfg' -exec grep -Ph -- '^\\h*linux' {} + | grep -Pv 'audit_backlog_limit=\\d+\\b'\n</code></pre> Nothing should be returned.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.1-Configure-auditd-Service/6.2.1.4-Ensure-audit_backlog_limit-is-sufficient/#remediation","title":"Remediation","text":"<p>Edit /etc/default/grub and add audit_backlog_limit=N to GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger. Example: <pre><code>GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\"\n</code></pre></p> <p>Run the following command to update the grub2 configuration: <pre><code># update-grub\n</code></pre></p> <p>Default Value: If audit_backlog_limit is not set, the system defaults to audit_backlog_limit=64</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd Service","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.001","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.1-Ensure-audit-log-storage-size-is-configured/","title":"6.2.2.1 Ensure audit log storage size is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0040","M1053"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.1-Ensure-audit-log-storage-size-is-configured/#audit","title":"Audit","text":"<p>Run the following command and ensure output is in compliance with site policy: <pre><code># grep -Po -- '^\\h*max_log_file\\h*=\\h*\\d+\\b' /etc/audit/auditd.conf\nmax_log_file = &lt;MB&gt;\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0040","M1053"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.1-Ensure-audit-log-storage-size-is-configured/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/audit/auditd.conf in accordance with site policy: <pre><code>max_log_file = &lt;MB&gt;\n</code></pre></p> <p>Default Value: max_log_file = 8</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0040","M1053"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.2-Ensure-audit-logs-are-not-automatically-deleted/","title":"6.2.2.2 Ensure audit logs are not automatically deleted","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005","M1053"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.2-Ensure-audit-logs-are-not-automatically-deleted/#audit","title":"Audit","text":"<p>Run the following command and verify output matches: <pre><code># grep max_log_file_action /etc/audit/auditd.conf\nmax_log_file_action = keep_logs\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005","M1053"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.2-Ensure-audit-logs-are-not-automatically-deleted/#remediation","title":"Remediation","text":"<p>Set the following parameter in /etc/audit/auditd.conf: <pre><code>max_log_file_action = keep_logs\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005","M1053"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.3-Ensure-system-is-disabled-when-audit-logs-are-full/","title":"6.2.2.3 Ensure system is disabled when audit logs are full","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.3-Ensure-system-is-disabled-when-audit-logs-are-full/#audit","title":"Audit","text":"<p>Run the following command and verify the disk_full_action is set to either halt or single: <pre><code># grep -Pi -- '^\\h*disk_full_action\\h*=\\h*(halt|single)\\b' /etc/audit/auditd.conf\ndisk_full_action = &lt;halt|single&gt;\n</code></pre></p> <p>Run the following command and verify the disk_error_action is set to syslog, single, or halt: <pre><code># grep -Pi -- '^\\h*disk_error_action\\h*=\\h*(syslog|single|halt)\\b' /etc/audit/auditd.conf\ndisk_error_action = &lt;syslog|single|halt&gt;\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.3-Ensure-system-is-disabled-when-audit-logs-are-full/#remediation","title":"Remediation","text":"<p>Set the following parameters in /etc/audit/auditd.conf depending on your local security policies. <pre><code>disk_full_action = &lt;halt|single&gt;\ndisk_error_action = &lt;syslog|single|halt&gt;\n</code></pre></p> <p>Example: <pre><code>disk_full_action = halt\ndisk_error_action = halt\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005","M1028"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.4-Ensure-system-warns-when-audit-logs-are-low-on-space/","title":"6.2.2.4 Ensure system warns when audit logs are low on space","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.4-Ensure-system-warns-when-audit-logs-are-low-on-space/#audit","title":"Audit","text":"<p>Run the following command and verify the space_left_action is set to email, exec, single, or halt: <pre><code># grep -P -- '^\\h*space_left_action\\h*=\\h*(email|exec|single|halt)\\b' /etc/audit/auditd.conf\n</code></pre> Verify the output is email, exec, single, or halt Example output <pre><code>space_left_action = email\n</code></pre></p> <p>Run the following command and verify the admin_space_left_action is set to single - OR - halt: <pre><code># grep -P -- '^\\h*admin_space_left_action\\h*=\\h*(single|halt)\\b' /etc/audit/auditd.conf\n</code></pre> Verify the output is single or halt Example output: <pre><code>admin_space_left_action = single\n</code></pre></p> <p>Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.2-Configure-Data-Retention/6.2.2.4-Ensure-system-warns-when-audit-logs-are-low-on-space/#remediation","title":"Remediation","text":"<p>Set the space_left_action parameter in /etc/audit/auditd.conf to email, exec, single, or halt: Example: <pre><code>space_left_action = email\n</code></pre></p> <p>Set the admin_space_left_action parameter in /etc/audit/auditd.conf to single or halt: Example: <pre><code>admin_space_left_action = single\n</code></pre></p> <p>Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set space_left_action = email</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure Data Retention","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","8.3 Ensure Adequate Audit Log Storage","T1562","T1562.006","TA0005"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.1-Ensure-changes-to-system-administration-scope-%28sudoers%29-is-collected/","title":"6.2.3.1 Ensure changes to system administration scope (sudoers) is collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.1-Ensure-changes-to-system-administration-scope-%28sudoers%29-is-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># awk '/^ *-w/ \\\n&amp;&amp;/\\/etc\\/sudoers/ \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d -p wa -k scope\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># auditctl -l | awk '/^ *-w/ \\\n&amp;&amp;/\\/etc\\/sudoers/ \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d -p wa -k scope\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.1-Ensure-changes-to-system-administration-scope-%28sudoers%29-is-collected/#remediation","title":"Remediation","text":"<p>Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor scope changes for system administrators. Example: <pre><code># printf \"\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d -p wa -k scope\n\" &gt;&gt; /etc/audit/rules.d/50-scope.rules\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.10-Ensure-successful-file-system-mounts-are-collected/","title":"6.2.3.10 Ensure successful file system mounts are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0010","M1034"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.10-Ensure-successful-file-system-mounts-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;/mount/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S mount -F auid&gt;=1000 -F auid!=unset -k mounts\n-a always,exit -F arch=b32 -S mount -F auid&gt;=1000 -F auid!=unset -k mounts\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;/mount/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S mount -F auid&gt;=1000 -F auid!=-1 -F key=mounts\n-a always,exit -F arch=b32 -S mount -F auid&gt;=1000 -F auid!=-1 -F key=mounts\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0010","M1034"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.10-Ensure-successful-file-system-mounts-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful file system mounts. Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F arch=b32 -S mount -F auid&gt;=$UID_MIN -F auid!=unset -k mounts\n-a always,exit -F arch=b64 -S mount -F auid&gt;=$UID_MIN -F auid!=unset -k mounts\n\" &gt;&gt; /etc/audit/rules.d/50-mounts.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0010","M1034"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.11-Ensure-session-initiation-information-is-collected/","title":"6.2.3.11 Ensure session initiation information is collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0001","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.11-Ensure-session-initiation-information-is-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># awk '/^ *-w/ \\\n&amp;&amp;(/\\/var\\/run\\/utmp/ \\\n||/\\/var\\/log\\/wtmp/ \\\n||/\\/var\\/log\\/btmp/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># auditctl -l | awk '/^ *-w/ \\\n&amp;&amp;(/\\/var\\/run\\/utmp/ \\\n||/\\/var\\/log\\/wtmp/ \\\n||/\\/var\\/log\\/btmp/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0001","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.11-Ensure-session-initiation-information-is-collected/#remediation","title":"Remediation","text":"<p>Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor session initiation information.</p> <p>Example: <pre><code># printf \"\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n\" &gt;&gt; /etc/audit/rules.d/50-session.rules\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0001","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.12-Ensure-login-and-logout-events-are-collected/","title":"6.2.3.12 Ensure login and logout events are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0001","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.12-Ensure-login-and-logout-events-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># awk '/^ *-w/ \\\n&amp;&amp;(/\\/var\\/log\\/lastlog/ \\\n||/\\/var\\/run\\/faillock/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /var/log/lastlog -p wa -k logins\n-w /var/run/faillock -p wa -k logins\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># auditctl -l | awk '/^ *-w/ \\\n&amp;&amp;(/\\/var\\/log\\/lastlog/ \\\n||/\\/var\\/run\\/faillock/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /var/log/lastlog -p wa -k logins\n-w /var/run/faillock -p wa -k logins\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0001","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.12-Ensure-login-and-logout-events-are-collected/#remediation","title":"Remediation","text":"<p>Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor login and logout events.</p> <p>Example: <pre><code># printf \"\n-w /var/log/lastlog -p wa -k logins\n-w /var/run/faillock -p wa -k logins\n\" &gt;&gt; /etc/audit/rules.d/50-login.rules\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0001","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.13-Ensure-file-deletion-events-by-users-are-collected/","title":"6.2.3.13 Ensure file deletion events by users are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.13-Ensure-file-deletion-events-by-users-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/unlink/||/rename/||/unlinkat/||/renameat/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F auid&gt;=1000 -F auid!=unset -k delete\n-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F auid&gt;=1000 -F auid!=unset -k delete\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/unlink/||/rename/||/unlinkat/||/renameat/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid&gt;=1000 -F auid!=-1 -F key=delete\n-a always,exit -F arch=b32 -S unlink,rename,unlinkat,renameat -F auid&gt;=1000 -F auid!=-1 -F key=delete\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.13-Ensure-file-deletion-events-by-users-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor file deletion events by users.</p> <p>64 Bit systems</p> <p>Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid&gt;=${UID_MIN} -F auid!=unset -F key=delete\n-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid&gt;=${UID_MIN} -F auid!=unset -F key=delete\n\" &gt;&gt; /etc/audit/rules.d/50-delete.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.14-Ensure-events-that-modify-the-system%27s-mandatory-access-controls-are-collected/","title":"6.2.3.14 Ensure events that modify the system's Mandatory Access Controls are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.14-Ensure-events-that-modify-the-system%27s-mandatory-access-controls-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># awk '/^ *-w/ \\\n&amp;&amp;(/\\/etc\\/apparmor/ \\\n||/\\/etc\\/apparmor.d/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># auditctl -l | awk '/^ *-w/ \\\n&amp;&amp;(/\\/etc\\/apparmor/ \\\n||/\\/etc\\/apparmor.d/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.14-Ensure-events-that-modify-the-system%27s-mandatory-access-controls-are-collected/#remediation","title":"Remediation","text":"<p>Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.</p> <p>Example: <pre><code># printf \"\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\" &gt;&gt; /etc/audit/rules.d/50-MAC-policy.rules\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.15-Ensure-successful-and-unsuccessful-attempts-to-use-the-chcon-command-are-collected/","title":"6.2.3.15 Ensure successful and unsuccessful attempts to use the chcon command are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.15-Ensure-successful-and-unsuccessful-attempts-to-use-the-chcon-command-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/chcon/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid&gt;=1000 -F auid!=unset -k perm_chng\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/chcon/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -S all -F path=/usr/bin/chcon -F perm=x -F auid&gt;=1000 -F auid!=-1 -F key=perm_chng\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.15-Ensure-successful-and-unsuccessful-attempts-to-use-the-chcon-command-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chcon command.</p> <p>Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid&gt;=${UID_MIN} -F auid!=unset -k perm_chng\n\" &gt;&gt; /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.16-Ensure-successful-and-unsuccessful-attempts-to-use-the-setfacl-command-are-collected/","title":"6.2.3.16 Ensure successful and unsuccessful attempts to use the setfacl command are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.16-Ensure-successful-and-unsuccessful-attempts-to-use-the-setfacl-command-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/setfacl/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid&gt;=1000 -F auid!=unset -k perm_chng\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/setfacl/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -S all -F path=/usr/bin/setfacl -F perm=x -F auid&gt;=1000 -F auid!=-1 -F key=perm_chng\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.16-Ensure-successful-and-unsuccessful-attempts-to-use-the-setfacl-command-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the setfacl command.</p> <p>Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid&gt;=${UID_MIN} -F auid!=unset -k perm_chng\n\" &gt;&gt; /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.17-Ensure-successful-and-unsuccessful-attempts-to-use-the-chacl-command-are-collected/","title":"6.2.3.17 Ensure successful and unsuccessful attempts to use the chacl command are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.17-Ensure-successful-and-unsuccessful-attempts-to-use-the-chacl-command-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/chacl/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid&gt;=1000 -F auid!=unset -k perm_chng\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/chacl/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -S all -F path=/usr/bin/chacl -F perm=x -F auid&gt;=1000 -F auid!=-1 -F key=perm_chng\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.17-Ensure-successful-and-unsuccessful-attempts-to-use-the-chacl-command-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the chacl command.</p> <p>Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid&gt;=${UID_MIN} -F auid!=unset -k perm_chng\n\" &gt;&gt; /etc/audit/rules.d/50-perm_chng.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p> <p>32 Bit systems</p> <p>Follow the same procedures as for 64 bit systems and ignore any entries with b64.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.18-Ensure-successful-and-unsuccessful-attempts-to-use-the-usermod-command-are-collected/","title":"6.2.3.18 Ensure successful and unsuccessful attempts to use the usermod command are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.18-Ensure-successful-and-unsuccessful-attempts-to-use-the-usermod-command-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/sbin\\/usermod/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid&gt;=1000 -F auid!=unset -k usermod\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/sbin\\/usermod/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -S all -F path=/usr/sbin/usermod -F perm=x -F auid&gt;=1000 -F auid!=-1 -F key=usermod\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.18-Ensure-successful-and-unsuccessful-attempts-to-use-the-usermod-command-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor successful and unsuccessful attempts to use the usermod command.</p> <p>Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid&gt;=${UID_MIN} -F auid!=unset -k usermod\n\" &gt;&gt; /etc/audit/rules.d/50-usermod.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p> <p>32 Bit systems</p> <p>Follow the same procedures as for 64 bit systems and ignore any entries with b64.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","8.2 Collect Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.19-Ensure-kernel-module-loading-unloading-and-modification-is-collected/","title":"6.2.3.19 Ensure kernel module loading unloading and modification is collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.19-Ensure-kernel-module-loading-unloading-and-modification-is-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following script to check the on disk rules: <pre><code>#!/usr/bin/env bash\n{\nawk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/init_module/ \\\n||/finit_module/ \\\n||/delete_module/ \\\n||/create_module/ \\\n||/query_module/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;/ -F *perm=x/ \\\n&amp;&amp;/ -F *path=\\/usr\\/bin\\/kmod/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid&gt;=1000 -F auid!=unset -k kernel_modules\n-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid&gt;=1000 -F auid!=unset -k kernel_modules\n</code></pre></p> <p>Running configuration Run the following script to check loaded rules: ```bash liennums=1</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.19-Ensure-kernel-module-loading-unloading-and-modification-is-collected/#usrbinenv-bash","title":"!/usr/bin/env bash","text":"<p>{ auditctl -l | awk '/^ -a always,exit/ \\ &amp;&amp;/ -F arch=b(32|64)/ \\ &amp;&amp;(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \\ &amp;&amp;/ -S/ \\ &amp;&amp;(/init_module/ \\ ||/finit_module/ \\ ||/delete_module/ \\ ||/create_module/ \\ ||/query_module/) \\ &amp;&amp;(/ key= [!-~] $/||/ -k [!-~] *$/)'</p> <p>UID_MIN=$(awk '/^\\sUID_MIN/{print $2}' /etc/login.defs) [ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ -a always,exit/ \\ &amp;&amp;(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \\ &amp;&amp;/ -F auid&gt;=${UID_MIN}/ \\ &amp;&amp;/ -F perm=x/ \\ &amp;&amp;/ -F path=\\/usr\\/bin\\/kmod/ \\ &amp;&amp;(/ key= [!-~] $/||/ -k [!-~] *$/)\" \\ || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\" } <pre><code>Verify the output includes:\n```bash\n-a always,exit -F arch=b64 -S create_module,init_module,delete_module,query_module,finit_module -F auid&gt;=1000 -F auid!=-1 -F key=kernel_modules\n-a always,exit -S all -F path=/usr/bin/kmod -F perm=x -F auid&gt;=1000 -F auid!=-1 -F key=kernel_modules\n</code></pre></p> <p>Symlink audit Run the following script to audit if the symlinks kmod accepts are indeed pointing at it: <pre><code>#!/usr/bin/env bash\n{\na_files=(\"/usr/sbin/lsmod\" \"/usr/sbin/rmmod\" \"/usr/sbin/insmod\" \"/usr/sbin/modinfo\" \"/usr/sbin/modprobe\" \"/usr/sbin/depmod\")\nfor l_file in \"${a_files[@]}\"; do\nif [ \"$(readlink -f \"$l_file\")\" = \"$(readlink -f /bin/kmod)\" ]; then\nprintf \"OK: \\\"$l_file\\\"\\n\"\nelse\nprintf \"Issue with symlink for file: \\\"$l_file\\\"\\n\"\nfi\ndone\n}\n</code></pre> Verify the output states OK. If there is a symlink pointing to a different location it should be investigated.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.19-Ensure-kernel-module-loading-unloading-and-modification-is-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor kernel module modification.</p> <p>Example: <pre><code>#!/usr/bin/env bash\n{\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid&gt;=${UID_MIN} -F auid!=unset -k kernel_modules\n-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid&gt;=${UID_MIN} -F auid!=unset -k kernel_modules\n\" &gt;&gt; /etc/audit/rules.d/50-kernel_modules.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.2-Ensure-actions-as-another-user-are-always-logged/","title":"6.2.3.2 Ensure actions as another user are always logged","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.2-Ensure-actions-as-another-user-are-always-logged/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># awk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;(/ -C *euid!=uid/||/ -C *uid!=euid/) \\\n&amp;&amp;/ -S *execve/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation\n-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># auditctl -l | awk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;(/ -C *euid!=uid/||/ -C *uid!=euid/) \\\n&amp;&amp;/ -S *execve/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S execve -C uid!=euid -F auid!=-1 -F key=user_emulation\n-a always,exit -F arch=b32 -S execve -C uid!=euid -F auid!=-1 -F key=user_emulation\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.2-Ensure-actions-as-another-user-are-always-logged/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor elevated privileges. Example: <pre><code># printf \"\n-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation\n-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation\n\" &gt;&gt; /etc/audit/rules.d/50-user_emulation.rules\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.20-Ensure-the-audit-configuration-is-immutable/","title":"6.2.3.20 Ensure the audit configuration is immutable","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","8.5 Collect Detailed Audit Logs","T1562","T1562.001","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.20-Ensure-the-audit-configuration-is-immutable/#audit","title":"Audit","text":"<p>Run the following command and verify output matches: <pre><code># grep -Ph -- '^\\h*-e\\h+2\\b' /etc/audit/rules.d/*.rules | tail -1\n-e 2\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","8.5 Collect Detailed Audit Logs","T1562","T1562.001","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.20-Ensure-the-audit-configuration-is-immutable/#remediation","title":"Remediation","text":"<p>Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e 2 at the end of the file:</p> <p>Example: <pre><code># printf '\\n%s' \"-e 2\" &gt;&gt; /etc/audit/rules.d/99-finalize.rules\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","8.5 Collect Detailed Audit Logs","T1562","T1562.001","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.21-Ensure-the-running-and-on-disk-configuration-is-the-same/","title":"6.2.3.21 Ensure the running and on disk configuration is the same","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Manual","IG2","IG3","8.5 Collect Detailed Audit Logs"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.21-Ensure-the-running-and-on-disk-configuration-is-the-same/#audit","title":"Audit","text":"<p>Merged rule sets Ensure that all rules in /etc/audit/rules.d have been merged into /etc/audit/audit.rules: <pre><code># augenrules --check\n/usr/sbin/augenrules: No change\n</code></pre> Should there be any drift, run augenrules --load to merge and load all rules.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Manual","IG2","IG3","8.5 Collect Detailed Audit Logs"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.21-Ensure-the-running-and-on-disk-configuration-is-the-same/#remediation","title":"Remediation","text":"<p>If the rules are not aligned across all three () areas, run the following command to merge and load all rules: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code>if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then echo \"Reboot required to load rules\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Manual","IG2","IG3","8.5 Collect Detailed Audit Logs"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.3-Ensure-events-that-modify-the-sudo-log-file-are-collected/","title":"6.2.3.3 Ensure events that modify the sudo log file are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.3-Ensure-events-that-modify-the-sudo-log-file-are-collected/#audit","title":"Audit","text":"<p>Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation \"Ensure sudo log file exists\"</p> <p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nSUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,?.*//' -e 's/\"//g' -e 's|/|\\\\/|g')\n[ -n \"${SUDO_LOG_FILE}\" ] &amp;&amp; awk \"/^ *-w/ \\\n&amp;&amp;/\"${SUDO_LOG_FILE}\"/ \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'SUDO_LOG_FILE' is unset.\\n\"\n}\n</code></pre></p> <p>Verify output of matches: <pre><code>-w /var/log/sudo.log -p wa -k sudo_log_file\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nSUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,?.*//' -e 's/\"//g' -e 's|/|\\\\/|g')\n[ -n \"${SUDO_LOG_FILE}\" ] &amp;&amp; auditctl -l | awk \"/^ *-w/ \\\n&amp;&amp;/\"${SUDO_LOG_FILE}\"/ \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'SUDO_LOG_FILE' is unset.\\n\"\n}\n</code></pre></p> <p>Verify output matches: <pre><code>-w /var/log/sudo.log -p wa -k sudo_log_file\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.3-Ensure-events-that-modify-the-sudo-log-file-are-collected/#remediation","title":"Remediation","text":"<p>Note: This recommendation requires that the sudo logfile is configured. See guidance provided in the recommendation \"Ensure sudo log file exists\" Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the sudo log file. Example: <pre><code># {\nSUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,?.*//' -e 's/\"//g')\n[ -n \"${SUDO_LOG_FILE}\" ] &amp;&amp; printf \"-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file \" &gt;&gt; /etc/audit/rules.d/50-sudo.rules || printf \"ERROR: Variable 'SUDO_LOG_FILE' is unset.\\n\"\n}\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.4-Ensure-events-that-modify-date-and-time-information-are-collected/","title":"6.2.3.4 Ensure events that modify date and time information are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.4-Ensure-events-that-modify-date-and-time-information-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nawk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/adjtimex/ \\\n||/settimeofday/ \\\n||/clock_settime/ ) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n\nawk '/^ *-w/ \\\n&amp;&amp;/\\/etc\\/localtime/ \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n}\n</code></pre></p> <p>Verify output of matches: <pre><code>-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -k time-change\n-w /etc/localtime -p wa -k time-change\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nauditctl -l | awk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/adjtimex/ \\\n||/settimeofday/ \\\n||/clock_settime/ ) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n\nauditctl -l | awk '/^ *-w/ \\\n&amp;&amp;/\\/etc\\/localtime/ \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n}\n</code></pre></p> <p>Verify the output includes: <pre><code>-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=time-change\n-a always,exit -F arch=b32 -S settimeofday,adjtimex -F key=time-change\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change\n-w /etc/localtime -p wa -k time-change\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.4-Ensure-events-that-modify-date-and-time-information-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify date and time information. Example: <pre><code># printf \"\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -k time-change\n-w /etc/localtime -p wa -k time-change\n\" &gt;&gt; /etc/audit/rules.d/50-time-change.rules\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.5-Ensure-events-that-modify-the-system%27s-network-environment-are-collected/","title":"6.2.3.5 Ensure events that modify the system's network environment are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0003","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.5-Ensure-events-that-modify-the-system%27s-network-environment-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following commands to check the on disk rules: <pre><code># awk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/sethostname/ \\\n||/setdomainname/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n\n# awk '/^ *-w/ \\\n&amp;&amp;(/\\/etc\\/issue/ \\\n||/\\/etc\\/issue.net/ \\\n||/\\/etc\\/hosts/ \\\n||/\\/etc\\/network/ \\\n||/\\/etc\\/netplan/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/networks -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n-w /etc/netplan -p wa -k system-locale\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># auditctl -l | awk '/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;(/sethostname/ \\\n||/setdomainname/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n\n# auditctl -l | awk '/^ *-w/ \\\n&amp;&amp;(/\\/etc\\/issue/ \\\n||/\\/etc\\/issue.net/ \\\n||/\\/etc\\/hosts/ \\\n||/\\/etc\\/network/ \\\n||/\\/etc\\/netplan/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output includes: <pre><code>-a always,exit -F arch=b64 -S sethostname,setdomainname -F key=system-locale\n-a always,exit -F arch=b32 -S sethostname,setdomainname -F key=system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/networks -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n-w /etc/netplan -p wa -k system-locale\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0003","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.5-Ensure-events-that-modify-the-system%27s-network-environment-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify the system's network environment. Example: <pre><code># printf \"\n-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/networks -p wa -k system-locale\n-w /etc/network/ -p wa -k system-locale\n-w /etc/netplan/ -p wa -k system-locale\n\" &gt;&gt; /etc/audit/rules.d/50-system_locale.rules\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p> <p>32 Bit systems</p> <p>Follow the same procedures as for 64 bit systems and ignore any entries with b64.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0003","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.6-Ensure-use-of-privileged-commands-are-collected/","title":"6.2.3.6 Ensure use of privileged commands are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0002","M1026"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.6-Ensure-use-of-privileged-commands-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following script to check on disk rules: <pre><code>#!/usr/bin/env bash\n{\nfor PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv \"noexec|nosuid\" | awk '{print\n$1}'); do\nfor PRIVILEGED in $(find \"${PARTITION}\" -xdev -perm /6000 -type f); do\ngrep -qr \"${PRIVILEGED}\" /etc/audit/rules.d &amp;&amp; printf \"OK: '${PRIVILEGED}' found in auditing rules.\\n\" || printf \"Warning: '${PRIVILEGED}' not found in on disk configuration.\\n\"\ndone\ndone\n}\n</code></pre> Verify that all output is OK.</p> <p>Running configuration Run the following script to check loaded rules: <pre><code>#!/usr/bin/env bash\n{\nRUNNING=$(auditctl -l)\n[ -n \"${RUNNING}\" ] &amp;&amp; for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv \"noexec|nosuid\" | awk '{print $1}'); do\nfor PRIVILEGED in $(find \"${PARTITION}\" -xdev -perm /6000 -type f); do\nprintf -- \"${RUNNING}\" | grep -q \"${PRIVILEGED}\" &amp;&amp; printf \"OK: '${PRIVILEGED}' found in auditing rules.\\n\" || printf \"Warning: '${PRIVILEGED}' not found in running configuration.\\n\"\ndone\ndone \\\n|| printf \"ERROR: Variable 'RUNNING' is unset.\\n\"\n}\n</code></pre></p> <p>Verify that all output is OK.</p> <p>Special mount points If there are any special mount points that are not visible by default from findmnt as per the above audit, said file systems would have to be manually audited.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0002","M1026"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.6-Ensure-use-of-privileged-commands-are-collected/#remediation","title":"Remediation","text":"<p>Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor the use of privileged commands.</p> <p>Example script: <pre><code>#!/usr/bin/env bash\n{\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\nAUDIT_RULE_FILE=\"/etc/audit/rules.d/50-privileged.rules\"\nNEW_DATA=()\nfor PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv \"noexec|nosuid\" | awk '{print\n$1}'); do\nreadarray -t DATA &lt; &lt;(find \"${PARTITION}\" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print \"-a always,exit -F path=\" $1 \" -F perm=x -F auid&gt;=\"UID_MIN\" -F auid!=unset -k privileged\" }')\nfor ENTRY in \"${DATA[@]}\"; do\nNEW_DATA+=(\"${ENTRY}\")\ndone\ndone\nreadarray &amp;&gt; /dev/null -t OLD_DATA &lt; \"${AUDIT_RULE_FILE}\"\nCOMBINED_DATA=( \"${OLD_DATA[@]}\" \"${NEW_DATA[@]}\" )\nprintf '%s\\n' \"${COMBINED_DATA[@]}\" | sort -u &gt; \"${AUDIT_RULE_FILE}\"\n}\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p> <p>Special mount points If there are any special mount points that are not visible by default from just scanning /, change the PARTITION variable to the appropriate partition and re-run the remediation.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0002","M1026"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.7-Ensure-unsuccessful-file-access-attempts-are-collected/","title":"6.2.3.7 Ensure unsuccessful file access attempts are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0007","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.7-Ensure-unsuccessful-file-access-attempts-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;(/ -F *exit=-EACCES/||/ -F *exit=-EPERM/) \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;/creat/ \\\n&amp;&amp;/open/ \\\n&amp;&amp;/truncate/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output includes: <pre><code>-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -k access\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;(/ -F *exit=-EACCES/||/ -F *exit=-EPERM/) \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;/creat/ \\\n&amp;&amp;/open/ \\\n&amp;&amp;/truncate/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output includes: <pre><code>-a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=-EACCES -F auid&gt;=1000 -F auid!=-1 -F key=access\n-a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=-EPERM -F auid&gt;=1000 -F auid!=-1 -F key=access\n-a always,exit -F arch=b32 -S open,truncate,ftruncate,creat,openat -F exit=-EACCES -F auid&gt;=1000 -F auid!=-1 -F key=access\n-a always,exit -F arch=b32 -S open,truncate,ftruncate,creat,openat -F exit=-EPERM -F auid&gt;=1000 -F auid!=-1 -F key=access\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0007","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.7-Ensure-unsuccessful-file-access-attempts-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor unsuccessful file access attempts. Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid&gt;=${UID_MIN} -F auid!=unset -k access\n-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid&gt;=${UID_MIN} -F auid!=unset -k access\n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid&gt;=${UID_MIN} -F auid!=unset -k access\n-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid&gt;=${UID_MIN} -F auid!=unset -k access\n\" &gt;&gt; /etc/audit/rules.d/50-access.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0007","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.8-Ensure-events-that-modify-user-group-information-are-collected/","title":"6.2.3.8 Ensure events that modify user/group information are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.8-Ensure-events-that-modify-user-group-information-are-collected/#audit","title":"Audit","text":"<p>On disk configuration Run the following command to check the on disk rules: <pre><code># awk '/^ *-w/ \\\n&amp;&amp;(/\\/etc\\/group/ \\\n||/\\/etc\\/passwd/ \\\n||/\\/etc\\/gshadow/ \\\n||/\\/etc\\/shadow/ \\\n||/\\/etc\\/security\\/opasswd/ \\\n||/\\/etc\\/nsswitch.conf/ \\\n||/\\/etc\\/pam.conf/ \\\n||/\\/etc\\/pam.d/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n-w /etc/nsswitch.conf -p wa -k identity\n-w /etc/pam.conf -p wa -k identity\n-w /etc/pam.d -p wa -k identity```\n\n**Running configuration**\nRun the following command to check loaded rules:\n```bash\n# auditctl -l | awk '/^ *-w/ \\\n&amp;&amp;(/\\/etc\\/group/ \\\n||/\\/etc\\/passwd/ \\\n||/\\/etc\\/gshadow/ \\\n||/\\/etc\\/shadow/ \\\n||/\\/etc\\/security\\/opasswd/ \\\n||/\\/etc\\/nsswitch.conf/ \\\n||/\\/etc\\/pam.conf/ \\\n||/\\/etc\\/pam.d/) \\\n&amp;&amp;/ +-p *wa/ \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'\n</code></pre></p> <p>Verify the output matches: <pre><code>-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n-w /etc/nsswitch.conf -p wa -k identity\n-w /etc/pam.conf -p wa -k identity\n-w /etc/pam.d -p wa -k identity\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.8-Ensure-events-that-modify-user-group-information-are-collected/#remediation","title":"Remediation","text":"<p>Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor events that modify user/group information.</p> <p>Example: <pre><code># printf \"\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n-w /etc/nsswitch.conf -p wa -k identity\n-w /etc/pam.conf -p wa -k identity\n-w /etc/pam.d -p wa -k identity\n\" &gt;&gt; /etc/audit/rules.d/50-identity.rules\n</code></pre></p> <p>Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0004","M1047"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.9-Ensure-discretionary-access-control-permission-modification-events-are-collected/","title":"6.2.3.9 Ensure discretionary access control permission modification events are collected","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.9-Ensure-discretionary-access-control-permission-modification-events-are-collected/#audit","title":"Audit","text":"<p>Note: Output showing all audited syscalls, e.g. (-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat,chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod) is also acceptable. These have been separated by function on the displayed output for clarity.</p> <p>On disk configuration Run the following command to check the on disk rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;(/chmod/||/fchmod/||/fchmodat/ \\\n||/chown/||/fchown/||/fchownat/||/lchown/ \\\n||/setxattr/||/lsetxattr/||/fsetxattr/ \\\n||/removexattr/||/lremovexattr/||/fremovexattr/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod\n</code></pre></p> <p>Running configuration Run the following command to check loaded rules: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; auditctl -l | awk \"/^ *-a *always,exit/ \\\n&amp;&amp;/ -F *arch=b(32|64)/ \\\n&amp;&amp;(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \\\n&amp;&amp;/ -S/ \\\n&amp;&amp;/ -F *auid&gt;=${UID_MIN}/ \\\n&amp;&amp;(/chmod/||/fchmod/||/fchmodat/ \\\n||/chown/||/fchown/||/fchownat/||/lchown/ \\\n||/setxattr/||/lsetxattr/||/fsetxattr/ \\\n||/removexattr/||/lremovexattr/||/fremovexattr/) \\\n&amp;&amp;(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" \\\n|| printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Verify the output matches: <pre><code>-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid&gt;=1000 -F auid!=-1 -F key=perm_mod\n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid&gt;=1000 -F auid!=-1 -F key=perm_mod\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid&gt;=1000 -F auid!=-1 -F key=perm_mod\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid&gt;=1000 -F auid!=-1 -F key=perm_mod\n-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=1000 -F auid!=-1 -F key=perm_mod\n-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=1000 -F auid!=-1 -F key=perm_mod\n</code></pre></p> <p>32 Bit systems</p> <p>Follow the same procedures as for 64 bit systems and ignore any entries with b64.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.3-Configure-auditd-rules/6.2.3.9-Ensure-discretionary-access-control-permission-modification-events-are-collected/#remediation","title":"Remediation","text":"<p>Create audit rules Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension, with the relevant rules to monitor discretionary access control permission modification events. Example: <pre><code># {\nUID_MIN=$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\n[ -n \"${UID_MIN}\" ] &amp;&amp; printf \"\n-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid&gt;=${UID_MIN} -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid&gt;=${UID_MIN} -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid&gt;=${UID_MIN} -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid&gt;=${UID_MIN} -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=${UID_MIN} -F auid!=unset -F key=perm_mod\n-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid&gt;=${UID_MIN} -F auid!=unset -F key=perm_mod\n\" &gt;&gt; /etc/audit/rules.d/50-perm_mod.rules || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"\n}\n</code></pre></p> <p>Load audit rules Merge and load the rules into active configuration: <pre><code># augenrules --load\n</code></pre></p> <p>Check if reboot is required. <pre><code># if [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then printf \"Reboot required to load rules\\n\"; fi\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd rules","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1562","T1562.006","TA0005","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.1-Ensure-audit-log-files-mode-is-configured/","title":"6.2.4.1 Ensure audit log files mode is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.1-Ensure-audit-log-files-mode-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify audit log files are mode 0640 or more restrictive: <pre><code>#!/usr/bin/env bash\n{\nl_perm_mask=\"0137\"\nif [ -e \"/etc/audit/auditd.conf\" ]; then\nl_audit_log_directory=\"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print $2}' /etc/audit/auditd.conf | xargs)\")\"\nif [ -d \"$l_audit_log_directory\" ]; then\nl_maxperm=\"$(printf '%o' $(( 0777 &amp; ~$l_perm_mask )) )\"\na_files=()\nwhile IFS= read -r -d $'\\0' l_file; do\n[ -e \"$l_file\" ] &amp;&amp; a_files+=(\"$l_file\")\ndone &lt; &lt;(find \"$l_audit_log_directory\" -maxdepth 1 -type f -perm /\"$l_perm_mask\" -print0)\nif (( \"${#a_files[@]}\" &gt; 0 )); then\nfor l_file in \"${a_files[@]}\"; do\nl_file_mode=\"$(stat -Lc '%#a' \"$l_file\")\"\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - File: \\\"$l_file\\\" is mode: \\\"$l_file_mode\\\"\\n (should be mode: \\\"$l_maxperm\\\" or more restrictive)\\n\"\ndone\nelse\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - All files in \\\"$l_audit_log_directory\\\" are mode: \\\"$l_maxperm\\\" or more restrictive\"\nfi\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - Log file directory not set in \\\"/etc/audit/auditd.conf\\\" please set log file directory\"\nfi\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - File: \\\"/etc/audit/auditd.conf\\\" not found.\\n - ** Verify auditd is installed **\"\nfi\n}\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.1-Ensure-audit-log-files-mode-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to remove more permissive mode than 0640 from audit log files: <pre><code># [ -f /etc/audit/auditd.conf ] &amp;&amp; find \"$(dirname $(awk -F \"=\" '/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} +\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.10-Ensure-audit-tools-group-owner-is-configured/","title":"6.2.4.10 Ensure audit tools group owner is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","Configure System Accounting (auditd)","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.10-Ensure-audit-tools-group-owner-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify the audit tools are owned by the group root <pre><code># stat -Lc \"%n %G\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules | awk '$2 != \"root\" {print}'\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Configure System Accounting (auditd)","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.10-Ensure-audit-tools-group-owner-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to change group ownership to the groop root: <pre><code># chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Configure System Accounting (auditd)","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.2-Ensure-audit-log-files-owner-is-configured/","title":"6.2.4.2 Ensure audit log files owner is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.2-Ensure-audit-log-files-owner-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify audit log files are owned by the root user: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\"\nif [ -e \"/etc/audit/auditd.conf\" ]; then\nl_audit_log_directory=\"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print $2}' /etc/audit/auditd.conf | xargs)\")\"\nif [ -d \"$l_audit_log_directory\" ]; then\nwhile IFS= read -r -d $'\\0' l_file; do\nl_output2=\"$l_output2\\n - File: \\\"$l_file\\\" is owned by user: \\\"$(stat -Lc '%U' \"$l_file\")\\\"\\n (should be owned by user: \\\"root\\\")\\n\"\ndone &lt; &lt;(find \"$l_audit_log_directory\" -maxdepth 1 -type f ! -user root -print0)\nelse\nl_output2=\"$l_output2\\n - Log file directory not set in \\\"/etc/audit/auditd.conf\\\" please set log file directory\"\nfi\nelse\nl_output2=\"$l_output2\\n - File: \\\"/etc/audit/auditd.conf\\\" not found.\\n - ** Verify auditd is installed **\"\nfi\nif [ -z \"$l_output2\" ]; then\nl_output=\"$l_output\\n - All files in \\\"$l_audit_log_directory\\\" are owned by user: \\\"root\\\"\\n\"\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - * Correctly configured * :$l_output\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :$l_output2\\n\"\nfi\n}\n</code></pre></p> <p>Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.2-Ensure-audit-log-files-owner-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to configure the audit log files to be owned by the root user: <pre><code># [ -f /etc/audit/auditd.conf ] &amp;&amp; find \"$(dirname $(awk -F \"=\" '/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))\" -type f ! -user root -exec chown root {} +\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.3-Ensure-audit-log-files-group-owner-is-configured/","title":"6.2.4.3 Ensure audit log files group owner is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.3-Ensure-audit-log-files-group-owner-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify log_group parameter is set to either adm or root in /etc/audit/auditd.conf: <pre><code># grep -Piws -- '^\\h*log_group\\h*=\\h*\\H+\\b' /etc/audit/auditd.conf | grep -Pvi -- '(adm)'\n</code></pre> Nothing should be returned</p> <p>Using the path of the directory containing the audit logs, verify audit log files are owned by the \"root\" or \"adm\" group by running the following script: <pre><code>#!/usr/bin/env bash\n{\nif [ -e /etc/audit/auditd.conf ]; then\nl_fpath=\"$(dirname \"$(awk -F \"=\" '/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)\")\"\nfind -L \"$l_fpath\" -not -path \"$l_fpath\"/lost+found -type f \\( ! -group root -a ! -group adm \\) -exec ls -l {} +\nfi\n}\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.3-Ensure-audit-log-files-group-owner-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to configure the audit log files to be group owned by adm: <pre><code>find $(dirname $(awk -F\"=\" '/^\\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f \\( ! -group adm -a ! -group root \\) -exec chgrp adm {} +\n</code></pre></p> <p>Run the following command to set the log_group parameter in the audit configuration file to log_group = adm: <pre><code># sed -ri 's/^\\s*#?\\s*log_group\\s*=\\s*\\S+(\\s*#.*)?.*$/log_group = adm\\1/' /etc/audit/auditd.conf\n</code></pre></p> <p>Run the following command to restart the audit daemon to reload the configuration file: <pre><code># systemctl restart auditd\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.4-Ensure-the-audit-log-file-directory-mode-is-configured/","title":"6.2.4.4 Ensure the audit log file directory mode is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.4-Ensure-the-audit-log-file-directory-mode-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify the audit log directory is mode 0750 or more restrictive: <pre><code>#!/usr/bin/env bash\n{\nl_perm_mask=\"0027\"\nif [ -e \"/etc/audit/auditd.conf\" ]; then\nl_audit_log_directory=\"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print $2}' /etc/audit/auditd.conf | xargs)\")\"\nif [ -d \"$l_audit_log_directory\" ]; then\nl_maxperm=\"$(printf '%o' $(( 0777 &amp; ~$l_perm_mask )) )\"\nl_directory_mode=\"$(stat -Lc '%#a' \"$l_audit_log_directory\")\"\nif [ $(( $l_directory_mode &amp; $l_perm_mask )) -gt 0 ]; then\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - Directory: \\\"$l_audit_log_directory\\\" is mode: \\\"$l_directory_mode\\\"\\n (should be mode: \\\"$l_maxperm\\\" or more restrictive)\\n\"\nelse\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - Directory: \\\"$l_audit_log_directory\\\" is mode: \\\"$l_directory_mode\\\"\\n (should be mode: \\\"$l_maxperm\\\" or more restrictive)\\n\"\nfi\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - Log file directory not set in \\\"/etc/audit/auditd.conf\\\" please set log file directory\"\nfi\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - File: \\\"/etc/audit/auditd.conf\\\" not found\\n - ** Verify auditd is installed **\"\nfi\n}\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.4-Ensure-the-audit-log-file-directory-mode-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to configure the audit log directory to have a mode of \"0750\" or less permissive: <pre><code># chmod g-w,o-rwx \"$(dirname \"$(awk -F= '/^\\s*log_file\\s*/{print $2}' /etc/audit/auditd.conf | xargs)\")\"\n</code></pre></p> <p>Default Value: 750</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.5-Ensure-audit-configuration-files-mode-is-configured/","title":"6.2.4.5 Ensure audit configuration files mode is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.5-Ensure-audit-configuration-files-mode-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify that the audit configuration files are mode 0640 or more restrictive: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\" l_perm_mask=\"0137\"\nl_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_perm_mask )) )\"\nwhile IFS= read -r -d $'\\0' l_fname; do\nl_mode=$(stat -Lc '%#a' \"$l_fname\")\nif [ $(( \"$l_mode\" &amp; \"$l_perm_mask\" )) -gt 0 ]; then\nl_output2=\"$l_output2\\n - file: \\\"$l_fname\\\" is mode: \\\"$l_mode\\\" (should be mode: \\\"$l_maxperm\\\" or more restrictive)\"\nfi\ndone &lt; &lt;(find /etc/audit/ -type f \\( -name \"*.conf\" -o -name '*.rules' \\) -print0)\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - All audit configuration files are mode: \\\"$l_maxperm\\\" or more restrictive\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n$l_output2\"\nfi\n}\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.5-Ensure-audit-configuration-files-mode-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to remove more permissive mode than 0640 from the audit configuration files: <pre><code># find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) -exec chmod u-x,g-wx,o-rwx {} +\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.6-Ensure-audit-configuration-files-owner-is-configured/","title":"6.2.4.6 Ensure audit configuration files owner is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.6-Ensure-audit-configuration-files-owner-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that the audit configuration files are owned by the root user: <pre><code># find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -user root\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.6-Ensure-audit-configuration-files-owner-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to change ownership to root user: <pre><code># find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -user root -exec chown root {} +\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.7-Ensure-audit-configuration-files-group-owner-is-configured/","title":"6.2.4.7 Ensure audit configuration files group owner is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.7-Ensure-audit-configuration-files-group-owner-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify that the audit configuration files are owned by the group root: <pre><code># find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group root\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.7-Ensure-audit-configuration-files-group-owner-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to change group to root: <pre><code># find /etc/audit/ -type f \\( -name '*.conf' -o -name '*.rules' \\) ! -group root -exec chgrp root {} +\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.8-Ensure-audit-tools-mode-is-configured/","title":"6.2.4.8 Ensure audit tools mode is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.8-Ensure-audit-tools-mode-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify the audit tools are mode 0755 or more restrictive: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\" l_perm_mask=\"0022\"\nl_maxperm=\"$( printf '%o' $(( 0777 &amp; ~$l_perm_mask )) )\"\na_audit_tools=(\"/sbin/auditctl\" \"/sbin/aureport\" \"/sbin/ausearch\" \"/sbin/autrace\" \"/sbin/auditd\" \"/sbin/augenrules\")\nfor l_audit_tool in \"${a_audit_tools[@]}\"; do\nl_mode=\"$(stat -Lc '%#a' \"$l_audit_tool\")\"\nif [ $(( \"$l_mode\" &amp; \"$l_perm_mask\" )) -gt 0 ]; then\nl_output2=\"$l_output2\\n - Audit tool \\\"$l_audit_tool\\\" is mode: \\\"$l_mode\\\" and should be mode: \\\"$l_maxperm\\\" or more restrictive\"\nelse\nl_output=\"$l_output\\n - Audit tool \\\"$l_audit_tool\\\" is correctly configured to mode: \\\"$l_mode\\\"\"\nfi\ndone\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - * Correctly configured * :$l_output\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :$l_output2\\n\"\n[ -n \"$l_output\" ] &amp;&amp; echo -e \"\\n - * Correctly configured * :\\n$l_output\\n\"\nfi\nunset a_audit_tools\n}\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.8-Ensure-audit-tools-mode-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to remove more permissive mode from the audit tools: <pre><code># chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.9-Ensure-audit-tools-owner-is-configured/","title":"6.2.4.9 Ensure audit tools owner is configured","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.9-Ensure-audit-tools-owner-is-configured/#audit","title":"Audit","text":"<p>Run the following command to verify the audit tools are owned by the root user: <pre><code># stat -Lc \"%n %U\" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules | awk '$2 != \"root\" {print}'\n</code></pre> Nothing should be returned</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.2-System-Auditing/6.2.4-Configure-auditd-file-access/6.2.4.9-Ensure-audit-tools-owner-is-configured/#remediation","title":"Remediation","text":"<p>Run the following command to change the owner of the audit tools to the root user: <pre><code># chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","System Auditing","Configure auditd file access","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1070","T1070.002","T1083","TA0007","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.1-Ensure-AIDE-is-installed/","title":"6.3.1 Ensure AIDE is installed","text":"","tags":["Level 1","Workstation","Server","Logging and Auditing","Configure Integrity Checking","Automated","IG3","3.14 Log Sensitive Data Access","T1565","T1565.001","TA0001","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.1-Ensure-AIDE-is-installed/#audit","title":"Audit","text":"<p>Run the following command to verify aide is installed: <pre><code># dpkg-query -s aide &amp;&gt;/dev/null &amp;&amp; echo \"aide is installed\"\naide is installed\n</code></pre></p> <p>Run the following command to verify aide-common is installed: <pre><code># dpkg-query -s aide-common &amp;&gt;/dev/null &amp;&amp; echo \"aide-common is installed\"\naide-common is installed\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","Configure Integrity Checking","Automated","IG3","3.14 Log Sensitive Data Access","T1565","T1565.001","TA0001","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.1-Ensure-AIDE-is-installed/#remediation","title":"Remediation","text":"<p>Install AIDE using the appropriate package manager or manual installation: <pre><code># apt install aide aide-common\n</code></pre></p> <p>Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.</p> <p>Run the following commands to initialize AIDE: <pre><code># aideinit\n# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db\n</code></pre></p>","tags":["Level 1","Workstation","Server","Logging and Auditing","Configure Integrity Checking","Automated","IG3","3.14 Log Sensitive Data Access","T1565","T1565.001","TA0001","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.2-Ensure-filesystem-integrity-is-regularly-checked/","title":"6.3.2 Ensure filesystem integrity is regularly checked","text":"","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem Integrity Checking","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1036","T1036.002","T1036.003","T1036.004","T1036.005","T1565","T1565.001","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.2-Ensure-filesystem-integrity-is-regularly-checked/#audit","title":"Audit","text":"<p>Run the following command: <pre><code># systemctl list-unit-files | awk '$1~/^dailyaidecheck\\.(timer|service)$/{print $1 \"\\t\" $2}'\n</code></pre></p> <p>Example output: <pre><code>dailyaidecheck.service  static\ndailyaidecheck.timer    enabled\n</code></pre></p> <p>Verify dailyaidecheck.timer is enabled and dailyaidecheck.service is either static or enabled. Run the following command to verify dailyaidecheck.timer is active: <pre><code># systemctl is-active dailyaidecheck.timer\nactive\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem Integrity Checking","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1036","T1036.002","T1036.003","T1036.004","T1036.005","T1565","T1565.001","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.2-Ensure-filesystem-integrity-is-regularly-checked/#remediation","title":"Remediation","text":"<p>Run the following command to unmask dailyaidecheck.timer and dailyaidecheck.service: <pre><code># systemctl unmask dailyaidecheck.timer dailyaidecheck.service\n</code></pre></p> <p>Run the following command to enable and start dailyaidecheck.timer: <pre><code># systemctl --now enable dailyaidecheck.timer\n</code></pre></p>","tags":["Level 1","Workstation","Server","Initial Setup","Filesystem Integrity Checking","Automated","IG2","IG3","8.5 Collect Detailed Audit Logs","T1036","T1036.002","T1036.003","T1036.004","T1036.005","T1565","T1565.001","TA0040","M1022"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.3-Ensure-cryptographic-mechanisms-are-used-to-protect-the-integrity-of-audit-tools/","title":"6.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tool","text":"","tags":["Level 2","Workstation","Server","Logging and Auditing","Configure Integrity Checking","Automated","IG1","IG2","IG3","4.1 Establish and Maintain a Secure Configuration Process","T1070","T1070.002","T1083","TA0007"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.3-Ensure-cryptographic-mechanisms-are-used-to-protect-the-integrity-of-audit-tools/#audit","title":"Audit","text":"<p>Verify that Advanced Intrusion Detection Environment (AIDE) is properly configured. Run the following script to verify: - AIDE is configured to use cryptographic mechanisms to protect the integrity of audit tools: - The following audit tool files include the options \"p, i, n, u, g, s, b, acl, xattrs and sha512\"  - auditctl  - auditd  - ausearch  - aureport  - autrace  - augenrules</p> <pre><code>#!/usr/bin/env bash\n{\na_output=() a_output2=() l_tool_dir=\"$(readlink -f /sbin)\"\na_items=(\"p\" \"i\" \"n\" \"u\" \"g\" \"s\" \"b\" \"acl\" \"xattrs\" \"sha512\")\nl_aide_cmd=\"$(whereis aide | awk '{print $2}')\"\na_audit_files=(\"auditctl\" \"auditd\" \"ausearch\" \"aureport\" \"autrace\" \"augenrules\")\nif [ -f \"$l_aide_cmd\" ] &amp;&amp; command -v \"$l_aide_cmd\" &amp;&gt;/dev/null; then\na_aide_conf_files=(\"$(find -L /etc -type f -name 'aide.conf')\")\nf_file_par_chk()\n{\na_out2=()\nfor l_item in \"${a_items[@]}\"; do\n! grep -Psiq -- '(\\h+|\\+)'\"$l_item\"'(\\h+|\\+)' &lt;&lt;&lt; \"$l_out\" &amp;&amp; \\a_out2+=(\" - Missing the \\\"$l_item\\\" option\")\ndone\nif [ \"${#a_out2[@]}\" -gt \"0\" ]; then\na_output2+=(\" - Audit tool file: \\\"$l_file\\\"\" \"${a_out2[@]}\")\nelse\na_output+=(\" - Audit tool file: \\\"$l_file\\\" includes:\" \" \\\"${a_items[*]}\\\"\")\nfi\n}\nfor l_file in \"${a_audit_files[@]}\"; do\nif [ -f \"$l_tool_dir/$l_file\" ]; then\nl_out=\"$(\"$l_aide_cmd\" --config \"${a_aide_conf_files[@]}\" -p f:\"$l_tool_dir/$l_file\")\"\nf_file_par_chk\nelse\na_output+=(\" - Audit tool file \\\"$l_file\\\" doesn't exist\")\nfi\ndone\nelse\na_output2+=(\" - The command \\\"aide\\\" was not found\" \"Please install AIDE\")\nfi\nif [ \"${#a_output2[@]}\" -le 0 ]; then\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** PASS **\" \"${a_output[@]}\" \"\"\nelse\nprintf '%s\\n' \"\" \"- Audit Result:\" \" ** FAIL **\" \" - Reason(s) for audit failure:\" \"${a_output2[@]}\"\n[ \"${#a_output[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"- Correctly set:\" \"${a_output[@]}\" \"\"\nfi\n}\n</code></pre> <p>Note: The script is written to read the \"winning\" configuration setting, to include any configuration settings in files included as part of the @@x_include setting.</p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Configure Integrity Checking","Automated","IG1","IG2","IG3","4.1 Establish and Maintain a Secure Configuration Process","T1070","T1070.002","T1083","TA0007"]},{"location":"6-Logging-and-Auditing/6.3-Configure-Integrity-Checking/6.3.3-Ensure-cryptographic-mechanisms-are-used-to-protect-the-integrity-of-audit-tools/#remediation","title":"Remediation","text":"<p>Run the following command to determine the absolute path to the non-symlinked version on the audit tools: <pre><code># readlink -f /sbin\n</code></pre></p> <p>The output will be either /usr/sbin - OR - /sbin. Ensure the correct path is used. Edit /etc/aide/aide.conf and add or update the following selection lines replacing  with the correct path returned in the command above: <pre><code># Audit Tools\n&lt;PATH&gt;/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512\n&lt;PATH&gt;/auditd p+i+n+u+g+s+b+acl+xattrs+sha512\n&lt;PATH&gt;/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512\n&lt;PATH&gt;/aureport p+i+n+u+g+s+b+acl+xattrs+sha512\n&lt;PATH&gt;/autrace p+i+n+u+g+s+b+acl+xattrs+sha512\n&lt;PATH&gt;/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512\n</code></pre> <p>Example: <pre><code># printf '%s\\n' \"\" \"# Audit Tools\" \"$(readlink -f /sbin/auditctl)\np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/auditd)\np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/ausearch)\np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/aureport)\np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/autrace)\np+i+n+u+g+s+b+acl+xattrs+sha512\" \"$(readlink -f /sbin/augenrules)\np+i+n+u+g+s+b+acl+xattrs+sha512\" &gt;&gt; /etc/aide/aide.conf\n</code></pre></p> <p>Note: - IF - /etc/aide/aide.conf includes a @@x_include statement: -  and each executable config file must be owned by the current user or root - They must not be group or world-writable <p>Example: <pre><code>@@x_include /etc/aide.conf.d ^[a-zA-Z0-9_-]+$\n</code></pre></p>","tags":["Level 2","Workstation","Server","Logging and Auditing","Configure Integrity Checking","Automated","IG1","IG2","IG3","4.1 Establish and Maintain a Secure Configuration Process","T1070","T1070.002","T1083","TA0007"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.1-Ensure-permissions-on-etc-passwd-are-configured/","title":"7.1.1 Ensure permissions on /etc/passwd are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.1-Ensure-permissions-on-etc-passwd-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/passwd is mode 644 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/passwd\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.1-Ensure-permissions-on-etc-passwd-are-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd: <pre><code># chmod u-x,go-wx /etc/passwd\n# chown root:root /etc/passwd\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.10-Ensure-permissions-on-etc-security-opasswd-are-configured/","title":"7.1.10 Ensure permissions on /etc/security/opasswd are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.10-Ensure-permissions-on-etc-security-opasswd-are-configured/#audit","title":"Audit","text":"<p>Run the following commands to verify /etc/security/opasswd and /etc/security/opasswd.old are mode 600 or more restrictive, Uid is 0/root and Gid is 0/root if they exist: <pre><code># [ -e \"/etc/security/opasswd\" ] &amp;&amp; stat -Lc '%n Access: (%#a/%A) Uid: (%u/ %U) Gid: ( %g/ %G)' /etc/security/opasswd\n\n/etc/security/opasswd Access: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/root)\n-OR-\nNothing is returned\n# [ -e \"/etc/security/opasswd.old\" ] &amp;&amp; stat -Lc '%n Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/security/opasswd.old\n\n/etc/security/opasswd.old Access: (0600/-rw-------) Uid: ( 0/ root) Gid: (0/ root)\n-OR-\nNothing is returned\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.10-Ensure-permissions-on-etc-security-opasswd-are-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to remove excess permissions, set owner, and set group on etc/security/opasswd and /etc/security/opasswd.old is they exist: <pre><code># [ -e \"/etc/security/opasswd\" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd\n# [ -e \"/etc/security/opasswd\" ] &amp;&amp; chown root:root /etc/security/opasswd\n# [ -e \"/etc/security/opasswd.old\" ] &amp;&amp; chmod u-x,go-rwx /etc/security/opasswd.old\n# [ -e \"/etc/security/opasswd.old\" ] &amp;&amp; chown root:root /etc/security/opasswd.old\n</code></pre></p> <p>Default Value: /etc/security/opasswd Access: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.11-Ensure-world-writable-files-and-directories-are-secured/","title":"7.1.11 Ensure world writable files and directories are secured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","T1548","TA0005","M1022","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.11-Ensure-world-writable-files-and-directories-are-secured/#audit","title":"Audit","text":"<p>Run the following script to verify: - No world writable files exist - No world writable directories without the sticky bit exist <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\"\nl_smask='01000'\na_file=(); a_dir=() # Initialize arrays\na_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \"*/kubelet/plugins/*\" -a ! -path \"/sys/*\" -a ! -path \"/snap/*\")\nwhile IFS= read -r l_mount; do\nwhile IFS= read -r -d $'\\0' l_file; do\nif [ -e \"$l_file\" ]; then\n[ -f \"$l_file\" ] &amp;&amp; a_file+=(\"$l_file\") # Add WR files\nif [ -d \"$l_file\" ]; then # Add directories w/o sticky bit\nl_mode=\"$(stat -Lc '%#a' \"$l_file\")\"\n[ ! $(( $l_mode &amp; $l_smask )) -gt 0 ] &amp;&amp; a_dir+=(\"$l_file\")\nfi\nfi\ndone &lt; &lt;(find \"$l_mount\" -xdev \\( \"${a_path[@]}\" \\) \\( -type f -o -type d \\) -perm -0002 -print0 2&gt; /dev/null)\ndone &lt; &lt;(findmnt -Dkerno fstype,target | awk '($1 !~/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~/^(\\/run\\/user\\/|\\/tmp|\\/var\\/tmp)/){print $2}')\nif ! (( ${#a_file[@]} &gt; 0 )); then\nl_output=\"$l_output\\n - No world writable files exist on the local filesystem.\"\nelse\nl_output2=\"$l_output2\\n - There are \\\"$(printf '%s' \"${#a_file[@]}\")\\\" World writable files on the system.\\n- The following is a list of World writable files:\\n$(printf '%s\\n' \"${a_file[@]}\")\\n- end of list\\n\"\nfi\nif ! (( ${#a_dir[@]} &gt; 0 )); then\nl_output=\"$l_output\\n - Sticky bit is set on world writable directories on the local filesystem.\"\nelse\nl_output2=\"$l_output2\\n - There are \\\"$(printf '%s' \"${#a_dir[@]}\")\\\" World writable directories without the sticky bit on the system.\\n- The following is a list of World writable directories without the sticky bit:\\n$(printf '%s\\n' \"${a_dir[@]}\")\\n- end of list\\n\"\nfi\nunset a_path; unset a_arr; unset a_file; unset a_dir # Remove arrays\n# If l_output2 is empty, we pass\nif [ -z \"$l_output2\" ]; then\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - * Correctly configured * :\\n$l_output\\n\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :\\n$l_output2\"\n[ -n \"$l_output\" ] &amp;&amp; echo -e \"- * Correctly configured * :\\n$l_output\\n\"\nfi\n}\n</code></pre></p> <p>Note: On systems with a large number of files and/or directories, this audit may be a long running process</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","T1548","TA0005","M1022","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.11-Ensure-world-writable-files-and-directories-are-secured/#remediation","title":"Remediation","text":"<ul> <li>World Writable Files:</li> <li>It is recommended that write access is removed from other with the command ( chmod o-w  ), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file. <li>World Writable Directories:</li> <li>Set the sticky bit on all world writable directories with the command ( chmod a+t  ) <p>Run the following script to: - Remove other write permission from any world writable files - Add the sticky bit to all world writable directories</p> <pre><code>#!/usr/bin/env bash\n{\nl_smask='01000'\na_file=(); a_dir=() # Initialize arrays\na_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \"*/kubelet/plugins/*\" -a ! -path \"/sys/*\" -a ! -path \"/snap/*\")\nwhile IFS= read -r l_mount; do\nwhile IFS= read -r -d $'\\0' l_file; do\nif [ -e \"$l_file\" ]; then\nl_mode=\"$(stat -Lc '%#a' \"$l_file\")\"\nif [ -f \"$l_file\" ]; then # Remove excess permissions from WW files\necho -e \" - File: \\\"$l_file\\\" is mode: \\\"$l_mode\\\"\\n -removing write permission on \\\"$l_file\\\" from \\\"other\\\"\"\nchmod o-w \"$l_file\"\nfi\nif [ -d \"$l_file\" ]; then # Add sticky bit\nif [ ! $(( $l_mode &amp; $l_smask )) -gt 0 ]; then\necho -e \" - Directory: \\\"$l_file\\\" is mode: \\\"$l_mode\\\" and doesn't have the sticky bit set\\n - Adding the sticky bit\"\nchmod a+t \"$l_file\"\nfi\nfi\nfi\ndone &lt; &lt;(find \"$l_mount\" -xdev \\( \"${a_path[@]}\" \\) \\( -type f -o -type d \\) -perm -0002 -print0 2&gt; /dev/null)\ndone &lt; &lt;(findmnt -Dkerno fstype,target | awk '($1 !~/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~/^(\\/run\\/user\\/|\\/tmp|\\/var\\/tmp)/){print $2}')\n}\n</code></pre>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","T1548","TA0005","M1022","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.12-Ensure-no-files-or-directories-without-an-owner-and-a-group-exist/","title":"7.1.12 Ensure no files or directories without an owner and a group exist","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","TA0007","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.12-Ensure-no-files-or-directories-without-an-owner-and-a-group-exist/#audit","title":"Audit","text":"<p>Run the following script to verify no unowned or ungrouped files or directories exist: <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\"\na_nouser=(); a_nogroup=() # Initialize arrays\na_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \"*/kubelet/plugins/*\" -a ! -path \"/sys/fs/cgroup/memory/*\" -a ! -path \"/var/*/private/*\")\nwhile IFS= read -r l_mount; do\nwhile IFS= read -r -d $'\\0' l_file; do\nif [ -e \"$l_file\" ]; then\nwhile IFS=: read -r l_user l_group; do\n[ \"$l_user\" = \"UNKNOWN\" ] &amp;&amp; a_nouser+=(\"$l_file\")\n[ \"$l_group\" = \"UNKNOWN\" ] &amp;&amp; a_nogroup+=(\"$l_file\")\ndone &lt; &lt;(stat -Lc '%U:%G' \"$l_file\")\nfi\ndone &lt; &lt;(find \"$l_mount\" -xdev \\( \"${a_path[@]}\" \\) \\( -type f -o -type d \\) \\( -nouser -o -nogroup \\) -print0 2&gt; /dev/null)\ndone &lt; &lt;(findmnt -Dkerno fstype,target | awk '($1 !~/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~/^\\/run\\/user\\//){print $2}')\nif ! (( ${#a_nouser[@]} &gt; 0 )); then\nl_output=\"$l_output\\n - No files or directories without a owner exist on the local filesystem.\"\nelse\nl_output2=\"$l_output2\\n - There are \\\"$(printf '%s' \"${#a_nouser[@]}\")\\\" unowned files or directories on the system.\\n- The following is a list of unowned files and/or directories:\\n$(printf '%s\\n' \"${a_nouser[@]}\")\\n - end of list\"\nfi\nif ! (( ${#a_nogroup[@]} &gt; 0 )); then\nl_output=\"$l_output\\n - No files or directories without a group exist on the local filesystem.\"\nelse\nl_output2=\"$l_output2\\n - There are \\\"$(printf '%s' \"${#a_nogroup[@]}\")\\\" ungrouped files or directories on the system.\\n- The following is a list of ungrouped files and/or directories:\\n$(printf '%s\\n' \"${a_nogroup[@]}\")\\n- end of list\"\nfi\nunset a_path; unset a_arr ; unset a_nouser; unset a_nogroup # Remove arrays\nif [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass \necho -e \"\\n- Audit Result:\\n ** PASS **\\n - * Correctly configured * :\\n$l_output\\n\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :\\n$l_output2\"\n[ -n \"$l_output\" ] &amp;&amp; echo -e \"\\n- * Correctly configured * :\\n$l_output\\n\"\nfi\n}\n</code></pre></p> <p>Note: On systems with a large number of files and/or directories, this audit may be a long running process</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","TA0007","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.12-Ensure-no-files-or-directories-without-an-owner-and-a-group-exist/#remediation","title":"Remediation","text":"<p>Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","TA0007","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.13-Ensure-SUID-and-SGID-files-are-reviewed/","title":"7.1.13 Ensure SUID and SGID files are reviewed","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0004","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.13-Ensure-SUID-and-SGID-files-are-reviewed/#audit","title":"Audit","text":"<p>Run the following script to generate a list of SUID and SGID files: ```bash lineums=1</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0004","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.13-Ensure-SUID-and-SGID-files-are-reviewed/#usrbinenv-bash","title":"!/usr/bin/env bash","text":"<p>{ l_output=\"\" l_output2=\"\" a_suid=(); a_sgid=() # initialize arrays while IFS= read -r l_mount; do while IFS= read -r -d $'\\0' l_file; do if [ -e \"$l_file\" ]; then l_mode=\"$(stat -Lc '%#a' \"$l_file\")\" [ $(( $l_mode &amp; 04000 )) -gt 0 ] &amp;&amp; a_suid+=(\"$l_file\") [ $(( $l_mode &amp; 02000 )) -gt 0 ] &amp;&amp; a_sgid+=(\"$l_file\") fi done &lt; &lt;(find \"$l_mount\" -xdev -type f ( -perm -2000 -o -perm -4000 ) -print0 2&gt;/dev/null) done &lt; &lt;(findmnt -Dkerno fstype,target,options | awk '($1 !~/^\\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ &amp;&amp; $2 !~/^\\/run\\/user\\// &amp;&amp; $3 !~/noexec/ &amp;&amp; $3 !~/nosuid/) {print $2}') if ! (( ${#a_suid[@]} &gt; 0 )); then l_output=\"$l_output\\n - No executable SUID files exist on the system\" else l_output2=\"$l_output2\\n - List of \\\"$(printf '%s' \"${#a_suid[@]}\")\\\" SUID executable files:\\n$(printf '%s\\n' \"${a_suid[@]}\")\\n - end of list -\\n\" fi if ! (( ${#a_sgid[@]} &gt; 0 )); then l_output=\"$l_output\\n - No SGID files exist on the system\" else l_output2=\"$l_output2\\n - List of \\\"$(printf '%s' \"${#a_sgid[@]}\")\\\"SGID executable files:\\n$(printf '%s\\n' \"${a_sgid[@]}\")\\n - end of list -\\n\" fi [ -n \"$l_output2\" ] &amp;&amp; l_output2=\"$l_output2\\n- Review the preceding list(s) of SUID and/or SGID files to\\n- ensure that no rogue programs have been introduced onto the system.\\n\" unset a_arr; unset a_suid; unset a_sgid # Remove arrays</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0004","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.13-Ensure-SUID-and-SGID-files-are-reviewed/#if-l_output2-is-empty-nothing-to-report","title":"If l_output2 is empty, Nothing to report","text":"<p>if [ -z \"$l_output2\" ]; then echo -e \"\\n- Audit Result:\\n$l_output\\n\" else echo -e \"\\n- Audit Result:\\n$l_output2\\n\" [ -n \"$l_output\" ] &amp;&amp; echo -e \"$l_output\\n\" fi } ```</p> <p>Note: on systems with a large number of files, this may be a long running process</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0004","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.13-Ensure-SUID-and-SGID-files-are-reviewed/#remediation","title":"Remediation","text":"<p>Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Manual","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1548","T1548.001","TA0004","M1028"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.2-Ensure-permissions-on-etc-passwd-are-configured/","title":"7.1.2 Ensure permissions on /etc/passwd- are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.2-Ensure-permissions-on-etc-passwd-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/passwd- is mode 644 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: { %g/ %G)' /etc/passwd-\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.2-Ensure-permissions-on-etc-passwd-are-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd-: <pre><code># chmod u-x,go-wx /etc/passwd-\n# chown root:root /etc/passwd-\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.3-Ensure-permissions-on-etc-group-are-configured/","title":"7.1.3 Ensure permissions on /etc/group are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.3-Ensure-permissions-on-etc-group-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/group is mode 644 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/group\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.3-Ensure-permissions-on-etc-group-are-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to remove excess permissions, set owner, and set group on /etc/group: <pre><code># chmod u-x,go-wx /etc/group\n# chown root:root /etc/group\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.4-Ensure-permissions-on-etc-group-are-configured/","title":"7.1.4 Ensure permissions on /etc/group- are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.4-Ensure-permissions-on-etc-group-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/group- is mode 644 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/group-\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.4-Ensure-permissions-on-etc-group-are-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to remove excess permissions, set owner, and set group on /etc/group-: <pre><code># chmod u-x,go-wx /etc/group-\n# chown root:root /etc/group-\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.5-Ensure-permissions-on-etc-shadow-are-configured/","title":"7.1.5 Ensure permissions on /etc/shadow are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.5-Ensure-permissions-on-etc-shadow-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/shadow is mode 640 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/shadow\n</code></pre></p> <p>Example: <pre><code>Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.5-Ensure-permissions-on-etc-shadow-are-configured/#remediation","title":"Remediation","text":"<p>Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow: <pre><code># chown root:shadow /etc/shadow\n-OR-\n# chown root:root /etc/shadow\n</code></pre></p> <p>Run the following command to remove excess permissions form /etc/shadow: <pre><code># chmod u-x,g-wx,o-rwx /etc/shadow\n</code></pre></p> <p>Default Value: Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.6-Ensure-permissions-on-etc-shadow-are-configured/","title":"7.1.6 Ensure permissions on /etc/shadow- are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.6-Ensure-permissions-on-etc-shadow-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/shadow- is mode 640 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/shadow-\n</code></pre></p> <p>Example: <pre><code>Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.6-Ensure-permissions-on-etc-shadow-are-configured/#remediation","title":"Remediation","text":"<p>Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow: <pre><code># chown root:shadow /etc/shadow-\n-OR-\n# chown root:root /etc/shadow-\n</code></pre></p> <p>Run the following command to remove excess permissions form /etc/shadow-: <pre><code># chmod u-x,g-wx,o-rwx /etc/shadow-\n</code></pre></p> <p>Default Value: Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.7-Ensure-permissions-on-etc-gshadow-are-configured/","title":"7.1.7 Ensure permissions on /etc/gshadow are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.7-Ensure-permissions-on-etc-gshadow-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/gshadow is mode 640 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/gshadow\n</code></pre></p> <p>Example: <pre><code>Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.7-Ensure-permissions-on-etc-gshadow-are-configured/#remediation","title":"Remediation","text":"<p>Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow: <pre><code># chown root:shadow /etc/gshadow\n-OR-\n# chown root:root /etc/gshadow\n</code></pre></p> <p>Run the following command to remove excess permissions form /etc/gshadow: <pre><code># chmod u-x,g-wx,o-rwx /etc/gshadow\n</code></pre></p> <p>Default Value: Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.8-Ensure-permissions-on-etc-gshadow-are-configured/","title":"7.1.8 Ensure permissions on /etc/gshadow- are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.8-Ensure-permissions-on-etc-gshadow-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/gshadow- is mode 640 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/gshadow-\n</code></pre></p> <p>Example: <pre><code>Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.8-Ensure-permissions-on-etc-gshadow-are-configured/#remediation","title":"Remediation","text":"<p>Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow: <pre><code># chown root:shadow /etc/gshadow-\n-OR-\n# chown root:root /etc/gshadow-\n</code></pre></p> <p>Run the following command to remove excess permissions form /etc/gshadow-: <pre><code># chmod u-x,g-wx,o-rwx /etc/gshadow-\n</code></pre></p> <p>Default Value: Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.9-Ensure-permissions-on-etc-shells-are-configured/","title":"7.1.9 Ensure permissions on /etc/shells are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.9-Ensure-permissions-on-etc-shells-are-configured/#audit","title":"Audit","text":"<p>Run the following command to verify /etc/shells is mode 640 or more restrictive, Uid is 0/root and Gid is 0/root: <pre><code># stat -Lc 'Access: (%#a/%A) Uid: ( %u/ %U) Gid: ( %g/ %G)' /etc/shells\nAccess: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.1-System-File-Permissions/7.1.9-Ensure-permissions-on-etc-shells-are-configured/#remediation","title":"Remediation","text":"<p>Run the following commands to remove excess permissions, set owner, and set group on /etc/shells: <pre><code># chmod u-x,go-wx /etc/shells\n# chown root:root /etc/shells\n</code></pre></p> <p>Default Value: Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</p>","tags":["Level 1","Workstation","Server","System Maintenance","System File Permissions","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.1-Ensure-accounts-in-etc-passwd-use-shadowed-passwords/","title":"7.2.1 Ensure accounts in /etc/passwd use shadowed passwords","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.1-Ensure-accounts-in-etc-passwd-use-shadowed-passwords/#audit","title":"Audit","text":"<p>Run the following command and verify that no output is returned: <pre><code># awk -F: '($2 != \"x\" ) { print \"User: \\\"\" $1 \"\\\" is not set to shadowed passwords \"}' /etc/passwd\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.1-Ensure-accounts-in-etc-passwd-use-shadowed-passwords/#remediation","title":"Remediation","text":"<p>Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow: <pre><code># pwconv\n</code></pre></p> <p>Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG2","IG3","3.11 Encrypt Sensitive Data at Rest","T1003","T1003.008","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.10-Ensure-local-interactive-user-dot-files-access-is-configured/","title":"7.2.10 Ensure local interactive user dot files access is configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.001","T1222.002","T1152","T1152.003","T1152.004","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.10-Ensure-local-interactive-user-dot-files-access-is-configured/#audit","title":"Audit","text":"<p>Run the following script to verify local interactive user dot files - Don't include .forward, .rhost, or .netrc files - Are mode 0644 or more restrictive - Are owned by the local interactive user - Are group owned by the user's primary group - .bash_history is mode 0600 or more restrictive</p> <p>Note: If a .netrc file is required, and follows local site policy, it should be mode 0600 or more restrictive.</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=(); a_output3=()\nl_maxsize=\"1000\" # Maximum number of local interactive users before warning (Default 1,000)\nl_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\na_user_and_home=() # Create array with local users and their home directories\nwhile read -r l_local_user l_local_user_home; do # Populate array with users and user home location\n[[ -n \"$l_local_user\" &amp;&amp; -n \"$l_local_user_home\" ]] &amp;&amp; a_user_and_home+=(\"$l_local_user:$l_local_user_home\")\ndone &lt;&lt;&lt; \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\nl_asize=\"${#a_user_and_home[@]}\" # Here if we want to look at number of users before proceeding\n[ \"${#a_user_and_home[@]}\" -gt \"$l_maxsize\" ] &amp;&amp; printf '%s\\n' \"\" \" ** INFO **\" \\\" - \\\"$l_asize\\\" Local interactive users found on the system\" \\\" - This may be a long running check\" \"\"\nfile_access_chk()\n{\na_access_out=()\nl_max=\"$( printf '%o' $(( 0777 &amp; ~$l_mask)) )\"\nif [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then\na_access_out+=(\" - File: \\\"$l_hdfile\\\" is mode: \\\"$l_mode\\\" and should be mode: \\\"$l_max\\\" or more restrictive\")\nfi\nif [[ ! \"$l_owner\" =~ ($l_user) ]]; then\na_access_out+=(\" - File: \\\"$l_hdfile\\\" owned by: \\\"$l_owner\\\" and should be owned by \\\"${l_user//|/ or }\\\"\")\nfi\nif [[ ! \"$l_gowner\" =~ ($l_group) ]]; then\na_access_out+=(\" - File: \\\"$l_hdfile\\\" group owned by: \\\"$l_gowner\\\" and should be group owned by \\\"${l_group//|/ or }\\\"\")\nfi\n}\nwhile IFS=: read -r l_user l_home; do\na_dot_file=(); a_netrc=(); a_netrc_warn=(); a_bhout=(); a_hdirout=()\nif [ -d \"$l_home\" ]; then\nl_group=\"$(id -gn \"$l_user\" | xargs)\";l_group=\"${l_group// /|}\"\nwhile IFS= read -r -d $'\\0' l_hdfile; do\nwhile read -r l_mode l_owner l_gowner; do\ncase \"$(basename \"$l_hdfile\")\" in .forward | .rhost )\na_dot_file+=(\" - File: \\\"$l_hdfile\\\" exists\") ;; .netrc )\nl_mask='0177'; file_access_chk\nif [ \"${#a_access_out[@]}\" -gt 0 ]; then\na_netrc+=(\"${a_access_out[@]}\")\nelse\na_netrc_warn+=(\"- File: \\\"$l_hdfile\\\" exists\")\nfi ;; .bash_history )\nl_mask='0177'; file_access_chk\n[ \"${#a_access_out[@]}\" -gt 0 ] &amp;&amp; a_bhout+=(\"${a_access_out[@]}\") ;; * )\nl_mask='0133'; file_access_chk\n[ \"${#a_access_out[@]}\" -gt 0 ] &amp;&amp; a_hdirout+=(\"${a_access_out[@]}\") ;;\nesac\ndone &lt; &lt;(stat -Lc '%#a %U %G' \"$l_hdfile\")\ndone &lt; &lt;(find \"$l_home\" -xdev -type f -name '.*' -print0)\nfi\nif [[ \"${#a_dot_file[@]}\" -gt 0 || \"${#a_netrc[@]}\" -gt 0 || \"${#a_bhout[@]}\" -gt 0 || \"${#a_hdirout[@]}\" -gt 0 ]]; then\na_output2+=(\" - User: \\\"$l_user\\\" Home Directory: \\\"$l_home\\\"\" \"${a_dot_file[@]}\" \"${a_netrc[@]}\" \"${a_bhout[@]}\" \"${a_hdirout[@]}\")\nfi\n[ \"${#a_netrc_warn[@]}\" -gt 0 ] &amp;&amp; a_output3+=(\" - User: \\\"$l_user\\\" Home Directory: \\\"$l_home\\\"\" \"${a_netrc_warn[@]}\")\ndone &lt;&lt;&lt; \"$(printf '%s\\n' \"${a_user_and_home[@]}\")\"\nif [ \"${#a_output2[@]}\" -le 0 ]; then # If l_output2 is empty, we pass\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \" ** WARNING **\" \"${a_output3[@]}\"\nprintf '%s\\n' \"- Audit Result:\" \" ** PASS **\"\nelse\nprintf '%s\\n' \"- Audit Result:\" \" ** FAIL **\" \" - * Reasons for audit failure * :\" \"${a_output2[@]}\" \"\"\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \" ** WARNING **\" \"${a_output3[@]}\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.001","T1222.002","T1152","T1152.003","T1152.004","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.10-Ensure-local-interactive-user-dot-files-access-is-configured/#remediation","title":"Remediation","text":"<p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy. The following script will: - remove excessive permissions on dot files within interactive users' home directories - change ownership of dot files within interactive users' home directories to the user - change group ownership of dot files within interactive users' home directories to the user's primary group - list .forward and .rhost files to be investigated and manually deleted</p> <pre><code>#!/usr/bin/env bash\n{\na_output2=(); a_output3=()\nl_maxsize=\"1000\" # Maximum number of local interactive users before warning (Default 1,000)\nl_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\na_user_and_home=() # Create array with local users and their home directories\nwhile read -r l_local_user l_local_user_home; do # Populate array with users and user home location\n[[ -n \"$l_local_user\" &amp;&amp; -n \"$l_local_user_home\" ]] &amp;&amp; a_user_and_home+=(\"$l_local_user:$l_local_user_home\")\ndone &lt;&lt;&lt; \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\nl_asize=\"${#a_user_and_home[@]}\" # Here if we want to look at number of users before proceeding\n[ \"${#a_user_and_home[@]}\" -gt \"$l_maxsize\" ] &amp;&amp; printf '%s\\n' \"\" \" ** INFO **\" \\\" - \\\"$l_asize\\\" Local interactive users found on the system\" \\\" - This may be a long running check\" \"\"\nfile_access_fix()\n{\na_access_out=()\nl_max=\"$( printf '%o' $(( 0777 &amp; ~$l_mask)) )\"\nif [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then\nprintf '%s\\n' \"\" \" - File: \\\"$l_hdfile\\\" is mode: \\\"$l_mode\\\" and should be mode: \\\"$l_max\\\" or more restrictive\" \\\"Updating file: \\\"$l_hdfile\\\" to be mode: \\\"$l_max\\\" or more restrictive\"\nchmod \"$l_change\" \"$l_hdfile\"\nfi\nif [[ ! \"$l_owner\" =~ ($l_user) ]]; then\nprintf '%s\\n' \"\" \" - File: \\\"$l_hdfile\\\" owned by: \\\"$l_owner\\\" and should be owned by \\\"${l_user//|/ or }\\\"\" \\\"Updating file: \\\"$l_hdfile\\\" to be owned by \\\"${l_user//|/ or }\\\"\"\nchown \"$l_user\" \"$l_hdfile\"\nfi\nif [[ ! \"$l_gowner\" =~ ($l_group) ]]; then\nprintf '%s\\n' \"\" \" - File: \\\"$l_hdfile\\\" group owned by: \\\"$l_gowner\\\" and should be group owned by \\\"${l_group//|/ or }\\\"\" \\\"Updating file: \\\"$l_hdfile\\\" to be group owned by \\\"${l_group//|/ or }\\\"\"\nchgrp \"$l_group\" \"$l_hdfile\"\nfi\n}\nwhile IFS=: read -r l_user l_home; do\na_dot_file=(); a_netrc=(); a_netrc_warn=(); a_bhout=(); a_hdirout=()\nif [ -d \"$l_home\" ]; then\nl_group=\"$(id -gn \"$l_user\" | xargs)\";l_group=\"${l_group// /|}\"\nwhile IFS= read -r -d $'\\0' l_hdfile; do\nwhile read -r l_mode l_owner l_gowner; do\ncase \"$(basename \"$l_hdfile\")\" in .forward | .rhost )\na_dot_file+=(\" - File: \\\"$l_hdfile\\\" exists\" \"Please review and manually delete this file\") ;; .netrc )\nl_mask='0177'; l_change=\"u-x,go-rwx\"; file_access_fix\na_netrc_warn+=(\"- File: \\\"$l_hdfile\\\" exists\") ;; .bash_history )\nl_mask='0177'; l_change=\"u-x,go-rwx\"; file_access_fix ;; * )\nl_mask='0133'; l_change=\"u-x,go-wx\"; file_access_fix ;;\nesac\ndone &lt; &lt;(stat -Lc '%#a %U %G' \"$l_hdfile\")\ndone &lt; &lt;(find \"$l_home\" -xdev -type f -name '.*' -print0)\nfi\n[ \"${#a_dot_file[@]}\" -gt 0 ] &amp;&amp; a_output2+=(\" - User: \\\"$l_user\\\" Home Directory: \\\"$l_home\\\"\" \"${a_dot_file[@]}\")\n[ \"${#a_netrc_warn[@]}\" -gt 0 ] &amp;&amp; a_output3+=(\" - User: \\\"$l_user\\\" Home Directory: \\\"$l_home\\\"\" \"${a_netrc_warn[@]}\")\ndone &lt;&lt;&lt; \"$(printf '%s\\n' \"${a_user_and_home[@]}\")\"\n[ \"${#a_output3[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \" ** WARNING **\" \"${a_output3[@]}\" \"\"\n[ \"${#a_output2[@]}\" -gt 0 ] &amp;&amp; printf '%s\\n' \"\" \"${a_output2[@]}\"\n}\n</code></pre>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.001","T1222.002","T1152","T1152.003","T1152.004","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.2-Ensure-etc-shadow-password-fields-are-not-empty/","title":"7.2.2 Ensure /etc/shadow password fields are not empty","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.2-Ensure-etc-shadow-password-fields-are-not-empty/#audit","title":"Audit","text":"<p>Run the following command and verify that no output is returned: <pre><code># awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}' /etc/shadow\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.2-Ensure-etc-shadow-password-fields-are-not-empty/#remediation","title":"Remediation","text":"<p>If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password: <pre><code># passwd -l &lt;username&gt;\n</code></pre></p> <p>Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","5.2 Use Unique Passwords","T1078","T1078.001","T1078.003","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.3-Ensure-all-groups-in-etc-passwd-exist-in-etc-group/","title":"7.2.3 Ensure all groups in /etc/passwd exist in /etc/group","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","Nothing should be returned","IG1","IG2","IG3","T1222","T1222.002","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.3-Ensure-all-groups-in-etc-passwd-exist-in-etc-group/#audit","title":"Audit","text":"<p>Run the following script to verify all GIDs in /etc/passwd exist in /etc/group: <pre><code>#!/usr/bin/env bash\n{\na_passwd_group_gid=(\"$(awk -F: '{print $4}' /etc/passwd | sort -u)\")\na_group_gid=(\"$(awk -F: '{print $3}' /etc/group | sort -u)\")\na_passwd_group_diff=(\"$(printf '%s\\n' \"${a_group_gid[@]}\" \"${a_passwd_group_gid[@]}\" | sort | uniq -u)\")\nwhile IFS= read -r l_gid; do\nawk -F: '($4 == '\"$l_gid\"') {print \" - User: \\\"\" $1 \"\\\" has GID: \\\"\"$4 \"\\\" which does not exist in /etc/group\" }' /etc/passwd\ndone &lt; &lt;(printf '%s\\n' \"${a_passwd_group_gid[@]}\" \"${a_passwd_group_diff[@]}\" | sort | uniq -D | uniq)\nunset a_passwd_group_gid; unset a_group_gid; unset a_passwd_group_diff\n}\n</code></pre> Nothing should be returned</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","Nothing should be returned","IG1","IG2","IG3","T1222","T1222.002","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.3-Ensure-all-groups-in-etc-passwd-exist-in-etc-group/#remediation","title":"Remediation","text":"<p>Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","Nothing should be returned","IG1","IG2","IG3","T1222","T1222.002","TA0003","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.4-Ensure-shadow-group-is-empty/","title":"7.2.4 Ensure shadow group is empty","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.4-Ensure-shadow-group-is-empty/#audit","title":"Audit","text":"<p>Run the following commands and verify no results are returned: <pre><code># awk -F: '($1==\"shadow\") {print $NF}' /etc/group\n# awk -F: '($4 == '\"$(getent group shadow | awk -F: '{print $3}' | xargs)\"') {print \" - user: \\\"\" $1 \"\\\" primary group is the shadow group\"}' /etc/passwd\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.4-Ensure-shadow-group-is-empty/#remediation","title":"Remediation","text":"<p>Run the following command to remove all users from the shadow group <pre><code># sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\\1/' /etc/group\n</code></pre></p> <p>Change the primary group of any users with shadow as their primary group. <pre><code># usermod -g &lt;primary group&gt; &lt;user&gt;\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1003","T1003.008","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.5-Ensure-no-duplicate-UIDs-exist/","title":"7.2.5 Ensure no duplicate UIDs exist","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0005","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.5-Ensure-no-duplicate-UIDs-exist/#audit","title":"Audit","text":"<p>Run the following script and verify no results are returned: <pre><code>#!/usr/bin/env bash\n{\nwhile read -r l_count l_uid; do\nif [ \"$l_count\" -gt 1 ]; then\necho -e \"Duplicate UID: \\\"$l_uid\\\" Users: \\\"$(awk -F: '($3 == n) { print $1 }' n=$l_uid /etc/passwd | xargs)\\\"\"\nfi\ndone &lt; &lt;(cut -f3 -d\":\" /etc/passwd | sort -n | uniq -c)\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0005","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.5-Ensure-no-duplicate-UIDs-exist/#remediation","title":"Remediation","text":"<p>Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0005","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.6-Ensure-no-duplicate-GIDs-exist/","title":"7.2.6 Ensure no duplicate GIDs exist","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0005","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.6-Ensure-no-duplicate-GIDs-exist/#audit","title":"Audit","text":"<p>Run the following script and verify no results are returned: <pre><code>#!/usr/bin/env bash\n{\nwhile read -r l_count l_gid; do\nif [ \"$l_count\" -gt 1 ]; then\necho -e \"Duplicate GID: \\\"$l_gid\\\" Groups: \\\"$(awk -F: '($3 == n) { print $1 }' n=$l_gid /etc/group | xargs)\\\"\"\nfi\ndone &lt; &lt;(cut -f3 -d\":\" /etc/group | sort -n | uniq -c)\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0005","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.6-Ensure-no-duplicate-GIDs-exist/#remediation","title":"Remediation","text":"<p>Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0005","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.7-Ensure-no-duplicate-user-names-exist/","title":"7.2.7 Ensure no duplicate user names exist","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0004","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.7-Ensure-no-duplicate-user-names-exist/#audit","title":"Audit","text":"<p>Run the following script and verify no results are returned: <pre><code>#!/usr/bin/env bash\n{\nwhile read -r l_count l_user; do\nif [ \"$l_count\" -gt 1 ]; then\necho -e \"Duplicate User: \\\"$l_user\\\" Users: \\\"$(awk -F: '($1 == n) { print $1 }' n=$l_user /etc/passwd | xargs)\\\"\"\nfi\ndone &lt; &lt;(cut -f1 -d\":\" /etc/group | sort -n | uniq -c)\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0004","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.7-Ensure-no-duplicate-user-names-exist/#remediation","title":"Remediation","text":"<p>Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0004","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.8-Ensure-no-duplicate-group-names-exist/","title":"7.2.8 Ensure no duplicate group names exist","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0004","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.8-Ensure-no-duplicate-group-names-exist/#audit","title":"Audit","text":"<p>Run the following script and verify no results are returned: <pre><code>#!/usr/bin/env bash\n{\nwhile read -r l_count l_group; do\nif [ \"$l_count\" -gt 1 ]; then\necho -e \"Duplicate Group: \\\"$l_group\\\" Groups: \\\"$(awk -F: '($1 == n) { print $1 }' n=$l_group /etc/group | xargs)\\\"\"\nfi\ndone &lt; &lt;(cut -f1 -d\":\" /etc/group | sort -n | uniq -c)\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0004","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.8-Ensure-no-duplicate-group-names-exist/#remediation","title":"Remediation","text":"<p>Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.</p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","T1078","T1078.001","T1078.003","TA0004","M1027"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.9-Ensure-local-interactive-user-home-directories-are-configured/","title":"7.2.9 Ensure local interactive user home directories are configured","text":"","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.9-Ensure-local-interactive-user-home-directories-are-configured/#audit","title":"Audit","text":"<p>Run the following script to Ensure: - local interactive user home directories exist - Ensure local interactive users own their home directories - Ensure local interactive user home directories are mode 750 or more restrictive <pre><code>#!/usr/bin/env bash\n{\nl_output=\"\" l_output2=\"\" l_heout2=\"\" l_hoout2=\"\" l_haout2=\"\"\nl_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\nunset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array\nwhile read -r l_epu l_eph; do # Populate array with users and user home location\na_uarr+=(\"$l_epu $l_eph\")\ndone &lt;&lt;&lt; \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \"$(NF-1) }' /etc/passwd)\"\nl_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n[ \"$l_asize \" -gt \"10000\" ] &amp;&amp; echo -e \"\\n ** INFO **\\n - \\\"$l_asize\\\"Local interactive users found on the system\\n - This may be a long running check\\n\"\nwhile read -r l_user l_home; do\nif [ -d \"$l_home\" ]; then\nl_mask='0027'\nl_max=\"$( printf '%o' $(( 0777 &amp; ~$l_mask)) )\"\nwhile read -r l_own l_mode; do\n[ \"$l_user\" != \"$l_own\" ] &amp;&amp; l_hoout2=\"$l_hoout2\\n - User: \\\"$l_user\\\" Home \\\"$l_home\\\" is owned by: \\\"$l_own\\\"\"\nif [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then\nl_haout2=\"$l_haout2\\n - User: \\\"$l_user\\\" Home \\\"$l_home\\\" is mode: \\\"$l_mode\\\" should be mode: \\\"$l_max\\\" or more restrictive\"\nfi\ndone &lt;&lt;&lt; \"$(stat -Lc '%U %#a' \"$l_home\")\"\nelse\nl_heout2=\"$l_heout2\\n - User: \\\"$l_user\\\" Home \\\"$l_home\\\" Doesn't exist\"\nfi\ndone &lt;&lt;&lt; \"$(printf '%s\\n' \"${a_uarr[@]}\")\"\n[ -z \"$l_heout2\" ] &amp;&amp; l_output=\"$l_output\\n- home directories exist\" || l_output2=\"$l_output2$l_heout2\"\n[ -z \"$l_hoout2\" ] &amp;&amp; l_output=\"$l_output\\n- own their home directory\" || l_output2=\"$l_output2$l_hoout2\"\n[ -z \"$l_haout2\" ] &amp;&amp; l_output=\"$l_output\\n- home directories are mode:\\\"$l_max\\\" or more restrictive\" || l_output2=\"$l_output2$l_haout2\"\n[ -n \"$l_output\" ] &amp;&amp; l_output=\" - All local interactive users:$l_output\"\nif [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\necho -e \"\\n- Audit Result:\\n ** PASS **\\n - * Correctly configured * :\\n$l_output\"\nelse\necho -e \"\\n- Audit Result:\\n ** FAIL **\\n - * Reasons for audit failure * :\\n$l_output2\"\n[ -n \"$l_output\" ] &amp;&amp; echo -e \"\\n- * Correctly configured * :\\n$l_output\"\nfi\n}\n</code></pre></p>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","TA0005","M1022"]},{"location":"7-System-Maintenance/7.2-Local-User-and-Group-Settings/7.2.9-Ensure-local-interactive-user-home-directories-are-configured/#remediation","title":"Remediation","text":"<p>If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following: - Lock the user account - Remove the user from the system - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.</p> <p>Run the following script to: - Remove excessive permissions from local interactive users home directories - Update the home directory's owner</p> <pre><code>#!/usr/bin/env bash\n{\nl_output2=\"\"\nl_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\nunset a_uarr &amp;&amp; a_uarr=() # Clear and initialize array\nwhile read -r l_epu l_eph; do # Populate array with users and user home location\na_uarr+=(\"$l_epu $l_eph\")\ndone &lt;&lt;&lt; \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\nl_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n[ \"$l_asize \" -gt \"10000\" ] &amp;&amp; echo -e \"\\n ** INFO **\\n - \\\"$l_asize\\\"Local interactive users found on the system\\n - This may be a long running process\\n\"\nwhile read -r l_user l_home; do\nif [ -d \"$l_home\" ]; then\nl_mask='0027'\nl_max=\"$( printf '%o' $(( 0777 &amp; ~$l_mask)) )\"\nwhile read -r l_own l_mode; do\nif [ \"$l_user\" != \"$l_own\" ]; then\nl_output2=\"$l_output2\\n - User: \\\"$l_user\\\" Home \\\"$l_home\\\"is owned by: \\\"$l_own\\\"\\n - changing ownership to: \\\"$l_user\\\"\\n\"\nchown \"$l_user\" \"$l_home\"\nfi\nif [ $(( $l_mode &amp; $l_mask )) -gt 0 ]; then\nl_output2=\"$l_output2\\n - User: \\\"$l_user\\\" Home \\\"$l_home\\\"is mode: \\\"$l_mode\\\" should be mode: \\\"$l_max\\\" or more restrictive\\n - removing excess permissions\\n\"\nchmod g-w,o-rwx \"$l_home\"\nfi\ndone &lt;&lt;&lt; \"$(stat -Lc '%U %#a' \"$l_home\")\"\nelse\nl_output2=\"$l_output2\\n - User: \\\"$l_user\\\" Home \\\"$l_home\\\"\nDoesn't exist\\n - Please create a home in accordance with local site policy\"\nfi\ndone &lt;&lt;&lt; \"$(printf '%s\\n' \"${a_uarr[@]}\")\"\nif [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\necho -e \" - No modification needed to local interactive users home directories\"\nelse\necho -e \"\\n$l_output2\"\nfi\n}\n</code></pre>","tags":["Level 1","Workstation","Server","System Maintenance","Local User and Group Settings","Automated","IG1","IG2","IG3","3.3 Configure Data Access Control Lists","T1222","T1222.002","TA0005","M1022"]}]}